{"version":3,"sources":["ng://jw-bootstrap-switch-ng2/lib/jw-bootstrap-switch-ng2.component.ts","ng://jw-bootstrap-switch-ng2/lib/jw-bootstrap-switch-ng2.module.ts"],"names":["callback","CUSTOM_INPUT","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","JwBootstrapSwitchNg2Component","multi","cd","render","this","handleWidth","labelWidth","labelText","inverse","baseClass","onText","offText","disabled","readonly","_focused","_size","_animate","_innerAnimate","_indeterminate","_onColor","_offColor","_wrapperClass","_innerState","_innerHandleWidth","_innerLabelWidth","_dragStart","_dragEnd","_onTouchedCallback","_onChangeCallback","changeState","EventEmitter","prototype","$on","on","nativeElement","$off","off","$label","label","$container","container","getWrapperClasses","output","getOnClasses","getOffClasses","getLabelMarginLeft","width","ngOnChanges","changes","calculateWith","ngAfterViewInit","onClick","setStateValue","onKeyDown","e","which","preventDefault","stopImmediatePropagation","onDragStart","target","stopPropagation","pageX","touches","parseInt","style","marginLeft","onDragMove","difference","Number","onDragEnd","removeDragEnd","state","onTouchStart","onMouseDown","onTouchMove","onMouseMove","onMouseUp","onTouchEnd","onMouseLeave","onFocus","onBlur","disableAnimation","_this","setTimeout","setStyle","Math","max","offsetWidth","markForCheck","Object","defineProperty","value","v","emit","previousValue","currentValue","writeValue","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","Component","args","selector","providers","template","ChangeDetectorRef","Renderer2","Output","ViewChild","HostListener","Input","JwBootstrapSwitchNg2Module","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["import {\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    Output,\r\n    HostListener,\r\n    AfterViewInit,\r\n    forwardRef,\r\n    SimpleChanges,\r\n    EventEmitter,\r\n    ViewChild,\r\n    OnChanges,\r\n    Renderer2,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nconst callback = () => {\r\n};\r\n\r\nconst CUSTOM_INPUT: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => JwBootstrapSwitchNg2Component),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'bSwitch',\r\n    providers: [CUSTOM_INPUT],\r\n    template: `\r\n      <div [ngClass]=\"getWrapperClasses()\" [style.width]=\"(handleWidth  + labelWidth ) +'px'\">\r\n          <div #container [ngClass]=\"baseClass + '-container'\"\r\n               [style.width]=\"((handleWidth * 2) + labelWidth) +'px'\"\r\n               [style.margin-left]=\"getLabelMarginLeft()\"><!--\r\n              --><span #on [innerHTML]=\"(inverse) ? offText : onText\"\r\n                [ngClass]=\"(inverse) ? getOffClasses() : getOnClasses()\"></span><!--\r\n              --><span #label [ngClass]=\"baseClass + '-label'\">&nbsp;{{ labelText }}</span><!--\r\n              --><span #off [innerHTML]=\"(inverse) ? onText : offText\"\r\n                [ngClass]=\"(inverse) ? getOnClasses() : getOffClasses()\"></span><!--\r\n              --><input type=\"checkbox\" [(ngModel)]=\"value\" [readonly]=\"readonly\" [disabled]=\"disabled\"\r\n                     (focus)=\"onFocus()\" (blur)=\"onBlur()\">\r\n          </div>\r\n      </div>`\r\n})\r\n\r\nexport class JwBootstrapSwitchNg2Component implements AfterViewInit, ControlValueAccessor, OnChanges {\r\n    // Defining Default Options for Switch\r\n    public handleWidth: number = 0;\r\n    public labelWidth: number = 0;\r\n    public labelText: string = '';\r\n    public inverse: boolean = false;\r\n    public baseClass: string = 'bootstrap-switch';\r\n    public onText: string = 'ON';\r\n    public offText: string = 'OFF';\r\n    public disabled: boolean = false;\r\n    public readonly: boolean = false;\r\n\r\n    private _focused: boolean = false;\r\n    private _size: any = 'normal';\r\n    private _animate: boolean = true;\r\n    private _innerAnimate: boolean = true;\r\n    private _indeterminate: boolean = false;\r\n    private _onColor: string = 'primary';\r\n    private _offColor: string = 'default';\r\n    private _wrapperClass: string = 'wrapper';\r\n    private _innerState: boolean = false;\r\n    private _innerHandleWidth: string | number = 'auto';\r\n    private _innerLabelWidth: string | number = 'auto';\r\n\r\n    private _dragStart: any = null;\r\n    private _dragEnd: any = null;\r\n\r\n    private _onTouchedCallback: () => void = callback;\r\n    private _onChangeCallback: (_: any) => void = callback;\r\n\r\n    @Output() changeState: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    // Defining DOM Elements\r\n    @ViewChild('container') container: ElementRef;\r\n    @ViewChild('on') on: ElementRef;\r\n    @ViewChild('label') label: ElementRef;\r\n    @ViewChild('off') off: ElementRef;\r\n\r\n    private $on(): any {\r\n        return this.on.nativeElement;\r\n    }\r\n\r\n    private $off(): any {\r\n        return this.off.nativeElement;\r\n    }\r\n\r\n    private $label(): any {\r\n        return this.label.nativeElement;\r\n    }\r\n\r\n    private $container(): any {\r\n        return this.container.nativeElement;\r\n    }\r\n\r\n    /**\r\n     * @description:  Function to set the Classes for the Wrapper Div\r\n     * @returns string\r\n     */\r\n    public getWrapperClasses() {\r\n        let output: string = this.baseClass + ' ' + this.baseClass + '-' + this._wrapperClass;\r\n\r\n        if (this._focused) {\r\n            output += ' ' + this.baseClass + '-focused';\r\n        }\r\n        if (this.readonly) {\r\n            output += ' ' + this.baseClass + '-readonly';\r\n        }\r\n\r\n        if (this._size != null) {\r\n            output += ' ' + this.baseClass + '-' + this._size;\r\n        }\r\n\r\n        if (this._innerState) {\r\n            output += ' ' + this.baseClass + '-on';\r\n        } else {\r\n            output += ' ' + this.baseClass + '-off';\r\n        }\r\n\r\n        if (this._animate) {\r\n            output += ' ' + this.baseClass + '-animate';\r\n        }\r\n\r\n        if (this.disabled) {\r\n            output += ' ' + this.baseClass + '-disabled';\r\n        }\r\n\r\n        if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\r\n            output += ' ' + this.baseClass + '-indeterminate';\r\n        }\r\n\r\n        if (this.inverse) {\r\n            output += ' ' + this.baseClass + '-inverse';\r\n        }\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * @description Function to set the css classes for #on\r\n     * @returns string\r\n     */\r\n    public getOnClasses(): string {\r\n        let output: string = this.baseClass + '-handle-on';\r\n\r\n        if (this._onColor) {\r\n            output += ' ' + this.baseClass + '-' + this._onColor;\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * @description Function to set the css classes for #off\r\n     * @returns string\r\n     */\r\n    public getOffClasses(): string {\r\n        let output: string = this.baseClass + '-handle-off';\r\n\r\n        if (this._offColor) {\r\n            output += ' ' + this.baseClass + '-' + this._offColor;\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * @description  Function set the marging of the #label when change the state\r\n     * @returns string\r\n     */\r\n    public getLabelMarginLeft(): string {\r\n        let width = (this.inverse) ? -this.handleWidth : 0;\r\n        if (this._indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\r\n            width = -(this.handleWidth / 2);\r\n        } else if (this._dragEnd) {\r\n            width = this._dragEnd;\r\n        } else if (!this._innerState) {\r\n            if (!this.inverse) {\r\n                width = -this.handleWidth;\r\n            } else {\r\n                width = 0;\r\n            }\r\n        }\r\n        return width + 'px';\r\n    }\r\n\r\n    constructor(private cd: ChangeDetectorRef, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['setLabelText'] ||\r\n            changes['setOnText'] ||\r\n            changes['setHandleWidth'] ||\r\n            changes['setLabelWidth'] ||\r\n            changes['setOffText'] ||\r\n            changes['setSize']) {\r\n            this.calculateWith(true);\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.calculateWith();\r\n    }\r\n\r\n    @HostListener('click') onClick() {\r\n        if (!this.disabled && !this.readonly && !this._dragEnd) {\r\n            this.setStateValue(!this._innerState);\r\n        } else if (this._dragEnd) {\r\n            this._dragEnd = null;\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event']) onKeyDown(e: KeyboardEvent) {\r\n        if (!e.which || this.disabled || this.readonly) {\r\n            return;\r\n        }\r\n        switch (e.which) {\r\n            case 37:\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                this.setStateValue(false);\r\n                break;\r\n            case 39:\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                this.setStateValue(true);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    private onDragStart(e: any): void {\r\n        if (e.target === this.$label()) {\r\n            if (this._dragStart || this.disabled || this.readonly) {\r\n                return;\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._dragStart = (e.pageX || e.touches[0].pageX) - parseInt(this.$container().style.marginLeft, 10);\r\n            if (this._animate) {\r\n                this._animate = !this._animate;\r\n            }\r\n        }\r\n    }\r\n\r\n    private onDragMove(e: any): void {\r\n        if (this._dragStart) {\r\n            e.preventDefault();\r\n            const difference = (e.pageX || e.touches[0].pageX) - this._dragStart;\r\n            if (difference < -Number(this.handleWidth) || difference > 0) {\r\n                return;\r\n            }\r\n            this._dragEnd = difference;\r\n        }\r\n    }\r\n\r\n    private onDragEnd(e: Event, removeDragEnd: boolean = false) {\r\n        if (this._dragStart) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (this._dragEnd) {\r\n                const state = this._dragEnd > -(Number(this.handleWidth) / 2);\r\n                this.setStateValue((this.inverse) ? !state : state);\r\n            }\r\n            this._dragStart = null;\r\n            if (removeDragEnd) {\r\n                this._dragEnd = null;\r\n            }\r\n            if (this._innerAnimate) {\r\n                this._animate = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('touchstart', ['$event']) onTouchStart(e: any) {\r\n        this.onDragStart(e);\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event']) onMouseDown(e: any) {\r\n        this.onDragStart(e);\r\n    }\r\n\r\n    @HostListener('touchmove', ['$event']) onTouchMove(e: any) {\r\n        this.onDragMove(e);\r\n    }\r\n\r\n    @HostListener('mousemove', ['$event']) onMouseMove(e: any) {\r\n        this.onDragMove(e);\r\n    }\r\n\r\n    @HostListener('mouseup', ['$event']) onMouseUp(e: Event) {\r\n        this.onDragEnd(e);\r\n    }\r\n\r\n    @HostListener('touchend', ['$event']) onTouchEnd(e: Event) {\r\n        this.onDragEnd(e, true);\r\n    }\r\n\r\n    @HostListener('mouseleave', ['$event']) onMouseLeave(e: Event) {\r\n        this.onDragEnd(e, true);\r\n    }\r\n\r\n    onFocus() {\r\n        this._focused = true;\r\n    }\r\n\r\n    onBlur() {\r\n        this._focused = false;\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    /**\r\n     * @description Function to make recalculate the size of the elements when options change\r\n     * @param disableAnimation\r\n     */\r\n    private calculateWith(disableAnimation: boolean = false): void {\r\n        if (disableAnimation && this._innerAnimate) {\r\n            this._animate = false;\r\n        }\r\n        setTimeout(() => {\r\n            this.render.setStyle(this.$on(), 'width', 'auto');\r\n            this.render.setStyle(this.$off(), 'width', 'auto');\r\n            this.render.setStyle(this.$label(), 'width', 'auto');\r\n\r\n            const width = (this._innerHandleWidth === 'auto')\r\n                ? Math.max(this.$on().offsetWidth, this.$off().offsetWidth)\r\n                : this._innerHandleWidth;\r\n\r\n            if (this.$label().offsetWidth < width) {\r\n                if (this._innerLabelWidth === 'auto') {\r\n                    this.labelWidth = Number(width);\r\n                } else {\r\n                    this.labelWidth = Number(this._innerLabelWidth);\r\n                }\r\n            } else {\r\n                if (this._innerLabelWidth === 'auto') {\r\n                    this.labelWidth = this.$label().offsetWidth;\r\n                } else {\r\n                    this.labelWidth = Number(this._innerLabelWidth);\r\n                }\r\n            }\r\n\r\n            this.handleWidth = Number(width);\r\n\r\n            this.render.setStyle(this.$label(), 'width', this.labelWidth + 'px');\r\n            this.render.setStyle(this.$on(), 'width', this.handleWidth + 'px');\r\n            this.render.setStyle(this.$off(), 'width', this.handleWidth + 'px');\r\n            setTimeout(() => {\r\n                if (disableAnimation && this._innerAnimate) {\r\n                    this._animate = true;\r\n                }\r\n            });\r\n            this.cd.markForCheck();\r\n        });\r\n    }\r\n\r\n    // Functions to set inputs and the private variables of the Switch\r\n    @Input('switch-base-class') set setBaseClass(value: string) {\r\n        this.baseClass = value;\r\n    }\r\n\r\n    @Input('switch-wrapper-class') set setWrapperClass(value: string) {\r\n        this._wrapperClass = value;\r\n    }\r\n\r\n    @Input('switch-off-text') set setOffText(value: string) {\r\n        this.offText = (value) ? value : 'OFF';\r\n    }\r\n\r\n    @Input('switch-label-text') set setLabelText(value: string) {\r\n        this.labelText = value;\r\n    }\r\n\r\n    @Input('switch-on-text') set setOnText(value: string) {\r\n        this.onText = (value) ? value : 'ON';\r\n    }\r\n\r\n    @Input('switch-size') set setSize(value: string) {\r\n        if (value) {\r\n            this._size = value;\r\n        }\r\n    }\r\n\r\n    @Input('switch-animate') set setAnimate(value: boolean) {\r\n        this._animate = value;\r\n        this._innerAnimate = value;\r\n    }\r\n\r\n    @Input('switch-on-color') set setOnColor(value: string) {\r\n        if (value) {\r\n            this._onColor = value;\r\n        }\r\n    }\r\n\r\n    @Input('switch-off-color') set setOffColor(value: string) {\r\n        if (value) {\r\n            this._offColor = value;\r\n        }\r\n    }\r\n\r\n    @Input('switch-disabled') set setDisabled(value: boolean) {\r\n        this.disabled = value;\r\n    }\r\n\r\n    @Input('switch-readonly') set setReadOnly(value: boolean) {\r\n        this.readonly = value;\r\n    }\r\n\r\n    @Input('switch-indeterminate') set setIndeterminate(value: boolean) {\r\n        this._indeterminate = value;\r\n    }\r\n\r\n    @Input('switch-inverse') set setInverse(value: boolean) {\r\n        this.inverse = value;\r\n    }\r\n\r\n    @Input('switch-handle-width') set setHandleWidth(value: number | 'auto') {\r\n        this._innerHandleWidth = (typeof (value) !== 'undefined') ? value : 'auto';\r\n    }\r\n\r\n    @Input('switch-label-width') set setLabelWidth(value: number | 'auto') {\r\n        this._innerLabelWidth = (typeof (value) !== 'undefined') ? value : 'auto';\r\n    }\r\n\r\n    get value(): boolean {\r\n        return this._innerState;\r\n    }\r\n\r\n    set value(v: boolean) {\r\n        if (v === null || typeof v === 'undefined') {\r\n            this._indeterminate = true;\r\n        }\r\n        this.setStateValue(v);\r\n    }\r\n\r\n    private setStateValue(v: boolean): void {\r\n        if (v !== this._innerState) {\r\n\r\n            this._onChangeCallback(v);\r\n\r\n            this.changeState.emit({\r\n                previousValue: this._innerState,\r\n                currentValue: v\r\n            });\r\n            this._innerState = v;\r\n        }\r\n    }\r\n\r\n    writeValue(value: boolean) {\r\n        if (value !== this._innerState) {\r\n            this._innerState = value;\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { JwBootstrapSwitchNg2Component } from './jw-bootstrap-switch-ng2.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [JwBootstrapSwitchNg2Component],\r\n  exports: [JwBootstrapSwitchNg2Component]\r\n})\r\nexport class JwBootstrapSwitchNg2Module { }\r\n"]}