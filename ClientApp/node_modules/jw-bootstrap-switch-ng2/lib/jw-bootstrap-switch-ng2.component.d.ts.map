{"version":3,"file":"jw-bootstrap-switch-ng2.component.d.ts","sources":["jw-bootstrap-switch-ng2.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, AfterViewInit, SimpleChanges, EventEmitter, OnChanges, Renderer2, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare class JwBootstrapSwitchNg2Component implements AfterViewInit, ControlValueAccessor, OnChanges {\r\n    private cd;\r\n    private render;\r\n    handleWidth: number;\r\n    labelWidth: number;\r\n    labelText: string;\r\n    inverse: boolean;\r\n    baseClass: string;\r\n    onText: string;\r\n    offText: string;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    private _focused;\r\n    private _size;\r\n    private _animate;\r\n    private _innerAnimate;\r\n    private _indeterminate;\r\n    private _onColor;\r\n    private _offColor;\r\n    private _wrapperClass;\r\n    private _innerState;\r\n    private _innerHandleWidth;\r\n    private _innerLabelWidth;\r\n    private _dragStart;\r\n    private _dragEnd;\r\n    private _onTouchedCallback;\r\n    private _onChangeCallback;\r\n    changeState: EventEmitter<any>;\r\n    container: ElementRef;\r\n    on: ElementRef;\r\n    label: ElementRef;\r\n    off: ElementRef;\r\n    private $on;\r\n    private $off;\r\n    private $label;\r\n    private $container;\r\n    /**\r\n     * @description:  Function to set the Classes for the Wrapper Div\r\n     * @returns string\r\n     */\r\n    getWrapperClasses(): string;\r\n    /**\r\n     * @description Function to set the css classes for #on\r\n     * @returns string\r\n     */\r\n    getOnClasses(): string;\r\n    /**\r\n     * @description Function to set the css classes for #off\r\n     * @returns string\r\n     */\r\n    getOffClasses(): string;\r\n    /**\r\n     * @description  Function set the marging of the #label when change the state\r\n     * @returns string\r\n     */\r\n    getLabelMarginLeft(): string;\r\n    constructor(cd: ChangeDetectorRef, render: Renderer2);\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    onClick(): void;\r\n    onKeyDown(e: KeyboardEvent): void;\r\n    private onDragStart;\r\n    private onDragMove;\r\n    private onDragEnd;\r\n    onTouchStart(e: any): void;\r\n    onMouseDown(e: any): void;\r\n    onTouchMove(e: any): void;\r\n    onMouseMove(e: any): void;\r\n    onMouseUp(e: Event): void;\r\n    onTouchEnd(e: Event): void;\r\n    onMouseLeave(e: Event): void;\r\n    onFocus(): void;\r\n    onBlur(): void;\r\n    /**\r\n     * @description Function to make recalculate the size of the elements when options change\r\n     * @param disableAnimation\r\n     */\r\n    private calculateWith;\r\n    setBaseClass: string;\r\n    setWrapperClass: string;\r\n    setOffText: string;\r\n    setLabelText: string;\r\n    setOnText: string;\r\n    setSize: string;\r\n    setAnimate: boolean;\r\n    setOnColor: string;\r\n    setOffColor: string;\r\n    setDisabled: boolean;\r\n    setReadOnly: boolean;\r\n    setIndeterminate: boolean;\r\n    setInverse: boolean;\r\n    setHandleWidth: number | 'auto';\r\n    setLabelWidth: number | 'auto';\r\n    value: boolean;\r\n    private setStateValue;\r\n    writeValue(value: boolean): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n}\r\n"]}