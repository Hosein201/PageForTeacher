{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Klingon [tlh]\n//! author : Dominika Kruk : https://github.com/amaranthrose\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' && typeof require === 'function' ? factory(require('../moment')) : typeof define === 'function' && define.amd ? define(['../moment'], factory) : factory(global.moment);\n})(this, function (moment) {\n  'use strict'; //! moment.js locale configuration\n\n  var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n  function translateFuture(output) {\n    var time = output;\n    time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'leS' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'waQ' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'nem' : time + ' pIq';\n    return time;\n  }\n\n  function translatePast(output) {\n    var time = output;\n    time = output.indexOf('jaj') !== -1 ? time.slice(0, -3) + 'Hu’' : output.indexOf('jar') !== -1 ? time.slice(0, -3) + 'wen' : output.indexOf('DIS') !== -1 ? time.slice(0, -3) + 'ben' : time + ' ret';\n    return time;\n  }\n\n  function translate(number, withoutSuffix, string, isFuture) {\n    var numberNoun = numberAsNoun(number);\n\n    switch (string) {\n      case 'ss':\n        return numberNoun + ' lup';\n\n      case 'mm':\n        return numberNoun + ' tup';\n\n      case 'hh':\n        return numberNoun + ' rep';\n\n      case 'dd':\n        return numberNoun + ' jaj';\n\n      case 'MM':\n        return numberNoun + ' jar';\n\n      case 'yy':\n        return numberNoun + ' DIS';\n    }\n  }\n\n  function numberAsNoun(number) {\n    var hundred = Math.floor(number % 1000 / 100),\n        ten = Math.floor(number % 100 / 10),\n        one = number % 10,\n        word = '';\n\n    if (hundred > 0) {\n      word += numbersNouns[hundred] + 'vatlh';\n    }\n\n    if (ten > 0) {\n      word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';\n    }\n\n    if (one > 0) {\n      word += (word !== '' ? ' ' : '') + numbersNouns[one];\n    }\n\n    return word === '' ? 'pagh' : word;\n  }\n\n  var tlh = moment.defineLocale('tlh', {\n    months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n    monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[DaHjaj] LT',\n      nextDay: '[wa’leS] LT',\n      nextWeek: 'LLL',\n      lastDay: '[wa’Hu’] LT',\n      lastWeek: 'LLL',\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: translateFuture,\n      past: translatePast,\n      s: 'puS lup',\n      ss: translate,\n      m: 'wa’ tup',\n      mm: translate,\n      h: 'wa’ rep',\n      hh: translate,\n      d: 'wa’ jaj',\n      dd: translate,\n      M: 'wa’ jar',\n      MM: translate,\n      y: 'wa’ DIS',\n      yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n  return tlh;\n});","map":{"version":3,"sources":["E:/githup/Teachers/ClientApp/node_modules/moment/locale/tlh.js"],"names":["global","factory","exports","module","require","define","amd","moment","numbersNouns","split","translateFuture","output","time","indexOf","slice","translatePast","translate","number","withoutSuffix","string","isFuture","numberNoun","numberAsNoun","hundred","Math","floor","ten","one","word","tlh","defineLocale","months","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Klingon [tlh]\n//! author : Dominika Kruk : https://github.com/amaranthrose\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'leS'\n                : output.indexOf('jar') !== -1\n                ? time.slice(0, -3) + 'waQ'\n                : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'nem'\n                : time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'Hu’'\n                : output.indexOf('jar') !== -1\n                ? time.slice(0, -3) + 'wen'\n                : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'ben'\n                : time + ' ret';\n        return time;\n    }\n\n    function translate(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n            ten = Math.floor((number % 100) / 10),\n            one = number % 10,\n            word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[one];\n        }\n        return word === '' ? 'pagh' : word;\n    }\n\n    var tlh = moment.defineLocale('tlh', {\n        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(\n            '_'\n        ),\n        monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: translateFuture,\n            past: translatePast,\n            s: 'puS lup',\n            ss: translate,\n            m: 'wa’ tup',\n            mm: translate,\n            h: 'wa’ rep',\n            hh: translate,\n            d: 'wa’ jaj',\n            dd: translate,\n            M: 'wa’ jar',\n            MM: translate,\n            y: 'wa’ DIS',\n            yy: translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    return tlh;\n\n})));\n"]},"metadata":{},"sourceType":"script"}