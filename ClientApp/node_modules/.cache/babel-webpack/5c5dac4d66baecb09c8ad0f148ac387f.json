{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' && typeof require === 'function' ? factory(require('../moment')) : typeof define === 'function' && define.amd ? define(['../moment'], factory) : factory(global.moment);\n})(this, function (moment) {\n  'use strict'; //! moment.js locale configuration\n\n  var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),\n      monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_'),\n      monthsParse = [/^sty/i, /^lut/i, /^mar/i, /^kwi/i, /^maj/i, /^cze/i, /^lip/i, /^sie/i, /^wrz/i, /^paź/i, /^lis/i, /^gru/i];\n\n  function plural(n) {\n    return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n  }\n\n  function translate(number, withoutSuffix, key) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 'ss':\n        return result + (plural(number) ? 'sekundy' : 'sekund');\n\n      case 'm':\n        return withoutSuffix ? 'minuta' : 'minutę';\n\n      case 'mm':\n        return result + (plural(number) ? 'minuty' : 'minut');\n\n      case 'h':\n        return withoutSuffix ? 'godzina' : 'godzinę';\n\n      case 'hh':\n        return result + (plural(number) ? 'godziny' : 'godzin');\n\n      case 'ww':\n        return result + (plural(number) ? 'tygodnie' : 'tygodni');\n\n      case 'MM':\n        return result + (plural(number) ? 'miesiące' : 'miesięcy');\n\n      case 'yy':\n        return result + (plural(number) ? 'lata' : 'lat');\n    }\n  }\n\n  var pl = moment.defineLocale('pl', {\n    months: function months(momentToFormat, format) {\n      if (!momentToFormat) {\n        return monthsNominative;\n      } else if (/D MMMM/.test(format)) {\n        return monthsSubjective[momentToFormat.month()];\n      } else {\n        return monthsNominative[momentToFormat.month()];\n      }\n    },\n    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    monthsParse: monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY',\n      LLL: 'D MMMM YYYY HH:mm',\n      LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n      sameDay: '[Dziś o] LT',\n      nextDay: '[Jutro o] LT',\n      nextWeek: function nextWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[W niedzielę o] LT';\n\n          case 2:\n            return '[We wtorek o] LT';\n\n          case 3:\n            return '[W środę o] LT';\n\n          case 6:\n            return '[W sobotę o] LT';\n\n          default:\n            return '[W] dddd [o] LT';\n        }\n      },\n      lastDay: '[Wczoraj o] LT',\n      lastWeek: function lastWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[W zeszłą niedzielę o] LT';\n\n          case 3:\n            return '[W zeszłą środę o] LT';\n\n          case 6:\n            return '[W zeszłą sobotę o] LT';\n\n          default:\n            return '[W zeszły] dddd [o] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: '%s temu',\n      s: 'kilka sekund',\n      ss: translate,\n      m: translate,\n      mm: translate,\n      h: translate,\n      hh: translate,\n      d: '1 dzień',\n      dd: '%d dni',\n      w: 'tydzień',\n      ww: translate,\n      M: 'miesiąc',\n      MM: translate,\n      y: 'rok',\n      yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n  return pl;\n});","map":{"version":3,"sources":["E:/githup/Teachers/ClientApp/node_modules/moment/locale/pl.js"],"names":["global","factory","exports","module","require","define","amd","moment","monthsNominative","split","monthsSubjective","monthsParse","plural","n","translate","number","withoutSuffix","key","result","pl","defineLocale","months","momentToFormat","format","test","month","monthsShort","longMonthsParse","shortMonthsParse","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","day","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","w","ww","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(\n            '_'\n        ),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(\n            '_'\n        ),\n        monthsParse = [\n            /^sty/i,\n            /^lut/i,\n            /^mar/i,\n            /^kwi/i,\n            /^maj/i,\n            /^cze/i,\n            /^lip/i,\n            /^sie/i,\n            /^wrz/i,\n            /^paź/i,\n            /^lis/i,\n            /^gru/i,\n        ];\n    function plural(n) {\n        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n    }\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix ? 'godzina' : 'godzinę';\n            case 'hh':\n                return result + (plural(number) ? 'godziny' : 'godzin');\n            case 'ww':\n                return result + (plural(number) ? 'tygodnie' : 'tygodni');\n            case 'MM':\n                return result + (plural(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural(number) ? 'lata' : 'lat');\n        }\n    }\n\n    var pl = moment.defineLocale('pl', {\n        months: function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: '%s temu',\n            s: 'kilka sekund',\n            ss: translate,\n            m: translate,\n            mm: translate,\n            h: translate,\n            hh: translate,\n            d: '1 dzień',\n            dd: '%d dni',\n            w: 'tydzień',\n            ww: translate,\n            M: 'miesiąc',\n            MM: translate,\n            y: 'rok',\n            yy: translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    return pl;\n\n})));\n"]},"metadata":{},"sourceType":"script"}