{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' && typeof require === 'function' ? factory(require('../moment')) : typeof define === 'function' && define.amd ? define(['../moment'], factory) : factory(global.moment);\n})(this, function (moment) {\n  'use strict'; //! moment.js locale configuration\n\n  var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),\n      monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n      monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i],\n      // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n  // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n  monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n  function plural(n) {\n    return n > 1 && n < 5 && ~~(n / 10) !== 1;\n  }\n\n  function translate(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n\n    switch (key) {\n      case 's':\n        // a few seconds / in a few seconds / a few seconds ago\n        return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n      case 'ss':\n        // 9 seconds / in 9 seconds / 9 seconds ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'sekundy' : 'sekund');\n        } else {\n          return result + 'sekundami';\n        }\n\n      case 'm':\n        // a minute / in a minute / a minute ago\n        return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n      case 'mm':\n        // 9 minutes / in 9 minutes / 9 minutes ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'minuty' : 'minut');\n        } else {\n          return result + 'minutami';\n        }\n\n      case 'h':\n        // an hour / in an hour / an hour ago\n        return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n      case 'hh':\n        // 9 hours / in 9 hours / 9 hours ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'hodiny' : 'hodin');\n        } else {\n          return result + 'hodinami';\n        }\n\n      case 'd':\n        // a day / in a day / a day ago\n        return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n      case 'dd':\n        // 9 days / in 9 days / 9 days ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'dny' : 'dní');\n        } else {\n          return result + 'dny';\n        }\n\n      case 'M':\n        // a month / in a month / a month ago\n        return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n      case 'MM':\n        // 9 months / in 9 months / 9 months ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'měsíce' : 'měsíců');\n        } else {\n          return result + 'měsíci';\n        }\n\n      case 'y':\n        // a year / in a year / a year ago\n        return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n      case 'yy':\n        // 9 years / in 9 years / 9 years ago\n        if (withoutSuffix || isFuture) {\n          return result + (plural(number) ? 'roky' : 'let');\n        } else {\n          return result + 'lety';\n        }\n\n    }\n  }\n\n  var cs = moment.defineLocale('cs', {\n    months: months,\n    monthsShort: monthsShort,\n    monthsRegex: monthsRegex,\n    monthsShortRegex: monthsRegex,\n    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n    monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n    monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n    monthsParse: monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n      LT: 'H:mm',\n      LTS: 'H:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D. MMMM YYYY',\n      LLL: 'D. MMMM YYYY H:mm',\n      LLLL: 'dddd D. MMMM YYYY H:mm',\n      l: 'D. M. YYYY'\n    },\n    calendar: {\n      sameDay: '[dnes v] LT',\n      nextDay: '[zítra v] LT',\n      nextWeek: function nextWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[v neděli v] LT';\n\n          case 1:\n          case 2:\n            return '[v] dddd [v] LT';\n\n          case 3:\n            return '[ve středu v] LT';\n\n          case 4:\n            return '[ve čtvrtek v] LT';\n\n          case 5:\n            return '[v pátek v] LT';\n\n          case 6:\n            return '[v sobotu v] LT';\n        }\n      },\n      lastDay: '[včera v] LT',\n      lastWeek: function lastWeek() {\n        switch (this.day()) {\n          case 0:\n            return '[minulou neděli v] LT';\n\n          case 1:\n          case 2:\n            return '[minulé] dddd [v] LT';\n\n          case 3:\n            return '[minulou středu v] LT';\n\n          case 4:\n          case 5:\n            return '[minulý] dddd [v] LT';\n\n          case 6:\n            return '[minulou sobotu v] LT';\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'za %s',\n      past: 'před %s',\n      s: translate,\n      ss: translate,\n      m: translate,\n      mm: translate,\n      h: translate,\n      hh: translate,\n      d: translate,\n      dd: translate,\n      M: translate,\n      MM: translate,\n      y: translate,\n      yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n    }\n  });\n  return cs;\n});","map":{"version":3,"sources":["E:/githup/Teachers/ClientApp/node_modules/moment/locale/cs.js"],"names":["global","factory","exports","module","require","define","amd","moment","months","split","monthsShort","monthsParse","monthsRegex","plural","n","translate","number","withoutSuffix","key","isFuture","result","cs","defineLocale","monthsShortRegex","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","calendar","sameDay","nextDay","nextWeek","day","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(\n            '_'\n        ),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n        monthsParse = [\n            /^led/i,\n            /^úno/i,\n            /^bře/i,\n            /^dub/i,\n            /^kvě/i,\n            /^(čvn|červen$|června)/i,\n            /^(čvc|červenec|července)/i,\n            /^srp/i,\n            /^zář/i,\n            /^říj/i,\n            /^lis/i,\n            /^pro/i,\n        ],\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n    function plural(n) {\n        return n > 1 && n < 5 && ~~(n / 10) !== 1;\n    }\n    function translate(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's': // a few seconds / in a few seconds / a few seconds ago\n                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n            case 'm': // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n            case 'h': // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n            case 'd': // a day / in a day / a day ago\n                return withoutSuffix || isFuture ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n            case 'M': // a month / in a month / a month ago\n                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n            case 'y': // a year / in a year / a year ago\n                return withoutSuffix || isFuture ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n        }\n    }\n\n    var cs = moment.defineLocale('cs', {\n        months: months,\n        monthsShort: monthsShort,\n        monthsRegex: monthsRegex,\n        monthsShortRegex: monthsRegex,\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n        monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd D. MMMM YYYY H:mm',\n            l: 'D. M. YYYY',\n        },\n        calendar: {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'před %s',\n            s: translate,\n            ss: translate,\n            m: translate,\n            mm: translate,\n            h: translate,\n            hh: translate,\n            d: translate,\n            dd: translate,\n            M: translate,\n            MM: translate,\n            y: translate,\n            yy: translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    return cs;\n\n})));\n"]},"metadata":{},"sourceType":"script"}