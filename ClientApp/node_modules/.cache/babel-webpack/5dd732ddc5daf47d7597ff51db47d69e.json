{"ast":null,"code":"//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' && typeof require === 'function' ? factory(require('../moment')) : typeof define === 'function' && define.amd ? define(['../moment'], factory) : factory(global.moment);\n})(this, function (moment) {\n  'use strict'; //! moment.js locale configuration\n\n  function plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n  }\n\n  function relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n      ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n      mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n      hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n      dd: 'день_дні_днів',\n      MM: 'місяць_місяці_місяців',\n      yy: 'рік_роки_років'\n    };\n\n    if (key === 'm') {\n      return withoutSuffix ? 'хвилина' : 'хвилину';\n    } else if (key === 'h') {\n      return withoutSuffix ? 'година' : 'годину';\n    } else {\n      return number + ' ' + plural(format[key], +number);\n    }\n  }\n\n  function weekdaysCaseReplace(m, format) {\n    var weekdays = {\n      nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n      accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n      genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n    },\n        nounCase;\n\n    if (m === true) {\n      return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));\n    }\n\n    if (!m) {\n      return weekdays['nominative'];\n    }\n\n    nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n    return weekdays[nounCase][m.day()];\n  }\n\n  function processHoursFunction(str) {\n    return function () {\n      return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n    };\n  }\n\n  var uk = moment.defineLocale('uk', {\n    months: {\n      format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n      standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n      LT: 'HH:mm',\n      LTS: 'HH:mm:ss',\n      L: 'DD.MM.YYYY',\n      LL: 'D MMMM YYYY р.',\n      LLL: 'D MMMM YYYY р., HH:mm',\n      LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n    },\n    calendar: {\n      sameDay: processHoursFunction('[Сьогодні '),\n      nextDay: processHoursFunction('[Завтра '),\n      lastDay: processHoursFunction('[Вчора '),\n      nextWeek: processHoursFunction('[У] dddd ['),\n      lastWeek: function lastWeek() {\n        switch (this.day()) {\n          case 0:\n          case 3:\n          case 5:\n          case 6:\n            return processHoursFunction('[Минулої] dddd [').call(this);\n\n          case 1:\n          case 2:\n          case 4:\n            return processHoursFunction('[Минулого] dddd [').call(this);\n        }\n      },\n      sameElse: 'L'\n    },\n    relativeTime: {\n      future: 'за %s',\n      past: '%s тому',\n      s: 'декілька секунд',\n      ss: relativeTimeWithPlural,\n      m: relativeTimeWithPlural,\n      mm: relativeTimeWithPlural,\n      h: 'годину',\n      hh: relativeTimeWithPlural,\n      d: 'день',\n      dd: relativeTimeWithPlural,\n      M: 'місяць',\n      MM: relativeTimeWithPlural,\n      y: 'рік',\n      yy: relativeTimeWithPlural\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    isPM: function isPM(input) {\n      return /^(дня|вечора)$/.test(input);\n    },\n    meridiem: function meridiem(hour, minute, isLower) {\n      if (hour < 4) {\n        return 'ночі';\n      } else if (hour < 12) {\n        return 'ранку';\n      } else if (hour < 17) {\n        return 'дня';\n      } else {\n        return 'вечора';\n      }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    ordinal: function ordinal(number, period) {\n      switch (period) {\n        case 'M':\n        case 'd':\n        case 'DDD':\n        case 'w':\n        case 'W':\n          return number + '-й';\n\n        case 'D':\n          return number + '-го';\n\n        default:\n          return number;\n      }\n    },\n    week: {\n      dow: 1,\n      // Monday is the first day of the week.\n      doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n    }\n  });\n  return uk;\n});","map":{"version":3,"sources":["E:/githup/Teachers/ClientApp/node_modules/moment/locale/uk.js"],"names":["global","factory","exports","module","require","define","amd","moment","plural","word","num","forms","split","relativeTimeWithPlural","number","withoutSuffix","key","format","ss","mm","hh","dd","MM","yy","weekdaysCaseReplace","m","weekdays","nominative","accusative","genitive","nounCase","slice","concat","test","day","processHoursFunction","str","hours","uk","defineLocale","months","standalone","monthsShort","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","call","sameElse","relativeTime","future","past","s","h","d","M","y","meridiemParse","isPM","input","meridiem","hour","minute","isLower","dayOfMonthOrdinalParse","ordinal","period","week","dow","doy"],"mappings":"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","sourcesContent":["//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            dd: 'день_дні_днів',\n            MM: 'місяць_місяці_місяців',\n            yy: 'рік_роки_років',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        } else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n                nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                    '_'\n                ),\n                accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                    '_'\n                ),\n                genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                    '_'\n                ),\n            },\n            nounCase;\n\n        if (m === true) {\n            return weekdays['nominative']\n                .slice(1, 7)\n                .concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n            ? 'accusative'\n            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n            ? 'genitive'\n            : 'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    var uk = moment.defineLocale('uk', {\n        months: {\n            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n                '_'\n            ),\n            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n            '_'\n        ),\n        weekdays: weekdaysCaseReplace,\n        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY р.',\n            LLL: 'D MMMM YYYY р., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n        },\n        calendar: {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: '%s тому',\n            s: 'декілька секунд',\n            ss: relativeTimeWithPlural,\n            m: relativeTimeWithPlural,\n            mm: relativeTimeWithPlural,\n            h: 'годину',\n            hh: relativeTimeWithPlural,\n            d: 'день',\n            dd: relativeTimeWithPlural,\n            M: 'місяць',\n            MM: relativeTimeWithPlural,\n            y: 'рік',\n            yy: relativeTimeWithPlural,\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    return uk;\n\n})));\n"]},"metadata":{},"sourceType":"script"}