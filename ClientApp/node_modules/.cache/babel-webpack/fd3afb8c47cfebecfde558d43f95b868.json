{"ast":null,"code":"import _get from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createForOfIteratorHelper from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _inherits from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _slicedToArray from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _createClass from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"E:/githup/Teachers/ClientApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _templateObject36() {\n  var data = _taggedTemplateLiteral([\":@@ngb.toast.close-aria\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"]);\n\n  _templateObject36 = function _templateObject36() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject35() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.AM\\u241F69a1f176a93998876952adac57c3bc3863b6105e\\u241F4592818992509942761:\", \":INTERPOLATION:\"]);\n\n  _templateObject35 = function _templateObject35() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject34() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.PM\\u241F8d6e691e10306c1b34c6b26805151aaea320ef7f\\u241F3564199131264287502:\", \":INTERPOLATION:\"]);\n\n  _templateObject34 = function _templateObject34() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject33() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-seconds\\u241F5db47ac104294243a70eb9124fbea9d0004ddf69\\u241F753633511487974857:Decrement seconds\"]);\n\n  _templateObject33 = function _templateObject33() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject32() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-seconds\\u241F912322ecee7d659d04dcf494a70e22e49d334b26\\u241F5364772110539092174:Increment seconds\"]);\n\n  _templateObject32 = function _templateObject32() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject31() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.seconds\\u241F4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c\\u241F8874012390997067175:Seconds\"]);\n\n  _templateObject31 = function _templateObject31() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject30() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.SS\\u241Febe38d36a40a2383c5fefa9b4608ffbda08bd4a3\\u241F3628127143071124194:SS\"]);\n\n  _templateObject30 = function _templateObject30() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject29() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-minutes\\u241Fc1a6899e529c096da5b660385d4e77fe1f7ad271\\u241F7447789825403243588:Decrement minutes\"]);\n\n  _templateObject29 = function _templateObject29() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject28() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-minutes\\u241Ff5a4a3bc05e053f6732475d0e74875ec01c3a348\\u241F180147720391025024:Increment minutes\"]);\n\n  _templateObject28 = function _templateObject28() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject27() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.decrement-hours\\u241F147c7a19429da7d999e247d22e33fee370b1691b\\u241F3651829882940481818:Decrement hours\"]);\n\n  _templateObject27 = function _templateObject27() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject26() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.increment-hours\\u241Fcb74bc1d625a6c1742f0d7d47306cf495780c218\\u241F5939278348542933629:Increment hours\"]);\n\n  _templateObject26 = function _templateObject26() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject25() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.minutes\\u241F41e62daa962947c0d23ded0981975d1bddf0bf38\\u241F5531237363767747080:Minutes\"]);\n\n  _templateObject25 = function _templateObject25() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject24() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.MM\\u241F72c8edf6a50068a05bde70991e36b1e881f4ca54\\u241F1647282246509919852:MM\"]);\n\n  _templateObject24 = function _templateObject24() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject23() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.hours\\u241F3bbce5fef7e1151da052a4e529453edb340e3912\\u241F8070396816726827304:Hours\"]);\n\n  _templateObject23 = function _templateObject23() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject22() {\n  var data = _taggedTemplateLiteral([\":@@ngb.timepicker.HH\\u241Fce676ab1d6d98f85c836381cf100a4a91ef95a1f\\u241F4043638465245303811:HH\"]);\n\n  _templateObject22 = function _templateObject22() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject21() {\n  var data = _taggedTemplateLiteral([\":@@ngb.progressbar.value\\u241F04d611d19c117c60c9e14d0a04399a027184bc77\\u241F5214781723415385277:\", \":INTERPOLATION:%\"]);\n\n  _templateObject21 = function _templateObject21() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject20() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.last-aria\\u241F5c729788ba138508aca1bec050b610f7bf81db3e\\u241F4882268002141858767:Last\"]);\n\n  _templateObject20 = function _templateObject20() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject19() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.next-aria\\u241Ff732c304c7433e5a83ffcd862c3dce709a0f4982\\u241F3885497195825665706:Next\"]);\n\n  _templateObject19 = function _templateObject19() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.previous-aria\\u241F680d5c75b7fd8d37961083608b9fcdc4167b4c43\\u241F4452427314943113135:Previous\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.first-aria\\u241Ff2f852318759c6396b5d3d17031d53817d7b38cc\\u241F2241508602425256033:First\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.last\\u241F49f27a460bc97e7e00be5b37098bfa79884fc7d9\\u241F5277020320267646988:\\xBB\\xBB\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.next\\u241Fba9cbb4ff311464308a3627e4f1c3345d9fe6d7d\\u241F5458177150283468089:\\xBB\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.previous\\u241F6e52b6ee77a4848d899dd21b591c6fd499e3aef3\\u241F6479320895410098858:\\xAB\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\":@@ngb.pagination.first\\u241F656506dfd46380956a655f919f1498d018f75ca0\\u241F6867721956102594380:\\xAB\\xAB\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.select-year\\u241F8ceb09d002bf0c5d1cac171dfbffe1805d2b3962\\u241F8852264961585484321:Select year\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.select-year\\u241F8ceb09d002bf0c5d1cac171dfbffe1805d2b3962\\u241F8852264961585484321:Select year\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.select-month\\u241F1dbc84807f35518112f62e5775d1daebd3d8462b\\u241F2253869508135064750:Select month\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.select-month\\u241F1dbc84807f35518112f62e5775d1daebd3d8462b\\u241F2253869508135064750:Select month\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.next-month\\u241F4bd046985cfe13040d5ef0cd881edce0968a111a\\u241F3628374603023447227:Next month\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.next-month\\u241F4bd046985cfe13040d5ef0cd881edce0968a111a\\u241F3628374603023447227:Next month\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.previous-month\\u241Fc3b08b07b5ab98e7cdcf18df39355690ab7d3884\\u241F8586908745456864217:Previous month\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\":@@ngb.datepicker.previous-month\\u241Fc3b08b07b5ab98e7cdcf18df39355690ab7d3884\\u241F8586908745456864217:Previous month\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\":@@ngb.carousel.next\\u241Ff732c304c7433e5a83ffcd862c3dce709a0f4982\\u241F3885497195825665706:Next\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\":@@ngb.carousel.previous\\u241F680d5c75b7fd8d37961083608b9fcdc4167b4c43\\u241F4452427314943113135:Previous\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\":@@ngb.alert.close\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\":@@ngb.alert.close\\u241Ff4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8\\u241F7819314041543176992:Close\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { __decorate, __param } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable, TemplateRef, Directive, Input, ContentChildren, EventEmitter, Output, Component, ViewEncapsulation, Optional, Host, NgModule, Renderer2, ElementRef, ChangeDetectionStrategy, forwardRef, ChangeDetectorRef, Inject, PLATFORM_ID, NgZone, HostListener, ɵɵinject, LOCALE_ID, ViewChild, ContentChild, ViewContainerRef, ComponentFactoryResolver, Injector, ApplicationRef, RendererFactory2, INJECTOR, Attribute, InjectionToken } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, getLocaleDayNames, FormStyle, TranslationWidth, getLocaleMonthNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { Subject, BehaviorSubject, combineLatest, timer, NEVER, fromEvent, merge, race, Observable } from 'rxjs';\nimport { map, startWith, distinctUntilChanged, switchMap, takeUntil, filter, take, tap, withLatestFrom, delay, share } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var panel_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngbPanelToggle\", panel_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", panel_r3.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n  }\n}\n\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var panel_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassProp(\"show\", panel_r5.isOpen);\n    ɵngcc0.ɵɵpropertyInterpolate(\"id\", panel_r5.id);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", panel_r5.id + \"-header\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef);\n  }\n}\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    $implicit: a0,\n    opened: a1\n  };\n};\n\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 5);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbAccordion_ng_template_2_div_3_Template, 3, 5, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var panel_r5 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassMap(\"card \" + (panel_r5.cardClass || \"\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"card-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", panel_r5.id, \"-header\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(8, _c0, panel_r5, panel_r5.isOpen));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen);\n  }\n}\n\nfunction NgbAlert_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 1);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbAlert_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.closeHandler();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 2);\n    ɵngcc0.ɵɵtext(2, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c5 = [\"*\"];\n\nfunction NgbCarousel_ol_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_ol_0_li_1_Template_li_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var slide_r5 = ctx.$implicit;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.select(slide_r5.id, ctx_r6.NgbSlideEventSource.INDICATOR);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var slide_r5 = ctx.$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r5.id === ctx_r4.activeId);\n    ɵngcc0.ɵɵproperty(\"id\", slide_r5.id);\n  }\n}\n\nfunction NgbCarousel_ol_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, NgbCarousel_ol_0_li_1_Template, 1, 3, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.slides);\n  }\n}\n\nfunction NgbCarousel_div_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbCarousel_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbCarousel_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var slide_r8 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r8.id === ctx_r1.activeId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r8.tplRef);\n  }\n}\n\nfunction NgbCarousel_a_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_3_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.prev(ctx_r10.NgbSlideEventSource.ARROW_LEFT);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 11);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵi18n(3, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbCarousel_a_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_4_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.next(ctx_r12.NgbSlideEventSource.ARROW_RIGHT);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c10 = [\"defaultDayTemplate\"];\nvar _c11 = [\"content\"];\n\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var date_r8 = ctx.date;\n    var currentMonth_r9 = ctx.currentMonth;\n    var selected_r10 = ctx.selected;\n    var disabled_r11 = ctx.disabled;\n    var focused_r12 = ctx.focused;\n    ɵngcc0.ɵɵproperty(\"date\", date_r8)(\"currentMonth\", currentMonth_r9)(\"selected\", selected_r10)(\"disabled\", disabled_r11)(\"focused\", focused_r12);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var month_r14 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r16.i18n.getMonthFullName(month_r14.number, month_r14.year), \" \", ctx_r16.i18n.getYearNumerals(month_r14.year), \" \");\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepicker_ng_template_2_div_0_div_1_Template, 2, 2, \"div\", 10);\n    ɵngcc0.ɵɵelement(2, \"ngb-datepicker-month\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var month_r14 = ctx.$implicit;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.navigation === \"none\" || ctx_r13.displayMonths > 1 && ctx_r13.navigation === \"select\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"month\", month_r14.firstDate);\n  }\n}\n\nfunction NgbDatepicker_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_2_div_0_Template, 3, 2, \"div\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.model.months);\n  }\n}\n\nfunction NgbDatepicker_ngb_datepicker_navigation_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 13);\n    ɵngcc0.ɵɵlistener(\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_navigate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.onNavigateEvent($event);\n    })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_5_Template_ngb_datepicker_navigation_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.onNavigateDateSelect($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r4.model.firstDate)(\"months\", ctx_r4.model.months)(\"disabled\", ctx_r4.model.disabled)(\"showSelect\", ctx_r4.model.navigation === \"select\")(\"prevDisabled\", ctx_r4.model.prevDisabled)(\"nextDisabled\", ctx_r4.model.nextDisabled)(\"selectBoxes\", ctx_r4.model.selectBoxes);\n  }\n}\n\nfunction NgbDatepicker_ng_template_8_Template(rf, ctx) {}\n\nfunction NgbDatepicker_ng_template_9_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var w_r4 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.i18n.getWeekdayShortName(w_r4), \" \");\n  }\n}\n\nfunction NgbDatepickerMonth_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_div_0_div_1_Template, 1, 0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_div_0_div_2_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.viewModel.weekdays);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var week_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.i18n.getWeekNumerals(week_r5.number));\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) {}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n  }\n\n  if (rf & 2) {\n    var day_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.datepicker.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerMonth_ng_template_1_div_0_div_2_Template_div_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var day_r10 = ctx.$implicit;\n      var ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n      ctx_r14.doSelect(day_r10);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n    ɵngcc0.ɵɵproperty(\"tabindex\", day_r10.tabindex);\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r10.ariaLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !day_r10.hidden);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonth_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var week_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.datepicker.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", week_r5.days);\n  }\n}\n\nfunction NgbDatepickerMonth_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var week_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !week_r5.collapsed);\n  }\n}\n\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 7);\n    ɵngcc0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template_ngb_datepicker_navigation_select_select_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.select.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_div_0_Template, 1, 0, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 10);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_4_ng_template_0_div_3_Template, 1, 0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    var month_r5 = ctx.$implicit;\n    var i_r6 = ctx.index;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r4.i18n.getMonthFullName(month_r5.number, month_r5.year), \" \", ctx_r4.i18n.getYearNumerals(month_r5.year), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n  }\n}\n\nfunction NgbDatepickerNavigation_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_4_ng_template_0_Template, 4, 4, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.months);\n  }\n}\n\nvar _c20 = [\"ngbDatepickerDayView\", \"\"];\nvar _c21 = [\"month\"];\nvar _c22 = [\"year\"];\n\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var m_r4 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", m_r4);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.i18n.getMonthFullName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.i18n.getMonthShortName(m_r4, ctx_r1.date == null ? null : ctx_r1.date.year));\n  }\n}\n\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var y_r5 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", y_r5);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.i18n.getYearNumerals(y_r5));\n  }\n}\n\nvar _c31 = [\"dialog\"];\nvar _c32 = [\"ngbNavOutlet\", \"\"];\n\nfunction NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template(rf, ctx) {}\n\nvar _c33 = function _c33(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction NgbNavOutlet_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbNavOutlet_ng_template_0_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", item_r1.active);\n    ɵngcc0.ɵɵproperty(\"id\", item_r1.panelDomId);\n    ɵngcc0.ɵɵattribute(\"role\", ctx_r2.paneRole ? ctx_r2.paneRole : ctx_r2.nav.roles ? \"tabpanel\" : undefined)(\"aria-labelledby\", item_r1.domId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", item_r1.contentTpl == null ? null : item_r1.contentTpl.templateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(7, _c33, item_r1.active));\n  }\n}\n\nfunction NgbNavOutlet_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_div_0_Template, 2, 9, \"div\", 1);\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", item_r1.isPanelInDom());\n  }\n}\n\nfunction NgbPagination_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0, \"...\");\n  }\n}\n\nfunction NgbPagination_ng_template_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 14);\n    ɵngcc0.ɵɵtext(1, \"(current)\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbPagination_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_10_span_1_Template, 2, 0, \"span\", 13);\n  }\n\n  if (rf & 2) {\n    var page_r17 = ctx.$implicit;\n    var currentPage_r18 = ctx.currentPage;\n    ɵngcc0.ɵɵtextInterpolate1(\" \", page_r17, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", page_r17 === currentPage_r18);\n  }\n}\n\nfunction NgbPagination_li_13_ng_template_2_Template(rf, ctx) {}\n\nvar _c44 = function _c44(a0, a1) {\n  return {\n    disabled: a0,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r22 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_13_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r22);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext();\n      ctx_r21.selectPage(1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_13_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r12.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r12.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r12.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r12.tplFirst == null ? null : ctx_r12.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r12.previousDisabled(), ctx_r12.page));\n  }\n}\n\nfunction NgbPagination_li_14_ng_template_2_Template(rf, ctx) {}\n\nvar _c47 = function _c47(a0) {\n  return {\n    disabled: a0\n  };\n};\n\nfunction NgbPagination_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_14_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      ctx_r24.selectPage(ctx_r24.page - 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_14_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext();\n\n    var _r2 = ɵngcc0.ɵɵreference(3);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r13.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r13.previousDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r13.previousDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r13.tplPrevious == null ? null : ctx_r13.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(6, _c47, ctx_r13.previousDisabled()));\n  }\n}\n\nfunction NgbPagination_li_15_a_1_ng_template_1_Template(rf, ctx) {}\n\nvar _c48 = function _c48(a1) {\n  return {\n    disabled: true,\n    currentPage: a1\n  };\n};\n\nfunction NgbPagination_li_15_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 21);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n\n    var _r8 = ɵngcc0.ɵɵreference(9);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r27.tplEllipsis == null ? null : ctx_r27.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c48, ctx_r27.page));\n  }\n}\n\nfunction NgbPagination_li_15_a_2_ng_template_1_Template(rf, ctx) {}\n\nvar _c49 = function _c49(a0, a1, a2) {\n  return {\n    disabled: a0,\n    $implicit: a1,\n    currentPage: a2\n  };\n};\n\nfunction NgbPagination_li_15_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r33 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 22);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_15_a_2_Template_a_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r33);\n      var pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r31 = ɵngcc0.ɵɵnextContext();\n      ctx_r31.selectPage(pageNumber_r26);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r28 = ɵngcc0.ɵɵnextContext();\n\n    var _r10 = ɵngcc0.ɵɵreference(11);\n\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r28.disabled ? \"-1\" : null)(\"aria-disabled\", ctx_r28.disabled ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r28.tplNumber == null ? null : ctx_r28.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(4, _c49, ctx_r28.disabled, pageNumber_r26, ctx_r28.page));\n  }\n}\n\nfunction NgbPagination_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_Template, 2, 4, \"a\", 19);\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_15_a_2_Template, 2, 8, \"a\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var pageNumber_r26 = ctx.$implicit;\n    var ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pageNumber_r26 === ctx_r14.page)(\"disabled\", ctx_r14.isEllipsis(pageNumber_r26) || ctx_r14.disabled);\n    ɵngcc0.ɵɵattribute(\"aria-current\", pageNumber_r26 === ctx_r14.page ? \"page\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.isEllipsis(pageNumber_r26));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r14.isEllipsis(pageNumber_r26));\n  }\n}\n\nfunction NgbPagination_li_16_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r37 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r37);\n      var ctx_r36 = ɵngcc0.ɵɵnextContext();\n      ctx_r36.selectPage(ctx_r36.page + 1);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_16_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext();\n\n    var _r4 = ɵngcc0.ɵɵreference(5);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r15.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r15.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r15.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r15.tplNext == null ? null : ctx_r15.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r15.nextDisabled(), ctx_r15.page));\n  }\n}\n\nfunction NgbPagination_li_17_ng_template_2_Template(rf, ctx) {}\n\nfunction NgbPagination_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r40 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_17_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r40);\n      var ctx_r39 = ɵngcc0.ɵɵnextContext();\n      ctx_r39.selectPage(ctx_r39.pageCount);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_17_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext();\n\n    var _r6 = ɵngcc0.ɵɵreference(7);\n\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r16.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r16.nextDisabled() ? \"-1\" : null)(\"aria-disabled\", ctx_r16.nextDisabled() ? \"true\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r16.tplLast == null ? null : ctx_r16.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c44, ctx_r16.nextDisabled(), ctx_r16.page));\n  }\n}\n\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h3\", 3);\n    ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r1 = ɵngcc0.ɵɵreference(2);\n\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nfunction NgbProgressbar_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵi18n(1, 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵi18nExp(ctx_r0.getPercentValue());\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbRating_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var fill_r3 = ctx.fill;\n    ɵngcc0.ɵɵtextInterpolate(fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n  }\n}\n\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbRating_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var index_r4 = ctx.index;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.enter(index_r4 + 1);\n    })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var index_r4 = ctx.index;\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleClick(index_r4 + 1);\n    });\n    ɵngcc0.ɵɵtemplate(3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var index_r4 = ctx.index;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"cursor\", ctx_r2.readonly || ctx_r2.disabled ? \"default\" : \"pointer\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n  }\n}\n\nfunction NgbTabset_li_1_ng_template_3_Template(rf, ctx) {}\n\nfunction NgbTabset_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTabset_li_1_Template_a_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var tab_r2 = ctx.$implicit;\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      ctx_r4.select(tab_r2.id);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵtemplate(3, NgbTabset_li_1_ng_template_3_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tab_r2 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"active\", tab_r2.id === ctx_r0.activeId)(\"disabled\", tab_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"id\", tab_r2.id);\n    ɵngcc0.ɵɵattribute(\"tabindex\", tab_r2.disabled ? \"-1\" : undefined)(\"aria-controls\", !ctx_r0.destroyOnHide || tab_r2.id === ctx_r0.activeId ? tab_r2.id + \"-panel\" : null)(\"aria-selected\", tab_r2.id === ctx_r0.activeId)(\"aria-disabled\", tab_r2.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", tab_r2.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", tab_r2.titleTpl == null ? null : tab_r2.titleTpl.templateRef);\n  }\n}\n\nfunction NgbTabset_ng_template_3_div_0_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbTabset_ng_template_3_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbTabset_ng_template_3_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tab_r6 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"tab-pane \", tab_r6.id === ctx_r7.activeId ? \"active\" : null, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", tab_r6.id, \"-panel\");\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", tab_r6.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", tab_r6.contentTpl == null ? null : tab_r6.contentTpl.templateRef);\n  }\n}\n\nfunction NgbTabset_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbTabset_ng_template_3_div_0_Template, 2, 6, \"div\", 7);\n  }\n\n  if (rf & 2) {\n    var tab_r6 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.destroyOnHide || tab_r6.id === ctx_r1.activeId);\n  }\n}\n\nfunction NgbTimepicker_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.changeHour(ctx_r8.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 14);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_5_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.changeHour(-ctx_r10.hourStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_9_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.changeMinute(ctx_r12.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\n\nfunction NgbTimepicker_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r15 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_11_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r15);\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.changeMinute(-ctx_r14.minuteStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r3.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵtext(1, \":\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction NgbTimepicker_div_13_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_1_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r18.changeSecond(ctx_r18.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 12);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r16.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_13_button_3_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r20.changeSecond(-ctx_r20.secondStep);\n    });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 13);\n    ɵngcc0.ɵɵi18n(3, 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r17.disabled);\n  }\n}\n\nfunction NgbTimepicker_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, NgbTimepicker_div_13_button_1_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 20);\n    ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_div_13_Template_input_change_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r22 = ɵngcc0.ɵɵnextContext();\n      return ctx_r22.updateSecond($event.target.value);\n    })(\"input\", function NgbTimepicker_div_13_Template_input_input_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.formatInput($event.target);\n    })(\"keydown.ArrowUp\", function NgbTimepicker_div_13_Template_input_keydown_ArrowUp_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      ctx_r25.changeSecond(ctx_r25.secondStep);\n      return $event.preventDefault();\n    })(\"keydown.ArrowDown\", function NgbTimepicker_div_13_Template_input_keydown_ArrowDown_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r23);\n      var ctx_r26 = ɵngcc0.ɵɵnextContext();\n      ctx_r26.changeSecond(-ctx_r26.secondStep);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_13_button_3_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n  }\n}\n\nfunction NgbTimepicker_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵi18n(1, 27);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵi18nExp(ctx_r27.i18n.getAfternoonPeriod());\n    ɵngcc0.ɵɵi18nApply(1);\n  }\n}\n\nfunction NgbTimepicker_div_15_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵi18n(0, 28);\n  }\n\n  if (rf & 2) {\n    var ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵi18nExp(ctx_r29.i18n.getMorningPeriod());\n    ɵngcc0.ɵɵi18nApply(0);\n  }\n}\n\nfunction NgbTimepicker_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r31 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r31);\n      var ctx_r30 = ɵngcc0.ɵɵnextContext();\n      return ctx_r30.toggleMeridian();\n    });\n    ɵngcc0.ɵɵtemplate(2, NgbTimepicker_div_15_ng_container_2_Template, 2, 1, \"ng-container\", 25);\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_15_ng_template_3_Template, 1, 1, \"ng-template\", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r28 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r7.model == null ? null : ctx_r7.model.hour) >= 12)(\"ngIfElse\", _r28);\n  }\n}\n\nfunction NgbToast_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.header);\n  }\n}\n\nfunction NgbToast_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nfunction NgbToast_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(1, NgbToast_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbToast_ng_template_2_Template_button_click_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.hide();\n    });\n    ɵngcc0.ɵɵelementStart(3, \"span\", 7);\n    ɵngcc0.ɵɵtext(4, \"\\xD7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentHeaderTpl || _r0);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.highlightClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n  }\n}\n\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    var isOdd_r2 = ctx.odd;\n\n    var _r4 = ɵngcc0.ɵɵreference(2);\n\n    ɵngcc0.ɵɵproperty(\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ngb-highlight\", 2);\n  }\n\n  if (rf & 2) {\n    var result_r3 = ctx.result;\n    var term_r4 = ctx.term;\n    var formatter_r5 = ctx.formatter;\n    ɵngcc0.ɵɵproperty(\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n  }\n}\n\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nvar _c86 = function _c86(a0, a1, a2) {\n  return {\n    result: a0,\n    term: a1,\n    formatter: a2\n  };\n};\n\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var idx_r7 = ctx.index;\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.markActive(idx_r7);\n    })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var result_r6 = ctx.$implicit;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.select(result_r6);\n    });\n    ɵngcc0.ɵɵtemplate(1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var result_r6 = ctx.$implicit;\n    var idx_r7 = ctx.index;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵclassProp(\"active\", idx_r7 === ctx_r2.activeIdx);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r2.id + \"-\" + idx_r7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(5, _c86, result_r6, ctx_r2.term, ctx_r2.formatter));\n  }\n}\n\nfunction toInteger(value) {\n  return parseInt(\"\".concat(value), 10);\n}\n\nfunction toString(value) {\n  return value !== undefined && value !== null ? \"\".concat(value) : '';\n}\n\nfunction getValueInRange(value, max) {\n  var min = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return Math.max(Math.min(value, max), min);\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\nfunction isNumber(value) {\n  return !isNaN(toInteger(value));\n}\n\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction padNumber(value) {\n  if (isNumber(value)) {\n    return \"0\".concat(value).slice(-2);\n  } else {\n    return '';\n  }\n}\n\nfunction regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nfunction hasClassName(element, className) {\n  return element && element.className && element.className.split && element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n\nfunction closest(element, selector) {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n\n\nvar NgbAccordionConfig = function NgbAccordionConfig() {\n  _classCallCheck(this, NgbAccordionConfig);\n\n  this.closeOthers = false;\n};\n\nNgbAccordionConfig.ɵfac = function NgbAccordionConfig_Factory(t) {\n  return new (t || NgbAccordionConfig)();\n};\n\nNgbAccordionConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAccordionConfig_Factory() {\n    return new NgbAccordionConfig();\n  },\n  token: NgbAccordionConfig,\n  providedIn: \"root\"\n});\nvar nextId = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n\nvar NgbPanelHeader = function NgbPanelHeader(templateRef) {\n  _classCallCheck(this, NgbPanelHeader);\n\n  this.templateRef = templateRef;\n};\n\nNgbPanelHeader.ɵfac = function NgbPanelHeader_Factory(t) {\n  return new (t || NgbPanelHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelHeader,\n  selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]]\n});\n\nNgbPanelHeader.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n\n\nvar NgbPanelTitle = function NgbPanelTitle(templateRef) {\n  _classCallCheck(this, NgbPanelTitle);\n\n  this.templateRef = templateRef;\n};\n\nNgbPanelTitle.ɵfac = function NgbPanelTitle_Factory(t) {\n  return new (t || NgbPanelTitle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelTitle,\n  selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]]\n});\n\nNgbPanelTitle.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive that wraps the accordion panel content.\n */\n\n\nvar NgbPanelContent = function NgbPanelContent(templateRef) {\n  _classCallCheck(this, NgbPanelContent);\n\n  this.templateRef = templateRef;\n};\n\nNgbPanelContent.ɵfac = function NgbPanelContent_Factory(t) {\n  return new (t || NgbPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelContent,\n  selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]]\n});\n\nNgbPanelContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n\n\nvar NgbPanel = /*#__PURE__*/function () {\n  function NgbPanel() {\n    _classCallCheck(this, NgbPanel);\n\n    /**\n     *  If `true`, the panel is disabled an can't be toggled.\n     */\n    this.disabled = false;\n    /**\n     *  An optional id for the panel that must be unique on the page.\n     *\n     *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n     */\n\n    this.id = \"ngb-panel-\".concat(nextId++);\n    this.isOpen = false;\n  }\n\n  _createClass(NgbPanel, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.titleTpl = this.titleTpls.first;\n      this.headerTpl = this.headerTpls.first;\n      this.contentTpl = this.contentTpls.first;\n    }\n  }]);\n\n  return NgbPanel;\n}();\n\nNgbPanel.ɵfac = function NgbPanel_Factory(t) {\n  return new (t || NgbPanel)();\n};\n\nNgbPanel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanel,\n  selectors: [[\"ngb-panel\"]],\n  contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelTitle, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelHeader, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelContent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    id: \"id\",\n    title: \"title\",\n    type: \"type\",\n    cardClass: \"cardClass\"\n  }\n});\n\n__decorate([Input()], NgbPanel.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgbPanel.prototype, \"id\", void 0);\n\n__decorate([Input()], NgbPanel.prototype, \"title\", void 0);\n\n__decorate([Input()], NgbPanel.prototype, \"type\", void 0);\n\n__decorate([Input()], NgbPanel.prototype, \"cardClass\", void 0);\n\n__decorate([ContentChildren(NgbPanelTitle, {\n  descendants: false\n})], NgbPanel.prototype, \"titleTpls\", void 0);\n\n__decorate([ContentChildren(NgbPanelHeader, {\n  descendants: false\n})], NgbPanel.prototype, \"headerTpls\", void 0);\n\n__decorate([ContentChildren(NgbPanelContent, {\n  descendants: false\n})], NgbPanel.prototype, \"contentTpls\", void 0);\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n\n\nvar NgbAccordion = /*#__PURE__*/function () {\n  function NgbAccordion(config) {\n    _classCallCheck(this, NgbAccordion);\n\n    /**\n     * An array or comma separated strings of panel ids that should be opened **initially**.\n     *\n     * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n     * the `(panelChange)` event.\n     */\n    this.activeIds = [];\n    /**\n     * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n     */\n\n    this.destroyOnHide = true;\n    /**\n     * Event emitted right before the panel toggle happens.\n     *\n     * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n     */\n\n    this.panelChange = new EventEmitter();\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n\n\n  _createClass(NgbAccordion, [{\n    key: \"isExpanded\",\n    value: function isExpanded(panelId) {\n      return this.activeIds.indexOf(panelId) > -1;\n    }\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     */\n\n  }, {\n    key: \"expand\",\n    value: function expand(panelId) {\n      this._changeOpenState(this._findPanelById(panelId), true);\n    }\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     */\n\n  }, {\n    key: \"expandAll\",\n    value: function expandAll() {\n      var _this = this;\n\n      if (this.closeOtherPanels) {\n        if (this.activeIds.length === 0 && this.panels.length) {\n          this._changeOpenState(this.panels.first, true);\n        }\n      } else {\n        this.panels.forEach(function (panel) {\n          return _this._changeOpenState(panel, true);\n        });\n      }\n    }\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     */\n\n  }, {\n    key: \"collapse\",\n    value: function collapse(panelId) {\n      this._changeOpenState(this._findPanelById(panelId), false);\n    }\n    /**\n     * Collapses all opened panels.\n     */\n\n  }, {\n    key: \"collapseAll\",\n    value: function collapseAll() {\n      var _this2 = this;\n\n      this.panels.forEach(function (panel) {\n        _this2._changeOpenState(panel, false);\n      });\n    }\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(panelId) {\n      var panel = this._findPanelById(panelId);\n\n      if (panel) {\n        this._changeOpenState(panel, !panel.isOpen);\n      }\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var _this3 = this;\n\n      // active id updates\n      if (isString(this.activeIds)) {\n        this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n      } // update panels open states\n\n\n      this.panels.forEach(function (panel) {\n        return panel.isOpen = !panel.disabled && _this3.activeIds.indexOf(panel.id) > -1;\n      }); // closeOthers updates\n\n      if (this.activeIds.length > 1 && this.closeOtherPanels) {\n        this._closeOthers(this.activeIds[0]);\n\n        this._updateActiveIds();\n      }\n    }\n  }, {\n    key: \"_changeOpenState\",\n    value: function _changeOpenState(panel, nextState) {\n      if (panel && !panel.disabled && panel.isOpen !== nextState) {\n        var defaultPrevented = false;\n        this.panelChange.emit({\n          panelId: panel.id,\n          nextState: nextState,\n          preventDefault: function preventDefault() {\n            defaultPrevented = true;\n          }\n        });\n\n        if (!defaultPrevented) {\n          panel.isOpen = nextState;\n\n          if (nextState && this.closeOtherPanels) {\n            this._closeOthers(panel.id);\n          }\n\n          this._updateActiveIds();\n        }\n      }\n    }\n  }, {\n    key: \"_closeOthers\",\n    value: function _closeOthers(panelId) {\n      this.panels.forEach(function (panel) {\n        if (panel.id !== panelId) {\n          panel.isOpen = false;\n        }\n      });\n    }\n  }, {\n    key: \"_findPanelById\",\n    value: function _findPanelById(panelId) {\n      return this.panels.find(function (p) {\n        return p.id === panelId;\n      });\n    }\n  }, {\n    key: \"_updateActiveIds\",\n    value: function _updateActiveIds() {\n      this.activeIds = this.panels.filter(function (panel) {\n        return panel.isOpen && !panel.disabled;\n      }).map(function (panel) {\n        return panel.id;\n      });\n    }\n  }]);\n\n  return NgbAccordion;\n}();\n\nNgbAccordion.ɵfac = function NgbAccordion_Factory(t) {\n  return new (t || NgbAccordion)(ɵngcc0.ɵɵdirectiveInject(NgbAccordionConfig));\n};\n\nNgbAccordion.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAccordion,\n  selectors: [[\"ngb-accordion\"]],\n  contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanel, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panels = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"],\n  hostVars: 1,\n  hostBindings: function NgbAccordion_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-multiselectable\", !ctx.closeOtherPanels);\n    }\n  },\n  inputs: {\n    activeIds: \"activeIds\",\n    destroyOnHide: \"destroyOnHide\",\n    type: \"type\",\n    closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"]\n  },\n  outputs: {\n    panelChange: \"panelChange\"\n  },\n  exportAs: [\"ngbAccordion\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"btn\", \"btn-link\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", \"class\", \"collapse\", 3, \"id\", \"show\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"collapse\", 3, \"id\"], [1, \"card-body\"]],\n  template: function NgbAccordion_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_Template, 4, 11, \"ng-template\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    }\n  },\n  directives: function directives() {\n    return [NgbPanelHeader, ɵngcc1.NgForOf, NgbPanelToggle, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf];\n  },\n  encapsulation: 2\n});\n\nNgbAccordion.ctorParameters = function () {\n  return [{\n    type: NgbAccordionConfig\n  }];\n};\n\n__decorate([ContentChildren(NgbPanel)], NgbAccordion.prototype, \"panels\", void 0);\n\n__decorate([Input()], NgbAccordion.prototype, \"activeIds\", void 0);\n\n__decorate([Input('closeOthers')], NgbAccordion.prototype, \"closeOtherPanels\", void 0);\n\n__decorate([Input()], NgbAccordion.prototype, \"destroyOnHide\", void 0);\n\n__decorate([Input()], NgbAccordion.prototype, \"type\", void 0);\n\n__decorate([Output()], NgbAccordion.prototype, \"panelChange\", void 0);\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n\n\nvar NgbPanelToggle = /*#__PURE__*/function () {\n  function NgbPanelToggle(accordion, panel) {\n    _classCallCheck(this, NgbPanelToggle);\n\n    this.accordion = accordion;\n    this.panel = panel;\n  }\n\n  _createClass(NgbPanelToggle, [{\n    key: \"ngbPanelToggle\",\n    set: function set(panel) {\n      if (panel) {\n        this.panel = panel;\n      }\n    }\n  }]);\n\n  return NgbPanelToggle;\n}();\n\nNgbPanelToggle.ɵfac = function NgbPanelToggle_Factory(t) {\n  return new (t || NgbPanelToggle)(ɵngcc0.ɵɵdirectiveInject(NgbAccordion), ɵngcc0.ɵɵdirectiveInject(NgbPanel, 9));\n};\n\nNgbPanelToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPanelToggle,\n  selectors: [[\"button\", \"ngbPanelToggle\", \"\"]],\n  hostAttrs: [\"type\", \"button\"],\n  hostVars: 5,\n  hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbPanelToggle_click_HostBindingHandler() {\n        return ctx.accordion.toggle(ctx.panel.id);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.panel.disabled);\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n      ɵngcc0.ɵɵclassProp(\"collapsed\", !ctx.panel.isOpen);\n    }\n  },\n  inputs: {\n    ngbPanelToggle: \"ngbPanelToggle\"\n  }\n});\n\nNgbPanelToggle.ctorParameters = function () {\n  return [{\n    type: NgbAccordion\n  }, {\n    type: NgbPanel,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Host\n    }]\n  }];\n};\n\n__decorate([Input()], NgbPanelToggle.prototype, \"ngbPanelToggle\", null);\n\nNgbPanelToggle = __decorate([__param(1, Optional()), __param(1, Host())], NgbPanelToggle);\nvar NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\nvar NgbAccordionModule = function NgbAccordionModule() {\n  _classCallCheck(this, NgbAccordionModule);\n};\n\nNgbAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAccordionModule\n});\nNgbAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAccordionModule_Factory(t) {\n    return new (t || NgbAccordionModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n\nvar NgbAlertConfig = function NgbAlertConfig() {\n  _classCallCheck(this, NgbAlertConfig);\n\n  this.dismissible = true;\n  this.type = 'warning';\n};\n\nNgbAlertConfig.ɵfac = function NgbAlertConfig_Factory(t) {\n  return new (t || NgbAlertConfig)();\n};\n\nNgbAlertConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbAlertConfig_Factory() {\n    return new NgbAlertConfig();\n  },\n  token: NgbAlertConfig,\n  providedIn: \"root\"\n});\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n\nvar NgbAlert = /*#__PURE__*/function () {\n  function NgbAlert(config, _renderer, _element) {\n    _classCallCheck(this, NgbAlert);\n\n    this._renderer = _renderer;\n    this._element = _element;\n    /**\n     * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n     */\n\n    this.close = new EventEmitter();\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  _createClass(NgbAlert, [{\n    key: \"closeHandler\",\n    value: function closeHandler() {\n      this.close.emit(null);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var typeChange = changes['type'];\n\n      if (typeChange && !typeChange.firstChange) {\n        this._renderer.removeClass(this._element.nativeElement, \"alert-\".concat(typeChange.previousValue));\n\n        this._renderer.addClass(this._element.nativeElement, \"alert-\".concat(typeChange.currentValue));\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._renderer.addClass(this._element.nativeElement, \"alert-\".concat(this.type));\n    }\n  }]);\n\n  return NgbAlert;\n}();\n\nNgbAlert.ɵfac = function NgbAlert_Factory(t) {\n  return new (t || NgbAlert)(ɵngcc0.ɵɵdirectiveInject(NgbAlertConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbAlert.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbAlert,\n  selectors: [[\"ngb-alert\"]],\n  hostAttrs: [\"role\", \"alert\", 1, \"alert\"],\n  hostVars: 2,\n  hostBindings: function NgbAlert_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"alert-dismissible\", ctx.dismissible);\n    }\n  },\n  inputs: {\n    dismissible: \"dismissible\",\n    type: \"type\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c5,\n  decls: 2,\n  vars: 1,\n  consts: function consts() {\n    var i18n_1;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2 = goog.getMsg(\"Close\");\n      i18n_1 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS_2;\n    } else {\n      i18n_1 = $localize(_templateObject());\n    }\n\n    var i18n_3;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS__4 = goog.getMsg(\"Close\");\n      i18n_3 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS__4;\n    } else {\n      i18n_3 = $localize(_templateObject2());\n    }\n\n    return [[\"type\", \"button\", \"class\", \"close\", \"aria-label\", i18n_1, 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", i18n_3, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbAlert_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵtemplate(1, NgbAlert_button_1_Template, 3, 0, \"button\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-alert{display:block}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbAlert.ctorParameters = function () {\n  return [{\n    type: NgbAlertConfig\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\n__decorate([Input()], NgbAlert.prototype, \"dismissible\", void 0);\n\n__decorate([Input()], NgbAlert.prototype, \"type\", void 0);\n\n__decorate([Output()], NgbAlert.prototype, \"close\", void 0);\n\nvar NgbAlertModule = function NgbAlertModule() {\n  _classCallCheck(this, NgbAlertModule);\n};\n\nNgbAlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbAlertModule\n});\nNgbAlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbAlertModule_Factory(t) {\n    return new (t || NgbAlertModule)();\n  },\n  imports: [[CommonModule]]\n});\n\nvar NgbButtonLabel = function NgbButtonLabel() {\n  _classCallCheck(this, NgbButtonLabel);\n};\n\nNgbButtonLabel.ɵfac = function NgbButtonLabel_Factory(t) {\n  return new (t || NgbButtonLabel)();\n};\n\nNgbButtonLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbButtonLabel,\n  selectors: [[\"\", \"ngbButtonLabel\", \"\"]],\n  hostVars: 8,\n  hostBindings: function NgbButtonLabel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"btn\", true)(\"active\", ctx.active)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused);\n    }\n  }\n});\nvar NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbCheckBox;\n  }),\n  multi: true\n};\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n\nvar NgbCheckBox = /*#__PURE__*/function () {\n  function NgbCheckBox(_label, _cd) {\n    _classCallCheck(this, NgbCheckBox);\n\n    this._label = _label;\n    this._cd = _cd;\n    /**\n     * If `true`, the checkbox button will be disabled\n     */\n\n    this.disabled = false;\n    /**\n     * The form control value when the checkbox is checked.\n     */\n\n    this.valueChecked = true;\n    /**\n     * The form control value when the checkbox is unchecked.\n     */\n\n    this.valueUnChecked = false;\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n  }\n\n  _createClass(NgbCheckBox, [{\n    key: \"onInputChange\",\n    value: function onInputChange($event) {\n      var modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n      this.onChange(modelToPropagate);\n      this.onTouched();\n      this.writeValue(modelToPropagate);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._label.disabled = isDisabled;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.checked = value === this.valueChecked;\n      this._label.active = this.checked; // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n\n      this._cd.markForCheck();\n    }\n  }, {\n    key: \"focused\",\n    set: function set(isFocused) {\n      this._label.focused = isFocused;\n\n      if (!isFocused) {\n        this.onTouched();\n      }\n    }\n  }]);\n\n  return NgbCheckBox;\n}();\n\nNgbCheckBox.ɵfac = function NgbCheckBox_Factory(t) {\n  return new (t || NgbCheckBox)(ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbCheckBox.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCheckBox,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"checkbox\"]],\n  hostVars: 2,\n  hostBindings: function NgbCheckBox_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbCheckBox_change_HostBindingHandler($event) {\n        return ctx.onInputChange($event);\n      })(\"focus\", function NgbCheckBox_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbCheckBox_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    valueChecked: \"valueChecked\",\n    valueUnChecked: \"valueUnChecked\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_CHECKBOX_VALUE_ACCESSOR])]\n});\n\nNgbCheckBox.ctorParameters = function () {\n  return [{\n    type: NgbButtonLabel\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], NgbCheckBox.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgbCheckBox.prototype, \"valueChecked\", void 0);\n\n__decorate([Input()], NgbCheckBox.prototype, \"valueUnChecked\", void 0);\n\nvar NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbRadioGroup;\n  }),\n  multi: true\n};\nvar nextId$1 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n\nvar NgbRadioGroup = /*#__PURE__*/function () {\n  function NgbRadioGroup() {\n    _classCallCheck(this, NgbRadioGroup);\n\n    this._radios = new Set();\n    this._value = null;\n    /**\n     * Name of the radio group applied to radio input elements.\n     *\n     * Will be applied to all radio input elements inside the group,\n     * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n     *\n     * If not provided, will be generated in the `ngb-radio-xx` format.\n     */\n\n    this.name = \"ngb-radio-\".concat(nextId$1++);\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n  }\n\n  _createClass(NgbRadioGroup, [{\n    key: \"onRadioChange\",\n    value: function onRadioChange(radio) {\n      this.writeValue(radio.value);\n      this.onChange(radio.value);\n    }\n  }, {\n    key: \"onRadioValueUpdate\",\n    value: function onRadioValueUpdate() {\n      this._updateRadiosValue();\n    }\n  }, {\n    key: \"register\",\n    value: function register(radio) {\n      this._radios.add(radio);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this._disabled = isDisabled;\n\n      this._updateRadiosDisabled();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(radio) {\n      this._radios.delete(radio);\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._value = value;\n\n      this._updateRadiosValue();\n    }\n  }, {\n    key: \"_updateRadiosValue\",\n    value: function _updateRadiosValue() {\n      var _this4 = this;\n\n      this._radios.forEach(function (radio) {\n        return radio.updateValue(_this4._value);\n      });\n    }\n  }, {\n    key: \"_updateRadiosDisabled\",\n    value: function _updateRadiosDisabled() {\n      this._radios.forEach(function (radio) {\n        return radio.updateDisabled();\n      });\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(isDisabled) {\n      this.setDisabledState(isDisabled);\n    }\n  }]);\n\n  return NgbRadioGroup;\n}();\n\nNgbRadioGroup.ɵfac = function NgbRadioGroup_Factory(t) {\n  return new (t || NgbRadioGroup)();\n};\n\nNgbRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadioGroup,\n  selectors: [[\"\", \"ngbRadioGroup\", \"\"]],\n  hostAttrs: [\"role\", \"radiogroup\"],\n  inputs: {\n    name: \"name\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_RADIO_VALUE_ACCESSOR])]\n});\n\n__decorate([Input()], NgbRadioGroup.prototype, \"name\", void 0);\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n\n\nvar NgbRadio = /*#__PURE__*/function () {\n  function NgbRadio(_group, _label, _renderer, _element, _cd) {\n    _classCallCheck(this, NgbRadio);\n\n    this._group = _group;\n    this._label = _label;\n    this._renderer = _renderer;\n    this._element = _element;\n    this._cd = _cd;\n    this._value = null;\n\n    this._group.register(this);\n\n    this.updateDisabled();\n  }\n  /**\n   * The form control value when current radio button is checked.\n   */\n\n\n  _createClass(NgbRadio, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._group.unregister(this);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      this._group.onRadioChange(this);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n      if (this.value !== value) {\n        this._cd.markForCheck();\n      }\n\n      this._checked = this.value === value;\n      this._label.active = this._checked;\n    }\n  }, {\n    key: \"updateDisabled\",\n    value: function updateDisabled() {\n      this._label.disabled = this.disabled;\n    }\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this._value = value;\n      var stringValue = value ? value.toString() : '';\n\n      this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n\n      this._group.onRadioValueUpdate();\n    }\n    /**\n     * If `true`, current radio button will be disabled.\n     */\n    ,\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"disabled\",\n    set: function set(isDisabled) {\n      this._disabled = isDisabled !== false;\n      this.updateDisabled();\n    },\n    get: function get() {\n      return this._group.disabled || this._disabled;\n    }\n  }, {\n    key: \"focused\",\n    set: function set(isFocused) {\n      if (this._label) {\n        this._label.focused = isFocused;\n      }\n\n      if (!isFocused) {\n        this._group.onTouched();\n      }\n    }\n  }, {\n    key: \"checked\",\n    get: function get() {\n      return this._checked;\n    }\n  }, {\n    key: \"nameAttr\",\n    get: function get() {\n      return this.name || this._group.name;\n    }\n  }]);\n\n  return NgbRadio;\n}();\n\nNgbRadio.ɵfac = function NgbRadio_Factory(t) {\n  return new (t || NgbRadio)(ɵngcc0.ɵɵdirectiveInject(NgbRadioGroup), ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbRadio.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbRadio,\n  selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"radio\"]],\n  hostVars: 3,\n  hostBindings: function NgbRadio_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"change\", function NgbRadio_change_HostBindingHandler() {\n        return ctx.onChange();\n      })(\"focus\", function NgbRadio_focus_HostBindingHandler() {\n        return ctx.focused = true;\n      })(\"blur\", function NgbRadio_blur_HostBindingHandler() {\n        return ctx.focused = false;\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"name\", ctx.nameAttr);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    disabled: \"disabled\",\n    name: \"name\"\n  }\n});\n\nNgbRadio.ctorParameters = function () {\n  return [{\n    type: NgbRadioGroup\n  }, {\n    type: NgbButtonLabel\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], NgbRadio.prototype, \"name\", void 0);\n\n__decorate([Input('value')], NgbRadio.prototype, \"value\", null);\n\n__decorate([Input('disabled')], NgbRadio.prototype, \"disabled\", null);\n\nvar NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\nvar NgbButtonsModule = function NgbButtonsModule() {\n  _classCallCheck(this, NgbButtonsModule);\n};\n\nNgbButtonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbButtonsModule\n});\nNgbButtonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbButtonsModule_Factory(t) {\n    return new (t || NgbButtonsModule)();\n  }\n});\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n\nvar NgbCarouselConfig = function NgbCarouselConfig() {\n  _classCallCheck(this, NgbCarouselConfig);\n\n  this.interval = 5000;\n  this.wrap = true;\n  this.keyboard = true;\n  this.pauseOnHover = true;\n  this.showNavigationArrows = true;\n  this.showNavigationIndicators = true;\n};\n\nNgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) {\n  return new (t || NgbCarouselConfig)();\n};\n\nNgbCarouselConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbCarouselConfig_Factory() {\n    return new NgbCarouselConfig();\n  },\n  token: NgbCarouselConfig,\n  providedIn: \"root\"\n});\nvar nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\n\nvar NgbSlide = function NgbSlide(tplRef) {\n  _classCallCheck(this, NgbSlide);\n\n  this.tplRef = tplRef;\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n\n  this.id = \"ngb-slide-\".concat(nextId$2++);\n};\n\nNgbSlide.ɵfac = function NgbSlide_Factory(t) {\n  return new (t || NgbSlide)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbSlide.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbSlide,\n  selectors: [[\"ng-template\", \"ngbSlide\", \"\"]],\n  inputs: {\n    id: \"id\"\n  }\n});\n\nNgbSlide.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n\n__decorate([Input()], NgbSlide.prototype, \"id\", void 0);\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n\n\nvar NgbCarousel = /*#__PURE__*/function () {\n  function NgbCarousel(config, _platformId, _ngZone, _cd) {\n    _classCallCheck(this, NgbCarousel);\n\n    this._platformId = _platformId;\n    this._ngZone = _ngZone;\n    this._cd = _cd;\n    this.NgbSlideEventSource = NgbSlideEventSource;\n    this._destroy$ = new Subject();\n    this._interval$ = new BehaviorSubject(0);\n    this._mouseHover$ = new BehaviorSubject(false);\n    this._pauseOnHover$ = new BehaviorSubject(false);\n    this._pause$ = new BehaviorSubject(false);\n    this._wrap$ = new BehaviorSubject(false);\n    /**\n     * An event emitted right after the slide transition is completed.\n     *\n     * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n     */\n\n    this.slide = new EventEmitter();\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n\n\n  _createClass(NgbCarousel, [{\n    key: \"mouseEnter\",\n    value: function mouseEnter() {\n      this._mouseHover$.next(true);\n    }\n  }, {\n    key: \"mouseLeave\",\n    value: function mouseLeave() {\n      this._mouseHover$.next(false);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this5 = this;\n\n      // setInterval() doesn't play well with SSR and protractor,\n      // so we should run it in the browser and outside Angular\n      if (isPlatformBrowser(this._platformId)) {\n        this._ngZone.runOutsideAngular(function () {\n          var hasNextSlide$ = combineLatest([_this5.slide.pipe(map(function (slideEvent) {\n            return slideEvent.current;\n          }), startWith(_this5.activeId)), _this5._wrap$, _this5.slides.changes.pipe(startWith(null))]).pipe(map(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                currentSlideId = _ref2[0],\n                wrap = _ref2[1];\n\n            var slideArr = _this5.slides.toArray();\n\n            var currentSlideIdx = _this5._getSlideIdxById(currentSlideId);\n\n            return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n          }), distinctUntilChanged());\n          combineLatest([_this5._pause$, _this5._pauseOnHover$, _this5._mouseHover$, _this5._interval$, hasNextSlide$]).pipe(map(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 5),\n                pause = _ref4[0],\n                pauseOnHover = _ref4[1],\n                mouseHover = _ref4[2],\n                interval = _ref4[3],\n                hasNextSlide = _ref4[4];\n\n            return pause || pauseOnHover && mouseHover || !hasNextSlide ? 0 : interval;\n          }), distinctUntilChanged(), switchMap(function (interval) {\n            return interval > 0 ? timer(interval, interval) : NEVER;\n          }), takeUntil(_this5._destroy$)).subscribe(function () {\n            return _this5._ngZone.run(function () {\n              return _this5.next(NgbSlideEventSource.TIMER);\n            });\n          });\n        });\n      }\n\n      this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(function () {\n        return _this5._cd.markForCheck();\n      });\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      var activeSlide = this._getSlideById(this.activeId);\n\n      this.activeId = activeSlide ? activeSlide.id : this.slides.length ? this.slides.first.id : null;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroy$.next();\n    }\n    /**\n     * Navigates to a slide with the specified identifier.\n     */\n\n  }, {\n    key: \"select\",\n    value: function select(slideId, source) {\n      this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     */\n\n  }, {\n    key: \"prev\",\n    value: function prev(source) {\n      this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n    }\n    /**\n     * Navigates to the next slide.\n     */\n\n  }, {\n    key: \"next\",\n    value: function next(source) {\n      this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._pause$.next(true);\n    }\n    /**\n     * Restarts cycling through the slides from left to right.\n     */\n\n  }, {\n    key: \"cycle\",\n    value: function cycle() {\n      this._pause$.next(false);\n    }\n  }, {\n    key: \"_cycleToSelected\",\n    value: function _cycleToSelected(slideIdx, direction, source) {\n      var selectedSlide = this._getSlideById(slideIdx);\n\n      if (selectedSlide && selectedSlide.id !== this.activeId) {\n        this.slide.emit({\n          prev: this.activeId,\n          current: selectedSlide.id,\n          direction: direction,\n          paused: this._pause$.value,\n          source: source\n        });\n        this.activeId = selectedSlide.id;\n      } // we get here after the interval fires or any external API call like next(), prev() or select()\n\n\n      this._cd.markForCheck();\n    }\n  }, {\n    key: \"_getSlideEventDirection\",\n    value: function _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n      var currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n\n      var nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n      return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    }\n  }, {\n    key: \"_getSlideById\",\n    value: function _getSlideById(slideId) {\n      return this.slides.find(function (slide) {\n        return slide.id === slideId;\n      });\n    }\n  }, {\n    key: \"_getSlideIdxById\",\n    value: function _getSlideIdxById(slideId) {\n      return this.slides.toArray().indexOf(this._getSlideById(slideId));\n    }\n  }, {\n    key: \"_getNextSlide\",\n    value: function _getNextSlide(currentSlideId) {\n      var slideArr = this.slides.toArray();\n\n      var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n      var isLastSlide = currentSlideIdx === slideArr.length - 1;\n      return isLastSlide ? this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id : slideArr[currentSlideIdx + 1].id;\n    }\n  }, {\n    key: \"_getPrevSlide\",\n    value: function _getPrevSlide(currentSlideId) {\n      var slideArr = this.slides.toArray();\n\n      var currentSlideIdx = this._getSlideIdxById(currentSlideId);\n\n      var isFirstSlide = currentSlideIdx === 0;\n      return isFirstSlide ? this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id : slideArr[currentSlideIdx - 1].id;\n    }\n  }, {\n    key: \"interval\",\n    set: function set(value) {\n      this._interval$.next(value);\n    },\n    get: function get() {\n      return this._interval$.value;\n    }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     */\n\n  }, {\n    key: \"wrap\",\n    set: function set(value) {\n      this._wrap$.next(value);\n    },\n    get: function get() {\n      return this._wrap$.value;\n    }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * @since 2.2.0\n     */\n\n  }, {\n    key: \"pauseOnHover\",\n    set: function set(value) {\n      this._pauseOnHover$.next(value);\n    },\n    get: function get() {\n      return this._pauseOnHover$.value;\n    }\n  }]);\n\n  return NgbCarousel;\n}();\n\nNgbCarousel.ɵfac = function NgbCarousel_Factory(t) {\n  return new (t || NgbCarousel)(ɵngcc0.ɵɵdirectiveInject(NgbCarouselConfig), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbCarousel.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbCarousel,\n  selectors: [[\"ngb-carousel\"]],\n  contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbSlide, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t);\n    }\n  },\n  hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"],\n  hostVars: 2,\n  hostBindings: function NgbCarousel_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() {\n        return ctx.keyboard && ctx.prev(ctx.NgbSlideEventSource.ARROW_LEFT);\n      })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() {\n        return ctx.keyboard && ctx.next(ctx.NgbSlideEventSource.ARROW_RIGHT);\n      })(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() {\n        return ctx.mouseEnter();\n      })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() {\n        return ctx.mouseLeave();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"display\", \"block\");\n    }\n  },\n  inputs: {\n    interval: \"interval\",\n    wrap: \"wrap\",\n    keyboard: \"keyboard\",\n    pauseOnHover: \"pauseOnHover\",\n    showNavigationArrows: \"showNavigationArrows\",\n    showNavigationIndicators: \"showNavigationIndicators\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    slide: \"slide\"\n  },\n  exportAs: [\"ngbCarousel\"],\n  decls: 5,\n  vars: 4,\n  consts: function consts() {\n    var i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7 = goog.getMsg(\"Previous\");\n      i18n_6 = MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__7;\n    } else {\n      i18n_6 = $localize(_templateObject3());\n    }\n\n    var i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9 = goog.getMsg(\"Next\");\n      i18n_8 = MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__9;\n    } else {\n      i18n_8 = $localize(_templateObject4());\n    }\n\n    return [[\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"id\", \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\", \"click\"], [1, \"carousel-item\"], [3, \"ngTemplateOutlet\"], [\"role\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], [1, \"sr-only\"], i18n_6, [\"role\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_8];\n  },\n  template: function NgbCarousel_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbCarousel_ol_0_Template, 2, 1, \"ol\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, NgbCarousel_div_2_Template, 2, 3, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, NgbCarousel_a_3_Template, 4, 0, \"a\", 3);\n      ɵngcc0.ɵɵtemplate(4, NgbCarousel_a_4_Template, 4, 0, \"a\", 4);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationIndicators);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbCarousel.ctorParameters = function () {\n  return [{\n    type: NgbCarouselConfig\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([ContentChildren(NgbSlide)], NgbCarousel.prototype, \"slides\", void 0);\n\n__decorate([Input()], NgbCarousel.prototype, \"activeId\", void 0);\n\n__decorate([Input()], NgbCarousel.prototype, \"interval\", null);\n\n__decorate([Input()], NgbCarousel.prototype, \"wrap\", null);\n\n__decorate([Input()], NgbCarousel.prototype, \"keyboard\", void 0);\n\n__decorate([Input()], NgbCarousel.prototype, \"pauseOnHover\", null);\n\n__decorate([Input()], NgbCarousel.prototype, \"showNavigationArrows\", void 0);\n\n__decorate([Input()], NgbCarousel.prototype, \"showNavigationIndicators\", void 0);\n\n__decorate([Output()], NgbCarousel.prototype, \"slide\", void 0);\n\n__decorate([HostListener('mouseenter')], NgbCarousel.prototype, \"mouseEnter\", null);\n\n__decorate([HostListener('mouseleave')], NgbCarousel.prototype, \"mouseLeave\", null);\n\nNgbCarousel = __decorate([__param(1, Inject(PLATFORM_ID))], NgbCarousel);\n/**\n * Defines the carousel slide transition direction.\n */\n\nvar NgbSlideEventDirection;\n\n(function (NgbSlideEventDirection) {\n  NgbSlideEventDirection[NgbSlideEventDirection[\"LEFT\"] = 'left'] = \"LEFT\";\n  NgbSlideEventDirection[NgbSlideEventDirection[\"RIGHT\"] = 'right'] = \"RIGHT\";\n})(NgbSlideEventDirection || (NgbSlideEventDirection = {}));\n\nvar NgbSlideEventSource;\n\n(function (NgbSlideEventSource) {\n  NgbSlideEventSource[\"TIMER\"] = \"timer\";\n  NgbSlideEventSource[\"ARROW_LEFT\"] = \"arrowLeft\";\n  NgbSlideEventSource[\"ARROW_RIGHT\"] = \"arrowRight\";\n  NgbSlideEventSource[\"INDICATOR\"] = \"indicator\";\n})(NgbSlideEventSource || (NgbSlideEventSource = {}));\n\nvar NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\nvar NgbCarouselModule = function NgbCarouselModule() {\n  _classCallCheck(this, NgbCarouselModule);\n};\n\nNgbCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCarouselModule\n});\nNgbCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCarouselModule_Factory(t) {\n    return new (t || NgbCarouselModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n\nvar NgbCollapse = function NgbCollapse() {\n  _classCallCheck(this, NgbCollapse);\n\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  this.collapsed = false;\n};\n\nNgbCollapse.ɵfac = function NgbCollapse_Factory(t) {\n  return new (t || NgbCollapse)();\n};\n\nNgbCollapse.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbCollapse,\n  selectors: [[\"\", \"ngbCollapse\", \"\"]],\n  hostVars: 4,\n  hostBindings: function NgbCollapse_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"collapse\", true)(\"show\", !ctx.collapsed);\n    }\n  },\n  inputs: {\n    collapsed: [\"ngbCollapse\", \"collapsed\"]\n  },\n  exportAs: [\"ngbCollapse\"]\n});\n\n__decorate([Input('ngbCollapse')], NgbCollapse.prototype, \"collapsed\", void 0);\n\nvar NgbCollapseModule = function NgbCollapseModule() {\n  _classCallCheck(this, NgbCollapseModule);\n};\n\nNgbCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbCollapseModule\n});\nNgbCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbCollapseModule_Factory(t) {\n    return new (t || NgbCollapseModule)();\n  }\n});\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\n\nvar NgbDate = /*#__PURE__*/function () {\n  function NgbDate(year, month, day) {\n    _classCallCheck(this, NgbDate);\n\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n\n\n  _createClass(NgbDate, [{\n    key: \"equals\",\n\n    /**\n     * Checks if the current date is equal to another date.\n     */\n    value: function equals(other) {\n      return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     */\n\n  }, {\n    key: \"before\",\n    value: function before(other) {\n      if (!other) {\n        return false;\n      }\n\n      if (this.year === other.year) {\n        if (this.month === other.month) {\n          return this.day === other.day ? false : this.day < other.day;\n        } else {\n          return this.month < other.month;\n        }\n      } else {\n        return this.year < other.year;\n      }\n    }\n    /**\n     * Checks if the current date is after another date.\n     */\n\n  }, {\n    key: \"after\",\n    value: function after(other) {\n      if (!other) {\n        return false;\n      }\n\n      if (this.year === other.year) {\n        if (this.month === other.month) {\n          return this.day === other.day ? false : this.day > other.day;\n        } else {\n          return this.month > other.month;\n        }\n      } else {\n        return this.year > other.year;\n      }\n    }\n  }], [{\n    key: \"from\",\n    value: function from(date) {\n      if (date instanceof NgbDate) {\n        return date;\n      }\n\n      return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n  }]);\n\n  return NgbDate;\n}();\n\nfunction fromJSDate(jsDate) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n\nfunction toJSDate(date) {\n  var jsDate = new Date(date.year, date.month - 1, date.day, 12); // this is done avoid 30 -> 1930 conversion\n\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n\n  return jsDate;\n}\n\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n\n\nvar NgbCalendar = function NgbCalendar() {\n  _classCallCheck(this, NgbCalendar);\n};\n\nNgbCalendar.ɵfac = function NgbCalendar_Factory(t) {\n  return new (t || NgbCalendar)();\n};\n\nNgbCalendar.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_CALENDAR_FACTORY,\n  token: NgbCalendar,\n  providedIn: \"root\"\n});\n\nvar NgbCalendarGregorian = /*#__PURE__*/function (_NgbCalendar) {\n  _inherits(NgbCalendarGregorian, _NgbCalendar);\n\n  var _super = _createSuper(NgbCalendarGregorian);\n\n  function NgbCalendarGregorian() {\n    _classCallCheck(this, NgbCalendarGregorian);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarGregorian, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var jsDate = toJSDate(date);\n      var checkMonth = true;\n      var expectedMonth = jsDate.getMonth();\n\n      switch (period) {\n        case 'y':\n          jsDate.setFullYear(jsDate.getFullYear() + number);\n          break;\n\n        case 'm':\n          expectedMonth += number;\n          jsDate.setMonth(expectedMonth);\n          expectedMonth = expectedMonth % 12;\n\n          if (expectedMonth < 0) {\n            expectedMonth = expectedMonth + 12;\n          }\n\n          break;\n\n        case 'd':\n          jsDate.setDate(jsDate.getDate() + number);\n          checkMonth = false;\n          break;\n\n        default:\n          return date;\n      }\n\n      if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n        // this means the destination month has less days than the initial month\n        // let's go back to the end of the previous month:\n        jsDate.setDate(0);\n      }\n\n      return fromJSDate(jsDate);\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var jsDate = toJSDate(date);\n      var day = jsDate.getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = toJSDate(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n      var time = jsDate.getTime();\n      jsDate.setMonth(0); // Compare with Jan 1\n\n      jsDate.setDate(1);\n      return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromJSDate(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n        return false;\n      } // year 0 doesn't exist in Gregorian calendar\n\n\n      if (date.year === 0) {\n        return false;\n      }\n\n      var jsDate = toJSDate(date);\n      return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month && jsDate.getDate() === date.day;\n    }\n  }]);\n\n  return NgbCalendarGregorian;\n}(NgbCalendar);\n\nNgbCalendarGregorian.ɵfac = function NgbCalendarGregorian_Factory(t) {\n  return ɵNgbCalendarGregorian_BaseFactory(t || NgbCalendarGregorian);\n};\n\nNgbCalendarGregorian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarGregorian,\n  factory: function factory(t) {\n    return NgbCalendarGregorian.ɵfac(t);\n  }\n});\n\nfunction isChangedDate(prev, next) {\n  return !dateComparator(prev, next);\n}\n\nfunction isChangedMonth(prev, next) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nfunction dateComparator(prev, next) {\n  return !prev && !next || !!prev && !!next && prev.equals(next);\n}\n\nfunction checkMinBeforeMax(minDate, maxDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(\"'maxDate' \".concat(maxDate, \" should be greater than 'minDate' \").concat(minDate));\n  }\n}\n\nfunction checkDateInRange(date, minDate, maxDate) {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nfunction isDateSelectable(date, state) {\n  var minDate = state.minDate,\n      maxDate = state.maxDate,\n      disabled = state.disabled,\n      markDisabled = state.markDisabled; // clang-format off\n\n  return !(!isDefined(date) || disabled || markDisabled && markDisabled(date, {\n    year: date.year,\n    month: date.month\n  }) || minDate && date.before(minDate) || maxDate && date.after(maxDate)); // clang-format on\n}\n\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  var months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    var index = months.findIndex(function (month) {\n      return month === minDate.month;\n    });\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    var _index = months.findIndex(function (month) {\n      return month === maxDate.month;\n    });\n\n    months = months.slice(0, _index + 1);\n  }\n\n  return months;\n}\n\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n  if (!date) {\n    return [];\n  }\n\n  var start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  var end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n  var length = end - start + 1;\n  var numbers = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nfunction nextMonthDisabled(calendar, date, maxDate) {\n  var nextDate = Object.assign(calendar.getNext(date, 'm'), {\n    day: 1\n  });\n  return maxDate && nextDate.after(maxDate);\n}\n\nfunction prevMonthDisabled(calendar, date, minDate) {\n  var prevDate = Object.assign(calendar.getPrev(date, 'm'), {\n    day: 1\n  });\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month || prevDate.year < minDate.year && minDate.month === 1);\n}\n\nfunction buildMonths(calendar, date, state, i18n, force) {\n  var displayMonths = state.displayMonths,\n      months = state.months; // move old months to a temporary array\n\n  var monthsToReuse = months.splice(0, months.length); // generate new first dates, nullify or reuse months\n\n  var firstDates = Array.from({\n    length: displayMonths\n  }, function (_, i) {\n    var firstDate = Object.assign(calendar.getNext(date, 'm', i), {\n      day: 1\n    });\n    months[i] = null;\n\n    if (!force) {\n      var reusedIndex = monthsToReuse.findIndex(function (month) {\n        return month.firstDate.equals(firstDate);\n      }); // move reused month back to months\n\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  }); // rebuild nullified months\n\n  firstDates.forEach(function (firstDate, i) {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {});\n    }\n  });\n  return months;\n}\n\nfunction buildMonth(calendar, date, state, i18n) {\n  var month = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  var dayTemplateData = state.dayTemplateData,\n      minDate = state.minDate,\n      maxDate = state.maxDate,\n      firstDayOfWeek = state.firstDayOfWeek,\n      markDisabled = state.markDisabled,\n      outsideDays = state.outsideDays;\n  var calendarToday = calendar.getToday();\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n  date = getFirstViewDate(calendar, date, firstDayOfWeek); // month has weeks\n\n  for (var week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    var weekObject = month.weeks[week];\n\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {\n        number: 0,\n        days: [],\n        collapsed: true\n      };\n    }\n\n    var days = weekObject.days; // week has days\n\n    for (var day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      var newDate = new NgbDate(date.year, date.month, date.day);\n      var nextDate = calendar.getNext(newDate);\n      var ariaLabel = i18n.getDayAriaLabel(newDate); // marking date as disabled\n\n      var disabled = !!(minDate && newDate.before(minDate) || maxDate && newDate.after(maxDate));\n\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {\n          month: month.number,\n          year: month.year\n        });\n      } // today\n\n\n      var today = newDate.equals(calendarToday); // adding user-provided data to the context\n\n      var contextUserData = dayTemplateData ? dayTemplateData(newDate, {\n        month: month.number,\n        year: month.year\n      }) : undefined; // saving first date of the month\n\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      } // saving last date of the month\n\n\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      var dayObject = days[day];\n\n      if (!dayObject) {\n        dayObject = days[day] = {};\n      }\n\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year,\n        disabled: disabled,\n        focused: false,\n        selected: false,\n        today: today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(function (day) {\n      return day.date;\n    }), firstDayOfWeek); // marking week as collapsed\n\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number && days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n  var daysPerWeek = calendar.getDaysPerWeek();\n  var firstMonthDate = new NgbDate(date.year, date.month, 1);\n  var dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n\n\nvar NgbDatepickerI18n = /*#__PURE__*/function () {\n  function NgbDatepickerI18n() {\n    _classCallCheck(this, NgbDatepickerI18n);\n  }\n\n  _createClass(NgbDatepickerI18n, [{\n    key: \"getDayNumerals\",\n\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * @since 3.0.0\n     */\n    value: function getDayNumerals(date) {\n      return \"\".concat(date.day);\n    }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * @since 3.0.0\n     */\n\n  }, {\n    key: \"getWeekNumerals\",\n    value: function getWeekNumerals(weekNumber) {\n      return \"\".concat(weekNumber);\n    }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * @since 3.0.0\n     */\n\n  }, {\n    key: \"getYearNumerals\",\n    value: function getYearNumerals(year) {\n      return \"\".concat(year);\n    }\n  }]);\n\n  return NgbDatepickerI18n;\n}();\n\nNgbDatepickerI18n.ɵfac = function NgbDatepickerI18n_Factory(t) {\n  return new (t || NgbDatepickerI18n)();\n};\n\nNgbDatepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerI18n_Factory() {\n    return NGB_DATEPICKER_18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbDatepickerI18n,\n  providedIn: \"root\"\n});\n\nvar NgbDatepickerI18nDefault = /*#__PURE__*/function (_NgbDatepickerI18n) {\n  _inherits(NgbDatepickerI18nDefault, _NgbDatepickerI18n);\n\n  var _super2 = _createSuper(NgbDatepickerI18nDefault);\n\n  function NgbDatepickerI18nDefault(_locale) {\n    var _this6;\n\n    _classCallCheck(this, NgbDatepickerI18nDefault);\n\n    _this6 = _super2.call(this);\n    _this6._locale = _locale;\n    var weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    _this6._weekdaysShort = weekdaysStartingOnSunday.map(function (day, index) {\n      return weekdaysStartingOnSunday[(index + 1) % 7];\n    });\n    _this6._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    _this6._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    return _this6;\n  }\n\n  _createClass(NgbDatepickerI18nDefault, [{\n    key: \"getWeekdayShortName\",\n    value: function getWeekdayShortName(weekday) {\n      return this._weekdaysShort[weekday - 1];\n    }\n  }, {\n    key: \"getMonthShortName\",\n    value: function getMonthShortName(month) {\n      return this._monthsShort[month - 1];\n    }\n  }, {\n    key: \"getMonthFullName\",\n    value: function getMonthFullName(month) {\n      return this._monthsFull[month - 1];\n    }\n  }, {\n    key: \"getDayAriaLabel\",\n    value: function getDayAriaLabel(date) {\n      var jsDate = new Date(date.year, date.month - 1, date.day);\n      return formatDate(jsDate, 'fullDate', this._locale);\n    }\n  }]);\n\n  return NgbDatepickerI18nDefault;\n}(NgbDatepickerI18n);\n\nNgbDatepickerI18nDefault.ɵfac = function NgbDatepickerI18nDefault_Factory(t) {\n  return new (t || NgbDatepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\n\nNgbDatepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nDefault,\n  factory: function factory(t) {\n    return NgbDatepickerI18nDefault.ɵfac(t);\n  }\n});\n\nNgbDatepickerI18nDefault.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\nNgbDatepickerI18nDefault = __decorate([__param(0, Inject(LOCALE_ID))], NgbDatepickerI18nDefault);\n\nvar NgbDatepickerService = /*#__PURE__*/function () {\n  function NgbDatepickerService(_calendar, _i18n) {\n    var _this7 = this;\n\n    _classCallCheck(this, NgbDatepickerService);\n\n    this._calendar = _calendar;\n    this._i18n = _i18n;\n    this._VALIDATORS = {\n      dayTemplateData: function dayTemplateData(_dayTemplateData) {\n        if (_this7._state.dayTemplateData !== _dayTemplateData) {\n          return {\n            dayTemplateData: _dayTemplateData\n          };\n        }\n      },\n      displayMonths: function displayMonths(_displayMonths) {\n        _displayMonths = toInteger(_displayMonths);\n\n        if (isInteger(_displayMonths) && _displayMonths > 0 && _this7._state.displayMonths !== _displayMonths) {\n          return {\n            displayMonths: _displayMonths\n          };\n        }\n      },\n      disabled: function disabled(_disabled) {\n        if (_this7._state.disabled !== _disabled) {\n          return {\n            disabled: _disabled\n          };\n        }\n      },\n      firstDayOfWeek: function firstDayOfWeek(_firstDayOfWeek) {\n        _firstDayOfWeek = toInteger(_firstDayOfWeek);\n\n        if (isInteger(_firstDayOfWeek) && _firstDayOfWeek >= 0 && _this7._state.firstDayOfWeek !== _firstDayOfWeek) {\n          return {\n            firstDayOfWeek: _firstDayOfWeek\n          };\n        }\n      },\n      focusVisible: function focusVisible(_focusVisible) {\n        if (_this7._state.focusVisible !== _focusVisible && !_this7._state.disabled) {\n          return {\n            focusVisible: _focusVisible\n          };\n        }\n      },\n      markDisabled: function markDisabled(_markDisabled) {\n        if (_this7._state.markDisabled !== _markDisabled) {\n          return {\n            markDisabled: _markDisabled\n          };\n        }\n      },\n      maxDate: function maxDate(date) {\n        var maxDate = _this7.toValidDate(date, null);\n\n        if (isChangedDate(_this7._state.maxDate, maxDate)) {\n          return {\n            maxDate: maxDate\n          };\n        }\n      },\n      minDate: function minDate(date) {\n        var minDate = _this7.toValidDate(date, null);\n\n        if (isChangedDate(_this7._state.minDate, minDate)) {\n          return {\n            minDate: minDate\n          };\n        }\n      },\n      navigation: function navigation(_navigation) {\n        if (_this7._state.navigation !== _navigation) {\n          return {\n            navigation: _navigation\n          };\n        }\n      },\n      outsideDays: function outsideDays(_outsideDays) {\n        if (_this7._state.outsideDays !== _outsideDays) {\n          return {\n            outsideDays: _outsideDays\n          };\n        }\n      }\n    };\n    this._model$ = new Subject();\n    this._dateSelect$ = new Subject();\n    this._state = {\n      disabled: false,\n      displayMonths: 1,\n      firstDayOfWeek: 1,\n      focusVisible: false,\n      months: [],\n      navigation: 'select',\n      outsideDays: 'visible',\n      prevDisabled: false,\n      nextDisabled: false,\n      selectBoxes: {\n        years: [],\n        months: []\n      },\n      selectedDate: null\n    };\n  }\n\n  _createClass(NgbDatepickerService, [{\n    key: \"set\",\n    value: function set(options) {\n      var _this8 = this;\n\n      var patch = Object.keys(options).map(function (key) {\n        return _this8._VALIDATORS[key](options[key]);\n      }).reduce(function (obj, part) {\n        return Object.assign(Object.assign({}, obj), part);\n      }, {});\n\n      if (Object.keys(patch).length > 0) {\n        this._nextState(patch);\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(date) {\n      if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n        this._nextState({\n          focusDate: date\n        });\n      }\n    }\n  }, {\n    key: \"focusSelect\",\n    value: function focusSelect() {\n      if (isDateSelectable(this._state.focusDate, this._state)) {\n        this.select(this._state.focusDate, {\n          emitEvent: true\n        });\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open(date) {\n      var firstDate = this.toValidDate(date, this._calendar.getToday());\n\n      if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n        this._nextState({\n          firstDate: firstDate\n        });\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(date) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var selectedDate = this.toValidDate(date, null);\n\n      if (!this._state.disabled) {\n        if (isChangedDate(this._state.selectedDate, selectedDate)) {\n          this._nextState({\n            selectedDate: selectedDate\n          });\n        }\n\n        if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n          this._dateSelect$.next(selectedDate);\n        }\n      }\n    }\n  }, {\n    key: \"toValidDate\",\n    value: function toValidDate(date, defaultValue) {\n      var ngbDate = NgbDate.from(date);\n\n      if (defaultValue === undefined) {\n        defaultValue = this._calendar.getToday();\n      }\n\n      return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(struct) {\n      var _iterator = _createForOfIteratorHelper(this._state.months),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var month = _step.value;\n\n          if (struct.month === month.number && struct.year === month.year) {\n            return month;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      throw new Error(\"month \".concat(struct.month, \" of year \").concat(struct.year, \" not found\"));\n    }\n  }, {\n    key: \"_nextState\",\n    value: function _nextState(patch) {\n      var newState = this._updateState(patch);\n\n      this._patchContexts(newState);\n\n      this._state = newState;\n\n      this._model$.next(this._state);\n    }\n  }, {\n    key: \"_patchContexts\",\n    value: function _patchContexts(state) {\n      var months = state.months,\n          displayMonths = state.displayMonths,\n          selectedDate = state.selectedDate,\n          focusDate = state.focusDate,\n          focusVisible = state.focusVisible,\n          disabled = state.disabled,\n          outsideDays = state.outsideDays;\n      state.months.forEach(function (month) {\n        month.weeks.forEach(function (week) {\n          week.days.forEach(function (day) {\n            // patch focus flag\n            if (focusDate) {\n              day.context.focused = focusDate.equals(day.date) && focusVisible;\n            } // calculating tabindex\n\n\n            day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1; // override context disabled\n\n            if (disabled === true) {\n              day.context.disabled = true;\n            } // patch selection flag\n\n\n            if (selectedDate !== undefined) {\n              day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n            } // visibility\n\n\n            if (month.number !== day.date.month) {\n              day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' || displayMonths > 1 && day.date.after(months[0].firstDate) && day.date.before(months[displayMonths - 1].lastDate);\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState(patch) {\n      // patching fields\n      var state = Object.assign({}, this._state, patch);\n      var startDate = state.firstDate; // min/max dates changed\n\n      if ('minDate' in patch || 'maxDate' in patch) {\n        checkMinBeforeMax(state.minDate, state.maxDate);\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.focusDate;\n      } // disabled\n\n\n      if ('disabled' in patch) {\n        state.focusVisible = false;\n      } // initial rebuild via 'select()'\n\n\n      if ('selectedDate' in patch && this._state.months.length === 0) {\n        startDate = state.selectedDate;\n      } // terminate early if only focus visibility was changed\n\n\n      if ('focusVisible' in patch) {\n        return state;\n      } // focus date changed\n\n\n      if ('focusDate' in patch) {\n        state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n        startDate = state.focusDate; // nothing to rebuild if only focus changed and it is still visible\n\n        if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) && !state.focusDate.after(state.lastDate)) {\n          return state;\n        }\n      } // first date changed\n\n\n      if ('firstDate' in patch) {\n        state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n        startDate = state.firstDate;\n      } // rebuilding months\n\n\n      if (startDate) {\n        var forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n        var months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild); // updating months and boundary dates\n\n        state.months = months;\n        state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n        state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined; // reset selected date if 'markDisabled' returns true\n\n        if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n          state.selectedDate = null;\n        } // adjusting focus after months were built\n\n\n        if ('firstDate' in patch) {\n          if (state.focusDate === undefined || state.focusDate.before(state.firstDate) || state.focusDate.after(state.lastDate)) {\n            state.focusDate = startDate;\n          }\n        } // adjusting months/years for the select box navigation\n\n\n        var yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n        var monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n\n        if (state.navigation === 'select') {\n          // years ->  boundaries (min/max were changed)\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n            state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n          } // months -> when current year or boundaries change\n\n\n          if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n            state.selectBoxes.months = generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n          }\n        } else {\n          state.selectBoxes = {\n            years: [],\n            months: []\n          };\n        } // updating navigation arrows -> boundaries change (min/max) or month/year changes\n\n\n        if ((state.navigation === 'arrows' || state.navigation === 'select') && (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n          state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n          state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n        }\n      }\n\n      return state;\n    }\n  }, {\n    key: \"model$\",\n    get: function get() {\n      return this._model$.pipe(filter(function (model) {\n        return model.months.length > 0;\n      }));\n    }\n  }, {\n    key: \"dateSelect$\",\n    get: function get() {\n      return this._dateSelect$.pipe(filter(function (date) {\n        return date !== null;\n      }));\n    }\n  }]);\n\n  return NgbDatepickerService;\n}();\n\nNgbDatepickerService.ɵfac = function NgbDatepickerService_Factory(t) {\n  return new (t || NgbDatepickerService)(ɵngcc0.ɵɵinject(NgbCalendar), ɵngcc0.ɵɵinject(NgbDatepickerI18n));\n};\n\nNgbDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerService,\n  factory: function factory(t) {\n    return NgbDatepickerService.ɵfac(t);\n  }\n});\n\nNgbDatepickerService.ctorParameters = function () {\n  return [{\n    type: NgbCalendar\n  }, {\n    type: NgbDatepickerI18n\n  }];\n}; // clang-format on\n\n\nvar NavigationEvent;\n\n(function (NavigationEvent) {\n  NavigationEvent[NavigationEvent[\"PREV\"] = 0] = \"PREV\";\n  NavigationEvent[NavigationEvent[\"NEXT\"] = 1] = \"NEXT\";\n})(NavigationEvent || (NavigationEvent = {}));\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n\n\nvar NgbDatepickerConfig = function NgbDatepickerConfig() {\n  _classCallCheck(this, NgbDatepickerConfig);\n\n  this.displayMonths = 1;\n  this.firstDayOfWeek = 1;\n  this.navigation = 'select';\n  this.outsideDays = 'visible';\n  this.showWeekdays = true;\n  this.showWeekNumbers = false;\n};\n\nNgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) {\n  return new (t || NgbDatepickerConfig)();\n};\n\nNgbDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerConfig_Factory() {\n    return new NgbDatepickerConfig();\n  },\n  token: NgbDatepickerConfig,\n  providedIn: \"root\"\n});\n\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n\n\nvar NgbDateAdapter = function NgbDateAdapter() {\n  _classCallCheck(this, NgbDateAdapter);\n};\n\nNgbDateAdapter.ɵfac = function NgbDateAdapter_Factory(t) {\n  return new (t || NgbDateAdapter)();\n};\n\nNgbDateAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY,\n  token: NgbDateAdapter,\n  providedIn: \"root\"\n});\n\nvar NgbDateStructAdapter = /*#__PURE__*/function (_NgbDateAdapter) {\n  _inherits(NgbDateStructAdapter, _NgbDateAdapter);\n\n  var _super3 = _createSuper(NgbDateStructAdapter);\n\n  function NgbDateStructAdapter() {\n    _classCallCheck(this, NgbDateStructAdapter);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(NgbDateStructAdapter, [{\n    key: \"fromModel\",\n\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n    value: function fromModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? {\n        year: date.year,\n        month: date.month,\n        day: date.day\n      } : null;\n    }\n  }]);\n\n  return NgbDateStructAdapter;\n}(NgbDateAdapter);\n\nNgbDateStructAdapter.ɵfac = function NgbDateStructAdapter_Factory(t) {\n  return ɵNgbDateStructAdapter_BaseFactory(t || NgbDateStructAdapter);\n};\n\nNgbDateStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateStructAdapter,\n  factory: function factory(t) {\n    return NgbDateStructAdapter.ɵfac(t);\n  }\n});\nvar NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbDatepicker;\n  }),\n  multi: true\n};\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n\nvar NgbDatepickerContent = function NgbDatepickerContent(templateRef) {\n  _classCallCheck(this, NgbDatepickerContent);\n\n  this.templateRef = templateRef;\n};\n\nNgbDatepickerContent.ɵfac = function NgbDatepickerContent_Factory(t) {\n  return new (t || NgbDatepickerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbDatepickerContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDatepickerContent,\n  selectors: [[\"ng-template\", \"ngbDatepickerContent\", \"\"]]\n});\n\nNgbDatepickerContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n\n\nvar NgbDatepicker = /*#__PURE__*/function () {\n  function NgbDatepicker(_service, _calendar, i18n, config, cd, _elementRef, _ngbDateAdapter, _ngZone) {\n    var _this9 = this;\n\n    _classCallCheck(this, NgbDatepicker);\n\n    this._service = _service;\n    this._calendar = _calendar;\n    this.i18n = i18n;\n    this._elementRef = _elementRef;\n    this._ngbDateAdapter = _ngbDateAdapter;\n    this._ngZone = _ngZone;\n    this._destroyed$ = new Subject();\n    this._publicState = {};\n    /**\n     * An event emitted right before the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 5.2.0\n     */\n\n    this.dateSelect = new EventEmitter();\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @deprecated 6.0.0 Please use 'dateSelect' output instead due to collision with native\n     * 'select' event.\n     */\n\n    this.select = this.dateSelect;\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate'].forEach(function (input) {\n      return _this9[input] = config[input];\n    });\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(function (date) {\n      _this9.dateSelect.emit(date);\n    });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(function (model) {\n      var newDate = model.firstDate;\n      var oldDate = _this9.model ? _this9.model.firstDate : null; // update public state\n\n      _this9._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(function (viewModel) {\n          return viewModel.firstDate;\n        })\n      };\n      var navigationPrevented = false; // emitting navigation event if the first month changes\n\n      if (!newDate.equals(oldDate)) {\n        _this9.navigate.emit({\n          current: oldDate ? {\n            year: oldDate.year,\n            month: oldDate.month\n          } : null,\n          next: {\n            year: newDate.year,\n            month: newDate.month\n          },\n          preventDefault: function preventDefault() {\n            return navigationPrevented = true;\n          }\n        }); // can't prevent the very first navigation\n\n\n        if (navigationPrevented && oldDate !== null) {\n          _this9._service.open(oldDate);\n\n          return;\n        }\n      }\n\n      var newSelectedDate = model.selectedDate;\n      var newFocusedDate = model.focusDate;\n      var oldFocusedDate = _this9.model ? _this9.model.focusDate : null;\n      _this9.model = model; // handling selection change\n\n      if (isChangedDate(newSelectedDate, _this9._controlValue)) {\n        _this9._controlValue = newSelectedDate;\n\n        _this9.onTouched();\n\n        _this9.onChange(_this9._ngbDateAdapter.toModel(newSelectedDate));\n      } // handling focus change\n\n\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        _this9.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n\n\n  _createClass(NgbDatepicker, [{\n    key: \"focusDate\",\n\n    /**\n     *  Focuses on given date.\n     */\n    value: function focusDate(date) {\n      this._service.focus(NgbDate.from(date));\n    }\n    /**\n     *  Selects focused date.\n     */\n\n  }, {\n    key: \"focusSelect\",\n    value: function focusSelect() {\n      this._service.focusSelect();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var _this10 = this;\n\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n        var elementToFocus = _this10._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n\n        if (elementToFocus) {\n          elementToFocus.focus();\n        }\n      });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(date) {\n      this._service.open(NgbDate.from(date ? date.day ? date : Object.assign(Object.assign({}, date), {\n        day: 1\n      }) : null));\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this11 = this;\n\n      this._ngZone.runOutsideAngular(function () {\n        var focusIns$ = fromEvent(_this11._contentEl.nativeElement, 'focusin');\n        var focusOuts$ = fromEvent(_this11._contentEl.nativeElement, 'focusout');\n        var nativeElement = _this11._elementRef.nativeElement; // we're changing 'focusVisible' only when entering or leaving months view\n        // and ignoring all focus events where both 'target' and 'related' target are day cells\n\n        merge(focusIns$, focusOuts$).pipe(filter(function (_ref5) {\n          var target = _ref5.target,\n              relatedTarget = _ref5.relatedTarget;\n          return !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') && nativeElement.contains(target) && nativeElement.contains(relatedTarget));\n        }), takeUntil(_this11._destroyed$)).subscribe(function (_ref6) {\n          var type = _ref6.type;\n          return _this11._ngZone.run(function () {\n            return _this11._service.set({\n              focusVisible: type === 'focusin'\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed$.next();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this12 = this;\n\n      if (this.model === undefined) {\n        var inputs = {};\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].forEach(function (name) {\n          return inputs[name] = _this12[name];\n        });\n\n        this._service.set(inputs);\n\n        this.navigateTo(this.startDate);\n      }\n\n      if (!this.dayTemplate) {\n        this.dayTemplate = this._defaultDayTemplate;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this13 = this;\n\n      var inputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate', 'outsideDays'].filter(function (name) {\n        return name in changes;\n      }).forEach(function (name) {\n        return inputs[name] = _this13[name];\n      });\n\n      this._service.set(inputs);\n\n      if ('startDate' in changes) {\n        var _changes$startDate = changes.startDate,\n            currentValue = _changes$startDate.currentValue,\n            previousValue = _changes$startDate.previousValue;\n\n        if (isChangedMonth(previousValue, currentValue)) {\n          this.navigateTo(this.startDate);\n        }\n      }\n    }\n  }, {\n    key: \"onDateSelect\",\n    value: function onDateSelect(date) {\n      this._service.focus(date);\n\n      this._service.select(date, {\n        emitEvent: true\n      });\n    }\n  }, {\n    key: \"onNavigateDateSelect\",\n    value: function onNavigateDateSelect(date) {\n      this._service.open(date);\n    }\n  }, {\n    key: \"onNavigateEvent\",\n    value: function onNavigateEvent(event) {\n      switch (event) {\n        case NavigationEvent.PREV:\n          this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n\n          break;\n\n        case NavigationEvent.NEXT:\n          this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n\n          break;\n      }\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this._service.set({\n        disabled: disabled\n      });\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n\n      this._service.select(this._controlValue);\n    }\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this._publicState;\n    }\n    /**\n     *  Returns the calendar service used in the specific datepicker instance.\n     *\n     *  @since 5.3.0\n     */\n\n  }, {\n    key: \"calendar\",\n    get: function get() {\n      return this._calendar;\n    }\n  }]);\n\n  return NgbDatepicker;\n}();\n\nNgbDatepicker.ɵfac = function NgbDatepicker_Factory(t) {\n  return new (t || NgbDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepicker,\n  selectors: [[\"ngb-datepicker\"]],\n  contentQueries: function NgbDatepicker_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, NgbDatepickerContent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  viewQuery: function NgbDatepicker_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c10, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c11, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._defaultDayTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentEl = _t.first);\n    }\n  },\n  inputs: {\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    maxDate: \"maxDate\",\n    minDate: \"minDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    showWeekdays: \"showWeekdays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    dateSelect: \"dateSelect\",\n    select: \"select\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 5,\n  consts: [[\"defaultDayTemplate\", \"\"], [\"defaultContentTemplate\", \"\"], [1, \"ngb-dp-header\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-content\"], [\"content\", \"\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [\"class\", \"ngb-dp-month\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name\", 4, \"ngIf\"], [3, \"month\"], [1, \"ngb-dp-month-name\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"]],\n  template: function NgbDatepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbDatepicker_ng_template_2_Template, 1, 1, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(5, NgbDatepicker_ngb_datepicker_navigation_5_Template, 1, 7, \"ngb-datepicker-navigation\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 4, 5);\n      ɵngcc0.ɵɵtemplate(8, NgbDatepicker_ng_template_8_Template, 0, 0, \"ng-template\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, NgbDatepicker_ng_template_9_Template, 0, 0, \"ng-template\", 6);\n    }\n\n    if (rf & 2) {\n      var _r2 = ɵngcc0.ɵɵreference(3);\n\n      ɵngcc0.ɵɵadvance(5);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigation !== \"none\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"ngb-dp-months\", !ctx.contentTemplate);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx.contentTemplate == null ? null : ctx.contentTemplate.templateRef) || _r2);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, NgbDatepickerDayView, ɵngcc1.NgForOf, NgbDatepickerMonth, NgbDatepickerNavigation];\n  },\n  styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepicker.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerService\n  }, {\n    type: NgbCalendar\n  }, {\n    type: NgbDatepickerI18n\n  }, {\n    type: NgbDatepickerConfig\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: NgbDateAdapter\n  }, {\n    type: NgZone\n  }];\n};\n\n__decorate([ViewChild('defaultDayTemplate', {\n  static: true\n})], NgbDatepicker.prototype, \"_defaultDayTemplate\", void 0);\n\n__decorate([ViewChild('content', {\n  static: true\n})], NgbDatepicker.prototype, \"_contentEl\", void 0);\n\n__decorate([ContentChild(NgbDatepickerContent, {\n  static: true\n})], NgbDatepicker.prototype, \"contentTemplate\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"dayTemplate\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"dayTemplateData\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"displayMonths\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"firstDayOfWeek\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"footerTemplate\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"markDisabled\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"maxDate\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"minDate\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"navigation\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"outsideDays\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"showWeekdays\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"showWeekNumbers\", void 0);\n\n__decorate([Input()], NgbDatepicker.prototype, \"startDate\", void 0);\n\n__decorate([Output()], NgbDatepicker.prototype, \"navigate\", void 0);\n\n__decorate([Output()], NgbDatepicker.prototype, \"dateSelect\", void 0);\n\n__decorate([Output()], NgbDatepicker.prototype, \"select\", void 0);\n\nvar Key;\n\n(function (Key) {\n  Key[Key[\"Tab\"] = 9] = \"Tab\";\n  Key[Key[\"Enter\"] = 13] = \"Enter\";\n  Key[Key[\"Escape\"] = 27] = \"Escape\";\n  Key[Key[\"Space\"] = 32] = \"Space\";\n  Key[Key[\"PageUp\"] = 33] = \"PageUp\";\n  Key[Key[\"PageDown\"] = 34] = \"PageDown\";\n  Key[Key[\"End\"] = 35] = \"End\";\n  Key[Key[\"Home\"] = 36] = \"Home\";\n  Key[Key[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Key[Key[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  Key[Key[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Key[Key[\"ArrowDown\"] = 40] = \"ArrowDown\";\n})(Key || (Key = {}));\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n\n\nvar NgbDatepickerKeyboardService = /*#__PURE__*/function () {\n  function NgbDatepickerKeyboardService() {\n    _classCallCheck(this, NgbDatepickerKeyboardService);\n  }\n\n  _createClass(NgbDatepickerKeyboardService, [{\n    key: \"processKey\",\n\n    /**\n     * Processes a keyboard event.\n     */\n    value: function processKey(event, datepicker) {\n      var state = datepicker.state,\n          calendar = datepicker.calendar; // tslint:disable-next-line:deprecation\n\n      switch (event.which) {\n        case Key.PageUp:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n\n        case Key.PageDown:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n          break;\n\n        case Key.End:\n          datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n          break;\n\n        case Key.Home:\n          datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n          break;\n\n        case Key.ArrowLeft:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n          break;\n\n        case Key.ArrowUp:\n          datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n\n        case Key.ArrowRight:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n          break;\n\n        case Key.ArrowDown:\n          datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n          break;\n\n        case Key.Enter:\n        case Key.Space:\n          datepicker.focusSelect();\n          break;\n\n        default:\n          return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }]);\n\n  return NgbDatepickerKeyboardService;\n}();\n\nNgbDatepickerKeyboardService.ɵfac = function NgbDatepickerKeyboardService_Factory(t) {\n  return new (t || NgbDatepickerKeyboardService)();\n};\n\nNgbDatepickerKeyboardService.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDatepickerKeyboardService_Factory() {\n    return new NgbDatepickerKeyboardService();\n  },\n  token: NgbDatepickerKeyboardService,\n  providedIn: \"root\"\n});\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n\nvar NgbDatepickerMonth = /*#__PURE__*/function () {\n  function NgbDatepickerMonth(i18n, datepicker, _keyboardService, _service) {\n    _classCallCheck(this, NgbDatepickerMonth);\n\n    this.i18n = i18n;\n    this.datepicker = datepicker;\n    this._keyboardService = _keyboardService;\n    this._service = _service;\n  }\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n\n\n  _createClass(NgbDatepickerMonth, [{\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      this._keyboardService.processKey(event, this.datepicker);\n    }\n  }, {\n    key: \"doSelect\",\n    value: function doSelect(day) {\n      if (!day.context.disabled && !day.hidden) {\n        this.datepicker.onDateSelect(day.date);\n      }\n    }\n  }, {\n    key: \"month\",\n    set: function set(month) {\n      this.viewModel = this._service.getMonth(month);\n    }\n  }]);\n\n  return NgbDatepickerMonth;\n}();\n\nNgbDatepickerMonth.ɵfac = function NgbDatepickerMonth_Factory(t) {\n  return new (t || NgbDatepickerMonth)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepicker), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerKeyboardService), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService));\n};\n\nNgbDatepickerMonth.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerMonth,\n  selectors: [[\"ngb-datepicker-month\"]],\n  hostAttrs: [\"role\", \"grid\"],\n  hostBindings: function NgbDatepickerMonth_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function NgbDatepickerMonth_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    month: \"month\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays\", \"role\", \"row\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"row\", 1, \"ngb-dp-week\", \"ngb-dp-weekdays\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", \"role\", \"columnheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\"], [\"role\", \"columnheader\", 1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbDatepickerMonth_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonth_div_0_Template, 3, 2, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonth_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.datepicker.showWeekdays);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.viewModel.weeks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"],\n  encapsulation: 2\n});\n\nNgbDatepickerMonth.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }, {\n    type: NgbDatepicker\n  }, {\n    type: NgbDatepickerKeyboardService\n  }, {\n    type: NgbDatepickerService\n  }];\n};\n\n__decorate([Input()], NgbDatepickerMonth.prototype, \"month\", null);\n\nvar NgbDatepickerNavigation = /*#__PURE__*/function () {\n  function NgbDatepickerNavigation(i18n) {\n    _classCallCheck(this, NgbDatepickerNavigation);\n\n    this.i18n = i18n;\n    this.navigation = NavigationEvent;\n    this.months = [];\n    this.navigate = new EventEmitter();\n    this.select = new EventEmitter();\n  }\n\n  _createClass(NgbDatepickerNavigation, [{\n    key: \"onClickPrev\",\n    value: function onClickPrev(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.PREV);\n    }\n  }, {\n    key: \"onClickNext\",\n    value: function onClickNext(event) {\n      event.currentTarget.focus();\n      this.navigate.emit(this.navigation.NEXT);\n    }\n  }]);\n\n  return NgbDatepickerNavigation;\n}();\n\nNgbDatepickerNavigation.ɵfac = function NgbDatepickerNavigation_Factory(t) {\n  return new (t || NgbDatepickerNavigation)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerNavigation.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigation,\n  selectors: [[\"ngb-datepicker-navigation\"]],\n  inputs: {\n    months: \"months\",\n    date: \"date\",\n    disabled: \"disabled\",\n    showSelect: \"showSelect\",\n    prevDisabled: \"prevDisabled\",\n    nextDisabled: \"nextDisabled\",\n    selectBoxes: \"selectBoxes\"\n  },\n  outputs: {\n    navigate: \"navigate\",\n    select: \"select\"\n  },\n  decls: 8,\n  vars: 4,\n  consts: function consts() {\n    var i18n_12;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13 = goog.getMsg(\"Previous month\");\n      i18n_12 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_13;\n    } else {\n      i18n_12 = $localize(_templateObject5());\n    }\n\n    var i18n_14;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15 = goog.getMsg(\"Previous month\");\n      i18n_14 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_15;\n    } else {\n      i18n_14 = $localize(_templateObject6());\n    }\n\n    var i18n_16;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17 = goog.getMsg(\"Next month\");\n      i18n_16 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_17;\n    } else {\n      i18n_16 = $localize(_templateObject7());\n    }\n\n    var i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19 = goog.getMsg(\"Next month\");\n      i18n_18 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_19;\n    } else {\n      i18n_18 = $localize(_templateObject8());\n    }\n\n    return [[1, \"ngb-dp-arrow\"], [\"type\", \"button\", \"aria-label\", i18n_12, \"title\", i18n_14, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"right\"], [\"type\", \"button\", \"aria-label\", i18n_16, \"title\", i18n_18, 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\"], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"]];\n  },\n  template: function NgbDatepickerNavigation_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener($event) {\n        return ctx.onClickPrev($event);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_ngb_datepicker_navigation_select_3_Template, 1, 4, \"ngb-datepicker-navigation-select\", 3);\n      ɵngcc0.ɵɵtemplate(4, NgbDatepickerNavigation_4_Template, 1, 1, undefined, 4);\n      ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n      ɵngcc0.ɵɵelementStart(6, \"button\", 6);\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_6_listener($event) {\n        return ctx.onClickNext($event);\n      });\n      ɵngcc0.ɵɵelement(7, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSelect);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.showSelect);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, NgbDatepickerNavigationSelect, ɵngcc1.NgForOf];\n  },\n  styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerNavigation.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }];\n};\n\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"date\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"months\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"showSelect\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"prevDisabled\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"nextDisabled\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigation.prototype, \"selectBoxes\", void 0);\n\n__decorate([Output()], NgbDatepickerNavigation.prototype, \"navigate\", void 0);\n\n__decorate([Output()], NgbDatepickerNavigation.prototype, \"select\", void 0);\n\nvar isContainedIn = function isContainedIn(element, array) {\n  return array ? array.some(function (item) {\n    return item.contains(element);\n  }) : false;\n};\n\nvar ɵ0 = isContainedIn;\n\nvar matchesSelectorIfAny = function matchesSelectorIfAny(element, selector) {\n  return !selector || closest(element, selector) != null;\n};\n\nvar ɵ1 = matchesSelectorIfAny;\n\nvar ɵ2 = function ɵ2() {\n  var isIOS = function isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) || /Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n  };\n\n  var isAndroid = function isAndroid() {\n    return /Android/.test(navigator.userAgent);\n  };\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n}; // we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\n\n\nvar isMobile = ɵ2(); // setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\n\nvar wrapAsyncForMobile = function wrapAsyncForMobile(fn) {\n  return isMobile ? function () {\n    return setTimeout(function () {\n      return fn();\n    }, 100);\n  } : fn;\n};\n\nvar ɵ3 = wrapAsyncForMobile;\n\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(function () {\n      var shouldCloseOnClick = function shouldCloseOnClick(event) {\n        var element = event.target;\n\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else\n          /* if (type === true) */\n          {\n            return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n          }\n      };\n\n      var escapes$ = fromEvent(document, 'keydown').pipe(takeUntil(closed$), // tslint:disable-next-line:deprecation\n      filter(function (e) {\n        return e.which === Key.Escape;\n      }), tap(function (e) {\n        return e.preventDefault();\n      })); // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n\n      var mouseDowns$ = fromEvent(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n      var closeableClicks$ = fromEvent(document, 'mouseup').pipe(withLatestFrom(mouseDowns$), filter(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            _ = _ref8[0],\n            shouldClose = _ref8[1];\n\n        return shouldClose;\n      }), delay(0), takeUntil(closed$));\n      race([escapes$, closeableClicks$]).subscribe(function () {\n        return zone.run(close);\n      });\n    }));\n  }\n}\n\nvar FOCUSABLE_ELEMENTS_SELECTOR = ['a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])', 'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\n\nfunction getFocusableBoundaryElements(element) {\n  var list = Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)).filter(function (el) {\n    return el.tabIndex !== -1;\n  });\n  return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\n\n\nvar ngbFocusTrap = function ngbFocusTrap(zone, element, stopFocusTrap$) {\n  var refocusOnClick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  zone.runOutsideAngular(function () {\n    // last focused element\n    var lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(function (e) {\n      return e.target;\n    })); // 'tab' / 'shift+tab' stream\n\n    fromEvent(element, 'keydown').pipe(takeUntil(stopFocusTrap$), // tslint:disable:deprecation\n    filter(function (e) {\n      return e.which === Key.Tab;\n    }), // tslint:enable:deprecation\n    withLatestFrom(lastFocusedElement$)).subscribe(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n          tabEvent = _ref10[0],\n          focusedElement = _ref10[1];\n\n      var _getFocusableBoundary = getFocusableBoundaryElements(element),\n          _getFocusableBoundary2 = _slicedToArray(_getFocusableBoundary, 2),\n          first = _getFocusableBoundary2[0],\n          last = _getFocusableBoundary2[1];\n\n      if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n        last.focus();\n        tabEvent.preventDefault();\n      }\n\n      if (focusedElement === last && !tabEvent.shiftKey) {\n        first.focus();\n        tabEvent.preventDefault();\n      }\n    }); // inside click\n\n    if (refocusOnClick) {\n      fromEvent(element, 'click').pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(function (arr) {\n        return arr[1];\n      })).subscribe(function (lastFocusedElement) {\n        return lastFocusedElement.focus();\n      });\n    }\n  });\n}; // previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\n\n\nvar Positioning = /*#__PURE__*/function () {\n  function Positioning() {\n    _classCallCheck(this, Positioning);\n  }\n\n  _createClass(Positioning, [{\n    key: \"getAllStyles\",\n    value: function getAllStyles(element) {\n      return window.getComputedStyle(element);\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(element, prop) {\n      return this.getAllStyles(element)[prop];\n    }\n  }, {\n    key: \"isStaticPositioned\",\n    value: function isStaticPositioned(element) {\n      return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n  }, {\n    key: \"offsetParent\",\n    value: function offsetParent(element) {\n      var offsetParentEl = element.offsetParent || document.documentElement;\n\n      while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n        offsetParentEl = offsetParentEl.offsetParent;\n      }\n\n      return offsetParentEl || document.documentElement;\n    }\n  }, {\n    key: \"position\",\n    value: function position(element) {\n      var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var elPosition;\n      var parentOffset = {\n        width: 0,\n        height: 0,\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n\n      if (this.getStyle(element, 'position') === 'fixed') {\n        elPosition = element.getBoundingClientRect();\n        elPosition = {\n          top: elPosition.top,\n          bottom: elPosition.bottom,\n          left: elPosition.left,\n          right: elPosition.right,\n          height: elPosition.height,\n          width: elPosition.width\n        };\n      } else {\n        var offsetParentEl = this.offsetParent(element);\n        elPosition = this.offset(element, false);\n\n        if (offsetParentEl !== document.documentElement) {\n          parentOffset = this.offset(offsetParentEl, false);\n        }\n\n        parentOffset.top += offsetParentEl.clientTop;\n        parentOffset.left += offsetParentEl.clientLeft;\n      }\n\n      elPosition.top -= parentOffset.top;\n      elPosition.bottom -= parentOffset.top;\n      elPosition.left -= parentOffset.left;\n      elPosition.right -= parentOffset.left;\n\n      if (round) {\n        elPosition.top = Math.round(elPosition.top);\n        elPosition.bottom = Math.round(elPosition.bottom);\n        elPosition.left = Math.round(elPosition.left);\n        elPosition.right = Math.round(elPosition.right);\n      }\n\n      return elPosition;\n    }\n  }, {\n    key: \"offset\",\n    value: function offset(element) {\n      var round = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var elBcr = element.getBoundingClientRect();\n      var viewportOffset = {\n        top: window.pageYOffset - document.documentElement.clientTop,\n        left: window.pageXOffset - document.documentElement.clientLeft\n      };\n      var elOffset = {\n        height: elBcr.height || element.offsetHeight,\n        width: elBcr.width || element.offsetWidth,\n        top: elBcr.top + viewportOffset.top,\n        bottom: elBcr.bottom + viewportOffset.top,\n        left: elBcr.left + viewportOffset.left,\n        right: elBcr.right + viewportOffset.left\n      };\n\n      if (round) {\n        elOffset.height = Math.round(elOffset.height);\n        elOffset.width = Math.round(elOffset.width);\n        elOffset.top = Math.round(elOffset.top);\n        elOffset.bottom = Math.round(elOffset.bottom);\n        elOffset.left = Math.round(elOffset.left);\n        elOffset.right = Math.round(elOffset.right);\n      }\n\n      return elOffset;\n    }\n    /*\n      Return false if the element to position is outside the viewport\n    */\n\n  }, {\n    key: \"positionElements\",\n    value: function positionElements(hostElement, targetElement, placement, appendToBody) {\n      var _placement$split = placement.split('-'),\n          _placement$split2 = _slicedToArray(_placement$split, 2),\n          _placement$split2$ = _placement$split2[0],\n          placementPrimary = _placement$split2$ === void 0 ? 'top' : _placement$split2$,\n          _placement$split2$2 = _placement$split2[1],\n          placementSecondary = _placement$split2$2 === void 0 ? 'center' : _placement$split2$2;\n\n      var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n      var targetElStyles = this.getAllStyles(targetElement);\n      var marginTop = parseFloat(targetElStyles.marginTop);\n      var marginBottom = parseFloat(targetElStyles.marginBottom);\n      var marginLeft = parseFloat(targetElStyles.marginLeft);\n      var marginRight = parseFloat(targetElStyles.marginRight);\n      var topPosition = 0;\n      var leftPosition = 0;\n\n      switch (placementPrimary) {\n        case 'top':\n          topPosition = hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom);\n          break;\n\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height;\n          break;\n\n        case 'left':\n          leftPosition = hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight);\n          break;\n\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width;\n          break;\n      }\n\n      switch (placementSecondary) {\n        case 'top':\n          topPosition = hostElPosition.top;\n          break;\n\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n          break;\n\n        case 'left':\n          leftPosition = hostElPosition.left;\n          break;\n\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n          break;\n\n        case 'center':\n          if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n            leftPosition = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n          } else {\n            topPosition = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n          }\n\n          break;\n      } /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n      // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n\n\n      targetElement.style.transform = \"translate(\".concat(Math.round(leftPosition), \"px, \").concat(Math.round(topPosition), \"px)\"); // Check if the targetElement is inside the viewport\n\n      var targetElBCR = targetElement.getBoundingClientRect();\n      var html = document.documentElement;\n      var windowHeight = window.innerHeight || html.clientHeight;\n      var windowWidth = window.innerWidth || html.clientWidth;\n      return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth && targetElBCR.bottom <= windowHeight;\n    }\n  }]);\n\n  return Positioning;\n}();\n\nvar placementSeparator = /\\s+/;\nvar positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\n\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n  var placementVals = Array.isArray(placement) ? placement : placement.split(placementSeparator);\n  var allowedPlacements = ['top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom', 'right-top', 'right-bottom'];\n  var classList = targetElement.classList;\n\n  var addClassesToTarget = function addClassesToTarget(targetPlacement) {\n    var _targetPlacement$spli = targetPlacement.split('-'),\n        _targetPlacement$spli2 = _slicedToArray(_targetPlacement$spli, 2),\n        primary = _targetPlacement$spli2[0],\n        secondary = _targetPlacement$spli2[1];\n\n    var classes = [];\n\n    if (baseClass) {\n      classes.push(\"\".concat(baseClass, \"-\").concat(primary));\n\n      if (secondary) {\n        classes.push(\"\".concat(baseClass, \"-\").concat(primary, \"-\").concat(secondary));\n      }\n\n      classes.forEach(function (classname) {\n        classList.add(classname);\n      });\n    }\n\n    return classes;\n  }; // Remove old placement classes to avoid issues\n\n\n  if (baseClass) {\n    allowedPlacements.forEach(function (placementToRemove) {\n      classList.remove(\"\".concat(baseClass, \"-\").concat(placementToRemove));\n    });\n  } // replace auto placement with other placements\n\n\n  var hasAuto = placementVals.findIndex(function (val) {\n    return val === 'auto';\n  });\n\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function (obj) {\n      if (placementVals.find(function (val) {\n        return val.search('^' + obj) !== -1;\n      }) == null) {\n        placementVals.splice(hasAuto++, 1, obj);\n      }\n    });\n  } // coordinates where to position\n  // Required for transform:\n\n\n  var style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n  var testPlacement;\n  var isInViewport = false;\n\n  var _iterator2 = _createForOfIteratorHelper(placementVals),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      testPlacement = _step2.value;\n      var addedClasses = addClassesToTarget(testPlacement);\n\n      if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n        isInViewport = true;\n        break;\n      } // Remove the baseClasses for further calculation\n\n\n      if (baseClass) {\n        addedClasses.forEach(function (classname) {\n          classList.remove(classname);\n        });\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n\n\nvar NgbDateParserFormatter = function NgbDateParserFormatter() {\n  _classCallCheck(this, NgbDateParserFormatter);\n};\n\nNgbDateParserFormatter.ɵfac = function NgbDateParserFormatter_Factory(t) {\n  return new (t || NgbDateParserFormatter)();\n};\n\nNgbDateParserFormatter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY,\n  token: NgbDateParserFormatter,\n  providedIn: \"root\"\n});\n\nvar NgbDateISOParserFormatter = /*#__PURE__*/function (_NgbDateParserFormatt) {\n  _inherits(NgbDateISOParserFormatter, _NgbDateParserFormatt);\n\n  var _super4 = _createSuper(NgbDateISOParserFormatter);\n\n  function NgbDateISOParserFormatter() {\n    _classCallCheck(this, NgbDateISOParserFormatter);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(NgbDateISOParserFormatter, [{\n    key: \"parse\",\n    value: function parse(value) {\n      if (value) {\n        var dateParts = value.trim().split('-');\n\n        if (dateParts.length === 1 && isNumber(dateParts[0])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: null,\n            day: null\n          };\n        } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: null\n          };\n        } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n          return {\n            year: toInteger(dateParts[0]),\n            month: toInteger(dateParts[1]),\n            day: toInteger(dateParts[2])\n          };\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date) {\n      return date ? \"\".concat(date.year, \"-\").concat(isNumber(date.month) ? padNumber(date.month) : '', \"-\").concat(isNumber(date.day) ? padNumber(date.day) : '') : '';\n    }\n  }]);\n\n  return NgbDateISOParserFormatter;\n}(NgbDateParserFormatter);\n\nNgbDateISOParserFormatter.ɵfac = function NgbDateISOParserFormatter_Factory(t) {\n  return ɵNgbDateISOParserFormatter_BaseFactory(t || NgbDateISOParserFormatter);\n};\n\nNgbDateISOParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateISOParserFormatter,\n  factory: function factory(t) {\n    return NgbDateISOParserFormatter.ɵfac(t);\n  }\n});\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n\nvar NgbInputDatepickerConfig = /*#__PURE__*/function (_NgbDatepickerConfig) {\n  _inherits(NgbInputDatepickerConfig, _NgbDatepickerConfig);\n\n  var _super5 = _createSuper(NgbInputDatepickerConfig);\n\n  function NgbInputDatepickerConfig() {\n    var _this14;\n\n    _classCallCheck(this, NgbInputDatepickerConfig);\n\n    _this14 = _super5.apply(this, arguments);\n    _this14.autoClose = true;\n    _this14.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    _this14.restoreFocus = true;\n    return _this14;\n  }\n\n  return NgbInputDatepickerConfig;\n}(NgbDatepickerConfig);\n\nNgbInputDatepickerConfig.ɵfac = function NgbInputDatepickerConfig_Factory(t) {\n  return ɵNgbInputDatepickerConfig_BaseFactory(t || NgbInputDatepickerConfig);\n};\n\nNgbInputDatepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbInputDatepickerConfig_Factory() {\n    return new NgbInputDatepickerConfig();\n  },\n  token: NgbInputDatepickerConfig,\n  providedIn: \"root\"\n});\nvar NGB_DATEPICKER_VALUE_ACCESSOR$1 = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbInputDatepicker;\n  }),\n  multi: true\n};\nvar NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(function () {\n    return NgbInputDatepicker;\n  }),\n  multi: true\n};\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n\nvar NgbInputDatepicker = /*#__PURE__*/function () {\n  function NgbInputDatepicker(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _calendar, _dateAdapter, _document, _changeDetector, config) {\n    var _this15 = this;\n\n    _classCallCheck(this, NgbInputDatepicker);\n\n    this._parserFormatter = _parserFormatter;\n    this._elRef = _elRef;\n    this._vcRef = _vcRef;\n    this._renderer = _renderer;\n    this._cfr = _cfr;\n    this._ngZone = _ngZone;\n    this._calendar = _calendar;\n    this._dateAdapter = _dateAdapter;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    this._cRef = null;\n    this._disabled = false;\n    this._elWithFocus = null;\n    /**\n     * An event emitted when user selects a date using keyboard or mouse.\n     *\n     * The payload of the event is currently selected `NgbDate`.\n     *\n     * @since 1.1.1\n     */\n\n    this.dateSelect = new EventEmitter();\n    /**\n     * Event emitted right after the navigation happens and displayed month changes.\n     *\n     * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n     */\n\n    this.navigate = new EventEmitter();\n    /**\n     * An event fired after closing datepicker window.\n     *\n     * @since 4.2.0\n     */\n\n    this.closed = new EventEmitter();\n\n    this._onChange = function (_) {};\n\n    this._onTouched = function () {};\n\n    this._validatorChange = function () {};\n\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(function (input) {\n      return _this15[input] = config[input];\n    });\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      return _this15._updatePopupPosition();\n    });\n  }\n\n  _createClass(NgbInputDatepicker, [{\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this._validatorChange = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(c) {\n      var value = c.value;\n\n      if (value === null || value === undefined) {\n        return null;\n      }\n\n      var ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n      if (!this._calendar.isValid(ngbDate)) {\n        return {\n          'ngbDate': {\n            invalid: value\n          }\n        };\n      }\n\n      if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n        return {\n          'ngbDate': {\n            minDate: {\n              minDate: this.minDate,\n              actual: value\n            }\n          }\n        };\n      }\n\n      if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n        return {\n          'ngbDate': {\n            maxDate: {\n              maxDate: this.maxDate,\n              actual: value\n            }\n          }\n        };\n      }\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n      this._writeModelValue(this._model);\n    }\n  }, {\n    key: \"manualDateChange\",\n    value: function manualDateChange(value) {\n      var updateView = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var inputValueChanged = value !== this._inputValue;\n\n      if (inputValueChanged) {\n        this._inputValue = value;\n        this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n      }\n\n      if (inputValueChanged || !updateView) {\n        this._onChange(this._model ? this._dateAdapter.toModel(this._model) : value === '' ? null : value);\n      }\n\n      if (updateView && this._model) {\n        this._writeModelValue(this._model);\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return !!this._cRef;\n    }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this16 = this;\n\n      if (!this.isOpen()) {\n        var cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n\n        this._cRef = this._vcRef.createComponent(cf);\n\n        this._applyPopupStyling(this._cRef.location.nativeElement);\n\n        this._applyDatepickerInputs(this._cRef.instance);\n\n        this._subscribeForDatepickerOutputs(this._cRef.instance);\n\n        this._cRef.instance.ngOnInit();\n\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model)); // date selection event handling\n\n\n        this._cRef.instance.registerOnChange(function (selectedDate) {\n          _this16.writeValue(selectedDate);\n\n          _this16._onChange(selectedDate);\n\n          _this16._onTouched();\n        });\n\n        this._cRef.changeDetectorRef.detectChanges();\n\n        this._cRef.instance.setDisabledState(this.disabled);\n\n        if (this.container === 'body') {\n          window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n        } // focus handling\n\n\n        this._elWithFocus = this._document.activeElement;\n        ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n\n        this._cRef.instance.focus();\n\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this16.close();\n        }, this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n      }\n    }\n    /**\n     * Closes the datepicker popup.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.isOpen()) {\n        this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n\n        this._cRef = null;\n        this.closed.emit();\n\n        this._changeDetector.markForCheck(); // restore focus\n\n\n        var elementToFocus = this._elWithFocus;\n\n        if (isString(this.restoreFocus)) {\n          elementToFocus = this._document.querySelector(this.restoreFocus);\n        } else if (this.restoreFocus !== undefined) {\n          elementToFocus = this.restoreFocus;\n        } // in IE document.activeElement can contain an object without 'focus()' sometimes\n\n\n        if (elementToFocus && elementToFocus['focus']) {\n          elementToFocus.focus();\n        } else {\n          this._document.body.focus();\n        }\n      }\n    }\n    /**\n     * Toggles the datepicker popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     */\n\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(date) {\n      if (this.isOpen()) {\n        this._cRef.instance.navigateTo(date);\n      }\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this._onTouched();\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this._elWithFocus = this._elRef.nativeElement;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['minDate'] || changes['maxDate']) {\n        this._validatorChange();\n\n        if (this.isOpen()) {\n          if (changes['minDate']) {\n            this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n          }\n\n          if (changes['maxDate']) {\n            this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n          }\n\n          this._cRef.instance.ngOnChanges(changes);\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"_applyDatepickerInputs\",\n    value: function _applyDatepickerInputs(datepickerInstance) {\n      var _this17 = this;\n\n      ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate', 'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers'].forEach(function (optionName) {\n        if (_this17[optionName] !== undefined) {\n          datepickerInstance[optionName] = _this17[optionName];\n        }\n      });\n      datepickerInstance.startDate = this.startDate || this._model;\n    }\n  }, {\n    key: \"_applyPopupStyling\",\n    value: function _applyPopupStyling(nativeElement) {\n      this._renderer.addClass(nativeElement, 'dropdown-menu');\n\n      this._renderer.addClass(nativeElement, 'show');\n\n      if (this.container === 'body') {\n        this._renderer.addClass(nativeElement, 'ngb-dp-body');\n      }\n    }\n  }, {\n    key: \"_subscribeForDatepickerOutputs\",\n    value: function _subscribeForDatepickerOutputs(datepickerInstance) {\n      var _this18 = this;\n\n      datepickerInstance.navigate.subscribe(function (navigateEvent) {\n        return _this18.navigate.emit(navigateEvent);\n      });\n      datepickerInstance.dateSelect.subscribe(function (date) {\n        _this18.dateSelect.emit(date);\n\n        if (_this18.autoClose === true || _this18.autoClose === 'inside') {\n          _this18.close();\n        }\n      });\n    }\n  }, {\n    key: \"_writeModelValue\",\n    value: function _writeModelValue(model) {\n      var value = this._parserFormatter.format(model);\n\n      this._inputValue = value;\n\n      this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n\n      if (this.isOpen()) {\n        this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n\n        this._onTouched();\n      }\n    }\n  }, {\n    key: \"_fromDateStruct\",\n    value: function _fromDateStruct(date) {\n      var ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n      return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n  }, {\n    key: \"_updatePopupPosition\",\n    value: function _updatePopupPosition() {\n      if (!this._cRef) {\n        return;\n      }\n\n      var hostElement;\n\n      if (isString(this.positionTarget)) {\n        hostElement = this._document.querySelector(this.positionTarget);\n      } else if (this.positionTarget instanceof HTMLElement) {\n        hostElement = this.positionTarget;\n      } else {\n        hostElement = this._elRef.nativeElement;\n      }\n\n      if (this.positionTarget && !hostElement) {\n        throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n      }\n\n      positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = value === '' || value && value !== 'false';\n\n      if (this.isOpen()) {\n        this._cRef.instance.setDisabledState(this._disabled);\n      }\n    }\n  }]);\n\n  return NgbInputDatepicker;\n}();\n\nNgbInputDatepicker.ɵfac = function NgbInputDatepicker_Factory(t) {\n  return new (t || NgbInputDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDateParserFormatter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbInputDatepickerConfig));\n};\n\nNgbInputDatepicker.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbInputDatepicker,\n  selectors: [[\"input\", \"ngbDatepicker\", \"\"]],\n  hostVars: 1,\n  hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value);\n      })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) {\n        return ctx.manualDateChange($event.target.value, true);\n      })(\"focus\", function NgbInputDatepicker_focus_HostBindingHandler() {\n        return ctx.onFocus();\n      })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() {\n        return ctx.onBlur();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    autoClose: \"autoClose\",\n    dayTemplate: \"dayTemplate\",\n    dayTemplateData: \"dayTemplateData\",\n    displayMonths: \"displayMonths\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    footerTemplate: \"footerTemplate\",\n    markDisabled: \"markDisabled\",\n    minDate: \"minDate\",\n    maxDate: \"maxDate\",\n    navigation: \"navigation\",\n    outsideDays: \"outsideDays\",\n    placement: \"placement\",\n    restoreFocus: \"restoreFocus\",\n    showWeekdays: \"showWeekdays\",\n    showWeekNumbers: \"showWeekNumbers\",\n    startDate: \"startDate\",\n    container: \"container\",\n    positionTarget: \"positionTarget\"\n  },\n  outputs: {\n    dateSelect: \"dateSelect\",\n    navigate: \"navigate\",\n    closed: \"closed\"\n  },\n  exportAs: [\"ngbDatepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, {\n    provide: NgbDatepickerConfig,\n    useExisting: NgbInputDatepickerConfig\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbInputDatepicker.ctorParameters = function () {\n  return [{\n    type: NgbDateParserFormatter\n  }, {\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: NgZone\n  }, {\n    type: NgbCalendar\n  }, {\n    type: NgbDateAdapter\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgbInputDatepickerConfig\n  }];\n};\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"autoClose\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"dayTemplate\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"dayTemplateData\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"displayMonths\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"firstDayOfWeek\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"footerTemplate\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"markDisabled\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"minDate\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"maxDate\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"navigation\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"outsideDays\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"placement\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"restoreFocus\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"showWeekdays\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"showWeekNumbers\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"startDate\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"container\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"positionTarget\", void 0);\n\n__decorate([Output()], NgbInputDatepicker.prototype, \"dateSelect\", void 0);\n\n__decorate([Output()], NgbInputDatepicker.prototype, \"navigate\", void 0);\n\n__decorate([Output()], NgbInputDatepicker.prototype, \"closed\", void 0);\n\n__decorate([Input()], NgbInputDatepicker.prototype, \"disabled\", null);\n\nNgbInputDatepicker = __decorate([__param(8, Inject(DOCUMENT))], NgbInputDatepicker);\n\nvar NgbDatepickerDayView = /*#__PURE__*/function () {\n  function NgbDatepickerDayView(i18n) {\n    _classCallCheck(this, NgbDatepickerDayView);\n\n    this.i18n = i18n;\n  }\n\n  _createClass(NgbDatepickerDayView, [{\n    key: \"isMuted\",\n    value: function isMuted() {\n      return !this.selected && (this.date.month !== this.currentMonth || this.disabled);\n    }\n  }]);\n\n  return NgbDatepickerDayView;\n}();\n\nNgbDatepickerDayView.ɵfac = function NgbDatepickerDayView_Factory(t) {\n  return new (t || NgbDatepickerDayView)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n));\n};\n\nNgbDatepickerDayView.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerDayView,\n  selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]],\n  hostAttrs: [1, \"btn-light\"],\n  hostVars: 10,\n  hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n    }\n  },\n  inputs: {\n    currentMonth: \"currentMonth\",\n    date: \"date\",\n    disabled: \"disabled\",\n    focused: \"focused\",\n    selected: \"selected\"\n  },\n  attrs: _c20,\n  decls: 1,\n  vars: 1,\n  template: function NgbDatepickerDayView_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n    }\n  },\n  styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerDayView.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }];\n};\n\n__decorate([Input()], NgbDatepickerDayView.prototype, \"currentMonth\", void 0);\n\n__decorate([Input()], NgbDatepickerDayView.prototype, \"date\", void 0);\n\n__decorate([Input()], NgbDatepickerDayView.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgbDatepickerDayView.prototype, \"focused\", void 0);\n\n__decorate([Input()], NgbDatepickerDayView.prototype, \"selected\", void 0);\n\nvar NgbDatepickerNavigationSelect = /*#__PURE__*/function () {\n  function NgbDatepickerNavigationSelect(i18n, _renderer) {\n    _classCallCheck(this, NgbDatepickerNavigationSelect);\n\n    this.i18n = i18n;\n    this._renderer = _renderer;\n    this.select = new EventEmitter();\n    this._month = -1;\n    this._year = -1;\n  }\n\n  _createClass(NgbDatepickerNavigationSelect, [{\n    key: \"changeMonth\",\n    value: function changeMonth(month) {\n      this.select.emit(new NgbDate(this.date.year, toInteger(month), 1));\n    }\n  }, {\n    key: \"changeYear\",\n    value: function changeYear(year) {\n      this.select.emit(new NgbDate(toInteger(year), this.date.month, 1));\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.date) {\n        if (this.date.month !== this._month) {\n          this._month = this.date.month;\n\n          this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n        }\n\n        if (this.date.year !== this._year) {\n          this._year = this.date.year;\n\n          this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n        }\n      }\n    }\n  }]);\n\n  return NgbDatepickerNavigationSelect;\n}();\n\nNgbDatepickerNavigationSelect.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) {\n  return new (t || NgbDatepickerNavigationSelect)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNgbDatepickerNavigationSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbDatepickerNavigationSelect,\n  selectors: [[\"ngb-datepicker-navigation-select\"]],\n  viewQuery: function NgbDatepickerNavigationSelect_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c21, true, ElementRef);\n      ɵngcc0.ɵɵstaticViewQuery(_c22, true, ElementRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthSelect = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearSelect = _t.first);\n    }\n  },\n  inputs: {\n    date: \"date\",\n    disabled: \"disabled\",\n    months: \"months\",\n    years: \"years\"\n  },\n  outputs: {\n    select: \"select\"\n  },\n  decls: 6,\n  vars: 4,\n  consts: function consts() {\n    var i18n_23;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24 = goog.getMsg(\"Select month\");\n      i18n_23 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_24;\n    } else {\n      i18n_23 = $localize(_templateObject9());\n    }\n\n    var i18n_25;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26 = goog.getMsg(\"Select month\");\n      i18n_25 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_26;\n    } else {\n      i18n_25 = $localize(_templateObject10());\n    }\n\n    var i18n_27;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28 = goog.getMsg(\"Select year\");\n      i18n_27 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_28;\n    } else {\n      i18n_27 = $localize(_templateObject11());\n    }\n\n    var i18n_29;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30 = goog.getMsg(\"Select year\");\n      i18n_29 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_30;\n    } else {\n      i18n_29 = $localize(_templateObject12());\n    }\n\n    return [[\"aria-label\", i18n_23, \"title\", i18n_25, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"month\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_27, \"title\", i18n_29, 1, \"custom-select\", 3, \"disabled\", \"change\"], [\"year\", \"\"], [3, \"value\"]];\n  },\n  template: function NgbDatepickerNavigationSelect_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) {\n        return ctx.changeMonth($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"select\", 3, 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) {\n        return ctx.changeYear($event.target.value);\n      });\n      ɵngcc0.ɵɵtemplate(5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.months);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.years);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x],\n  styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbDatepickerNavigationSelect.ctorParameters = function () {\n  return [{\n    type: NgbDatepickerI18n\n  }, {\n    type: Renderer2\n  }];\n};\n\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"date\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"months\", void 0);\n\n__decorate([Input()], NgbDatepickerNavigationSelect.prototype, \"years\", void 0);\n\n__decorate([Output()], NgbDatepickerNavigationSelect.prototype, \"select\", void 0);\n\n__decorate([ViewChild('month', {\n  static: true,\n  read: ElementRef\n})], NgbDatepickerNavigationSelect.prototype, \"monthSelect\", void 0);\n\n__decorate([ViewChild('year', {\n  static: true,\n  read: ElementRef\n})], NgbDatepickerNavigationSelect.prototype, \"yearSelect\", void 0);\n\nvar NgbCalendarHijri = /*#__PURE__*/function (_NgbCalendar2) {\n  _inherits(NgbCalendarHijri, _NgbCalendar2);\n\n  var _super6 = _createSuper(NgbCalendarHijri);\n\n  function NgbCalendarHijri() {\n    _classCallCheck(this, NgbCalendarHijri);\n\n    return _super6.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarHijri, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n\n      switch (period) {\n        case 'y':\n          date = this._setYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n\n        case 'm':\n          date = this._setMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n\n        case 'd':\n          return this._setDay(date, date.day + number);\n\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = this.toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = this.toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n      var time = jsDate.getTime();\n      var MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1)); // Compare with Muharram 1\n\n      return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return this.fromGregorian(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) && !isNaN(this.toGregorian(date).getTime());\n    }\n  }, {\n    key: \"_setDay\",\n    value: function _setDay(date, day) {\n      day = +day;\n      var mDays = this.getDaysPerMonth(date.month, date.year);\n\n      if (day <= 0) {\n        while (day <= 0) {\n          date = this._setMonth(date, date.month - 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n          day += mDays;\n        }\n      } else if (day > mDays) {\n        while (day > mDays) {\n          day -= mDays;\n          date = this._setMonth(date, date.month + 1);\n          mDays = this.getDaysPerMonth(date.month, date.year);\n        }\n      }\n\n      date.day = day;\n      return date;\n    }\n  }, {\n    key: \"_setMonth\",\n    value: function _setMonth(date, month) {\n      month = +month;\n      date.year = date.year + Math.floor((month - 1) / 12);\n      date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n      return date;\n    }\n  }, {\n    key: \"_setYear\",\n    value: function _setYear(date, year) {\n      date.year = +year;\n      return date;\n    }\n  }]);\n\n  return NgbCalendarHijri;\n}(NgbCalendar);\n\nNgbCalendarHijri.ɵfac = function NgbCalendarHijri_Factory(t) {\n  return ɵNgbCalendarHijri_BaseFactory(t || NgbCalendarHijri);\n};\n\nNgbCalendarHijri.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHijri,\n  factory: function factory(t) {\n    return NgbCalendarHijri.ɵfac(t);\n  }\n});\n/**\n * Checks if islamic year is a leap year\n */\n\nfunction isIslamicLeapYear(hYear) {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n */\n\n\nfunction isGregorianLeapYear(gDate) {\n  var year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\n\n\nfunction getIslamicMonthStart(hYear, hMonth) {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\n\n\nfunction getIslamicYearStart(year) {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\n\nvar GREGORIAN_EPOCH = 1721425.5;\nvar ISLAMIC_EPOCH = 1948439.5;\n\nvar NgbCalendarIslamicCivil = /*#__PURE__*/function (_NgbCalendarHijri) {\n  _inherits(NgbCalendarIslamicCivil, _NgbCalendarHijri);\n\n  var _super7 = _createSuper(NgbCalendarIslamicCivil);\n\n  function NgbCalendarIslamicCivil() {\n    _classCallCheck(this, NgbCalendarIslamicCivil);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarIslamicCivil, [{\n    key: \"fromGregorian\",\n\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     */\n    value: function fromGregorian(gDate) {\n      var gYear = gDate.getFullYear(),\n          gMonth = gDate.getMonth(),\n          gDay = gDate.getDate();\n      var julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) + -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n      julianDay = Math.floor(julianDay) + 0.5;\n      var days = julianDay - ISLAMIC_EPOCH;\n      var hYear = Math.floor((30 * days + 10646) / 10631.0);\n      var hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n      hMonth = Math.min(hMonth, 11);\n      var hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n      return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     */\n\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(hDate) {\n      var hYear = hDate.year;\n      var hMonth = hDate.month - 1;\n      var hDay = hDate.day;\n      var julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n      var wjd = Math.floor(julianDay - 0.5) + 0.5,\n          depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097),\n          dqc = mod(depoch, 146097),\n          cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524),\n          quad = Math.floor(dcent / 1461),\n          dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n      var year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n\n      if (!(cent === 4 || yindex === 4)) {\n        year++;\n      }\n\n      var gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);\n      var yearday = wjd - gYearStart;\n      var tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n      var leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n      var month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n      var tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400) + Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) + 1);\n      var day = wjd - tjd2 + 1;\n      return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     */\n\n  }, {\n    key: \"getDaysPerMonth\",\n    value: function getDaysPerMonth(month, year) {\n      year = year + Math.floor(month / 13);\n      month = (month - 1) % 12 + 1;\n      var length = 29 + month % 2;\n\n      if (month === 12 && isIslamicLeapYear(year)) {\n        length++;\n      }\n\n      return length;\n    }\n  }]);\n\n  return NgbCalendarIslamicCivil;\n}(NgbCalendarHijri);\n\nNgbCalendarIslamicCivil.ɵfac = function NgbCalendarIslamicCivil_Factory(t) {\n  return ɵNgbCalendarIslamicCivil_BaseFactory(t || NgbCalendarIslamicCivil);\n};\n\nNgbCalendarIslamicCivil.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicCivil,\n  factory: function factory(t) {\n    return NgbCalendarIslamicCivil.ɵfac(t);\n  }\n});\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nvar GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nvar GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nvar HIJRI_BEGIN = 1300;\nvar HIJRI_END = 1600;\nvar ONE_DAY = 1000 * 60 * 60 * 24;\nvar MONTH_LENGTH = [// 1300-1304\n'101010101010', '110101010100', '111011001001', '011011010100', '011011101010', // 1305-1309\n'001101101100', '101010101101', '010101010101', '011010101001', '011110010010', // 1310-1314\n'101110101001', '010111010100', '101011011010', '010101011100', '110100101101', // 1315-1319\n'011010010101', '011101001010', '101101010100', '101101101010', '010110101101', // 1320-1324\n'010010101110', '101001001111', '010100010111', '011010001011', '011010100101', // 1325-1329\n'101011010101', '001011010110', '100101011011', '010010011101', '101001001101', // 1330-1334\n'110100100110', '110110010101', '010110101100', '100110110110', '001010111010', // 1335-1339\n'101001011011', '010100101011', '101010010101', '011011001010', '101011101001', // 1340-1344\n'001011110100', '100101110110', '001010110110', '100101010110', '101011001010', // 1345-1349\n'101110100100', '101111010010', '010111011001', '001011011100', '100101101101', // 1350-1354\n'010101001101', '101010100101', '101101010010', '101110100101', '010110110100', // 1355-1359\n'100110110110', '010101010111', '001010010111', '010101001011', '011010100011', // 1360-1364\n'011101010010', '101101100101', '010101101010', '101010101011', '010100101011', // 1365-1369\n'110010010101', '110101001010', '110110100101', '010111001010', '101011010110', // 1370-1374\n'100101010111', '010010101011', '100101001011', '101010100101', '101101010010', // 1375-1379\n'101101101010', '010101110101', '001001110110', '100010110111', '010001011011', // 1380-1384\n'010101010101', '010110101001', '010110110100', '100111011010', '010011011101', // 1385-1389\n'001001101110', '100100110110', '101010101010', '110101010100', '110110110010', // 1390-1394\n'010111010101', '001011011010', '100101011011', '010010101011', '101001010101', // 1395-1399\n'101101001001', '101101100100', '101101110001', '010110110100', '101010110101', // 1400-1404\n'101001010101', '110100100101', '111010010010', '111011001001', '011011010100', // 1405-1409\n'101011101001', '100101101011', '010010101011', '101010010011', '110101001001', // 1410-1414\n'110110100100', '110110110010', '101010111001', '010010111010', '101001011011', // 1415-1419\n'010100101011', '101010010101', '101100101010', '101101010101', '010101011100', // 1420-1424\n'010010111101', '001000111101', '100100011101', '101010010101', '101101001010', // 1425-1429\n'101101011010', '010101101101', '001010110110', '100100111011', '010010011011', // 1430-1434\n'011001010101', '011010101001', '011101010100', '101101101010', '010101101100', // 1435-1439\n'101010101101', '010101010101', '101100101001', '101110010010', '101110101001', // 1440-1444\n'010111010100', '101011011010', '010101011010', '101010101011', '010110010101', // 1445-1449\n'011101001001', '011101100100', '101110101010', '010110110101', '001010110110', // 1450-1454\n'101001010110', '111001001101', '101100100101', '101101010010', '101101101010', // 1455-1459\n'010110101101', '001010101110', '100100101111', '010010010111', '011001001011', // 1460-1464\n'011010100101', '011010101100', '101011010110', '010101011101', '010010011101', // 1465-1469\n'101001001101', '110100010110', '110110010101', '010110101010', '010110110101', // 1470-1474\n'001011011010', '100101011011', '010010101101', '010110010101', '011011001010', // 1475-1479\n'011011100100', '101011101010', '010011110101', '001010110110', '100101010110', // 1480-1484\n'101010101010', '101101010100', '101111010010', '010111011001', '001011101010', // 1485-1489\n'100101101101', '010010101101', '101010010101', '101101001010', '101110100101', // 1490-1494\n'010110110010', '100110110101', '010011010110', '101010010111', '010101000111', // 1495-1499\n'011010010011', '011101001001', '101101010101', '010101101010', '101001101011', // 1500-1504\n'010100101011', '101010001011', '110101000110', '110110100011', '010111001010', // 1505-1509\n'101011010110', '010011011011', '001001101011', '100101001011', '101010100101', // 1510-1514\n'101101010010', '101101101001', '010101110101', '000101110110', '100010110111', // 1515-1519\n'001001011011', '010100101011', '010101100101', '010110110100', '100111011010', // 1520-1524\n'010011101101', '000101101101', '100010110110', '101010100110', '110101010010', // 1525-1529\n'110110101001', '010111010100', '101011011010', '100101011011', '010010101011', // 1530-1534\n'011001010011', '011100101001', '011101100010', '101110101001', '010110110010', // 1535-1539\n'101010110101', '010101010101', '101100100101', '110110010010', '111011001001', // 1540-1544\n'011011010010', '101011101001', '010101101011', '010010101011', '101001010101', // 1545-1549\n'110100101001', '110101010100', '110110101010', '100110110101', '010010111010', // 1550-1554\n'101000111011', '010010011011', '101001001101', '101010101010', '101011010101', // 1555-1559\n'001011011010', '100101011101', '010001011110', '101000101110', '110010011010', // 1560-1564\n'110101010101', '011010110010', '011010111001', '010010111010', '101001011101', // 1565-1569\n'010100101101', '101010010101', '101101010010', '101110101000', '101110110100', // 1570-1574\n'010110111001', '001011011010', '100101011010', '101101001010', '110110100100', // 1575-1579\n'111011010001', '011011101000', '101101101010', '010101101101', '010100110101', // 1580-1584\n'011010010101', '110101001010', '110110101000', '110111010100', '011011011010', // 1585-1589\n'010101011011', '001010011101', '011000101011', '101100010101', '101101001010', // 1590-1594\n'101110010101', '010110101010', '101010101110', '100100101110', '110010001111', // 1595-1599\n'010100100111', '011010010101', '011010101010', '101011010110', '010101011101', // 1600\n'001010011101'];\n\nfunction getDaysDiff(date1, date2) {\n  // Ignores the time part in date1 and date2:\n  var time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  var time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  var diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\nvar NgbCalendarIslamicUmalqura = /*#__PURE__*/function (_NgbCalendarIslamicCi) {\n  _inherits(NgbCalendarIslamicUmalqura, _NgbCalendarIslamicCi);\n\n  var _super8 = _createSuper(NgbCalendarIslamicUmalqura);\n\n  function NgbCalendarIslamicUmalqura() {\n    _classCallCheck(this, NgbCalendarIslamicUmalqura);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarIslamicUmalqura, [{\n    key: \"fromGregorian\",\n\n    /**\n    * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n    * `gdate` is s JS Date to be converted to Hijri.\n    */\n    value: function fromGregorian(gDate) {\n      var hDay = 1,\n          hMonth = 0,\n          hYear = 1300;\n      var daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n\n      if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n        var year = 1300;\n\n        for (var i = 0; i < MONTH_LENGTH.length; i++, year++) {\n          for (var j = 0; j < 12; j++) {\n            var numOfDays = +MONTH_LENGTH[i][j] + 29;\n\n            if (daysDiff <= numOfDays) {\n              hDay = daysDiff + 1;\n\n              if (hDay > numOfDays) {\n                hDay = 1;\n                j++;\n              }\n\n              if (j > 11) {\n                j = 0;\n                year++;\n              }\n\n              hMonth = j;\n              hYear = year;\n              return new NgbDate(hYear, hMonth + 1, hDay);\n            }\n\n            daysDiff = daysDiff - numOfDays;\n          }\n        }\n      } else {\n        return _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"fromGregorian\", this).call(this, gDate);\n      }\n    }\n    /**\n    * Converts the current Hijri date to Gregorian.\n    */\n\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(hDate) {\n      var hYear = hDate.year;\n      var hMonth = hDate.month - 1;\n      var hDay = hDate.day;\n      var gDate = new Date(GREGORIAN_FIRST_DATE);\n      var dayDiff = hDay - 1;\n\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        for (var y = 0; y < hYear - HIJRI_BEGIN; y++) {\n          for (var m = 0; m < 12; m++) {\n            dayDiff += +MONTH_LENGTH[y][m] + 29;\n          }\n        }\n\n        for (var _m = 0; _m < hMonth; _m++) {\n          dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][_m] + 29;\n        }\n\n        gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n      } else {\n        gDate = _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"toGregorian\", this).call(this, hDate);\n      }\n\n      return gDate;\n    }\n    /**\n    * Returns the number of days in a specific Hijri hMonth.\n    * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n    * `hYear` is any Hijri hYear.\n    */\n\n  }, {\n    key: \"getDaysPerMonth\",\n    value: function getDaysPerMonth(hMonth, hYear) {\n      if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n        var pos = hYear - HIJRI_BEGIN;\n        return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n      }\n\n      return _get(_getPrototypeOf(NgbCalendarIslamicUmalqura.prototype), \"getDaysPerMonth\", this).call(this, hMonth, hYear);\n    }\n  }]);\n\n  return NgbCalendarIslamicUmalqura;\n}(NgbCalendarIslamicCivil);\n\nNgbCalendarIslamicUmalqura.ɵfac = function NgbCalendarIslamicUmalqura_Factory(t) {\n  return ɵNgbCalendarIslamicUmalqura_BaseFactory(t || NgbCalendarIslamicUmalqura);\n};\n\nNgbCalendarIslamicUmalqura.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarIslamicUmalqura,\n  factory: function factory(t) {\n    return NgbCalendarIslamicUmalqura.ɵfac(t);\n  }\n});\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\n\nfunction toGregorian(jalaliDate) {\n  var jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  var date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\n\n\nfunction fromGregorian(gdate) {\n  var g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nfunction setJalaliYear(date, yearValue) {\n  date.year = +yearValue;\n  return date;\n}\n\nfunction setJalaliMonth(date, month) {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nfunction setJalaliDay(date, day) {\n  var mDays = getDaysPerMonth(date.month, date.year);\n\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n\n  date.day = day;\n  return date;\n}\n\nfunction mod$1(a, b) {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a, b) {\n  return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\n\n\nfunction jalCal(jalaliYear) {\n  // Jalali years starting the 33-year rule.\n  var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  var breaksLength = breaks.length;\n  var gYear = jalaliYear + 621;\n  var leapJ = -14;\n  var jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  } // Find the limiting years for the Jalali year jalaliYear.\n\n\n  var jump;\n\n  for (var i = 1; i < breaksLength; i += 1) {\n    var jm = breaks[i];\n    jump = jm - jp;\n\n    if (jalaliYear < jm) {\n      break;\n    }\n\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n    jp = jm;\n  }\n\n  var n = jalaliYear - jp; // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n\n  leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n\n  if (mod$1(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  } // And the same in the Gregorian calendar (until the year gYear).\n\n\n  var leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150; // Determine the Gregorian date of Farvardin the 1st.\n\n  var march = 20 + leapJ - leapG; // Find how many years have passed since the last leap year.\n\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n\n  var leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {\n    leap: leap,\n    gy: gYear,\n    march: march\n  };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\n\n\nfunction julianToGregorian(julianDayNumber) {\n  var j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  var i = div(mod$1(j, 1461), 4) * 5 + 308;\n  var gDay = div(mod$1(i, 153), 5) + 1;\n  var gMonth = mod$1(div(i, 153), 12) + 1;\n  var gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n  return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction gregorianToJulian(gy, gm, gd) {\n  var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\n\n\nfunction julianToJalali(julianDayNumber) {\n  var gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n  ,\n      jalaliYear = gy - 621,\n      r = jalCal(jalaliYear),\n      gregorianDay = gregorianToJulian(gy, 3, r.march),\n      jalaliDay,\n      jalaliMonth,\n      numberOfDays; // Find number of days that passed since 1 Farvardin.\n\n  numberOfDays = julianDayNumber - gregorianDay;\n\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod$1(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod$1(numberOfDays, 30) + 1;\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\n\n\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n  var r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n */\n\n\nfunction getDaysPerMonth(month, year) {\n  if (month <= 6) {\n    return 31;\n  }\n\n  if (month <= 11) {\n    return 30;\n  }\n\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n\n  return 29;\n}\n\nvar NgbCalendarPersian = /*#__PURE__*/function (_NgbCalendar3) {\n  _inherits(NgbCalendarPersian, _NgbCalendar3);\n\n  var _super9 = _createSuper(NgbCalendarPersian);\n\n  function NgbCalendarPersian() {\n    _classCallCheck(this, NgbCalendarPersian);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarPersian, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths() {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n\n      switch (period) {\n        case 'y':\n          date = setJalaliYear(date, date.year + number);\n          date.month = 1;\n          date.day = 1;\n          return date;\n\n        case 'm':\n          date = setJalaliMonth(date, date.month + number);\n          date.day = 1;\n          return date;\n\n        case 'd':\n          return setJalaliDay(date, date.day + number);\n\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = toGregorian(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      // in JS Date Sun=0, in ISO 8601 Sun=7\n      if (firstDayOfWeek === 7) {\n        firstDayOfWeek = 0;\n      }\n\n      var thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n      var date = week[thursdayIndex];\n      var jsDate = toGregorian(date);\n      jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n\n      var time = jsDate.getTime();\n      var startDate = toGregorian(new NgbDate(date.year, 1, 1));\n      return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromGregorian(new Date());\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) && !isNaN(toGregorian(date).getTime());\n    }\n  }]);\n\n  return NgbCalendarPersian;\n}(NgbCalendar);\n\nNgbCalendarPersian.ɵfac = function NgbCalendarPersian_Factory(t) {\n  return ɵNgbCalendarPersian_BaseFactory(t || NgbCalendarPersian);\n};\n\nNgbCalendarPersian.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarPersian,\n  factory: function factory(t) {\n    return NgbCalendarPersian.ɵfac(t);\n  }\n});\nvar PARTS_PER_HOUR = 1080;\nvar PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nvar PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nvar PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nvar BAHARAD = 11 * PARTS_PER_HOUR + 204;\nvar HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nvar GREGORIAN_EPOCH$1 = 1721425.5;\n\nfunction isGregorianLeapYear$1(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year) {\n  var monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  var fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  var dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  var timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n  var dayOfWeek = dayNumber % 7; // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month, year) {\n  var days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  if (isGregorianLeapYear$1(year)) {\n    days[1]++;\n  }\n\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year) {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewYear(year) {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nfunction isHebrewLeapYear(year) {\n  var b = (year * 12 + 17) % 19;\n  return b >= (b < 0 ? -7 : 12);\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\n\n\nfunction getDaysInHebrewMonth(month, year) {\n  var yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  var yearType = (yearLength <= 380 ? yearLength : yearLength - 30) - 353;\n  var leapYear = isHebrewLeapYear(year);\n  var daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] : [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n\n  if (yearType > 0) {\n    daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n  }\n\n  if (yearType > 1) {\n    daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n  }\n\n  return daysInMonth[month - 1];\n}\n\nfunction getDayNumberInHebrewYear(date) {\n  var numberOfDay = 0;\n\n  for (var i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n\n  return numberOfDay + date.day;\n}\n\nfunction setHebrewMonth(date, val) {\n  var after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n\nfunction setHebrewDay(date, val) {\n  var after = val >= 0;\n\n  if (!after) {\n    val = -val;\n  }\n\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n\n  return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\n\n\nfunction fromGregorian$1(gdate) {\n  var date = new Date(gdate);\n  var gYear = date.getFullYear(),\n      gMonth = date.getMonth(),\n      gDay = date.getDate();\n  var julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) - Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) + Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  var daysSinceHebEpoch = julianDay - 347997;\n  var monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  var hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  var firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  var dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n\n  var hMonth = 1;\n  var hDay = dayOfYear;\n\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n\n  return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\n\n\nfunction toGregorian$1(hebrewDate) {\n  var hYear = hebrewDate.year;\n  var hMonth = hebrewDate.month;\n  var hDay = hebrewDate.day;\n  var days = numberOfFirstDayInYear(hYear);\n\n  for (var i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n\n  days += hDay;\n  var diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  var after = diffDays >= 0;\n\n  if (!after) {\n    diffDays = -diffDays;\n  }\n\n  var gYear = 1970;\n  var gMonth = 1;\n  var gDay = 1;\n\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nfunction hebrewNumerals(numerals) {\n  if (!numerals) {\n    return '';\n  }\n\n  var hArray0_9 = ['', \"\\u05D0\", \"\\u05D1\", \"\\u05D2\", \"\\u05D3\", \"\\u05D4\", \"\\u05D5\", \"\\u05D6\", \"\\u05D7\", \"\\u05D8\"];\n  var hArray10_19 = [\"\\u05D9\", \"\\u05D9\\u05D0\", \"\\u05D9\\u05D1\", \"\\u05D9\\u05D2\", \"\\u05D9\\u05D3\", \"\\u05D8\\u05D5\", \"\\u05D8\\u05D6\", \"\\u05D9\\u05D6\", \"\\u05D9\\u05D7\", \"\\u05D9\\u05D8\"];\n  var hArray20_90 = ['', '', \"\\u05DB\", \"\\u05DC\", \"\\u05DE\", \"\\u05E0\", \"\\u05E1\", \"\\u05E2\", \"\\u05E4\", \"\\u05E6\"];\n  var hArray100_900 = ['', \"\\u05E7\", \"\\u05E8\", \"\\u05E9\", \"\\u05EA\", \"\\u05EA\\u05E7\", \"\\u05EA\\u05E8\", \"\\u05EA\\u05E9\", \"\\u05EA\\u05EA\", \"\\u05EA\\u05EA\\u05E7\"];\n  var hArray1000_9000 = ['', \"\\u05D0\", \"\\u05D1\", \"\\u05D1\\u05D0\", \"\\u05D1\\u05D1\", \"\\u05D4\", \"\\u05D4\\u05D0\", \"\\u05D4\\u05D1\", \"\\u05D4\\u05D1\\u05D0\", \"\\u05D4\\u05D1\\u05D1\"];\n  var geresh = \"\\u05F3\",\n      gershaim = \"\\u05F4\";\n  var mem = 0;\n  var result = [];\n  var step = 0;\n\n  while (numerals > 0) {\n    var m = numerals % 10;\n\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n\n      break;\n    }\n\n    numerals = Math.floor(numerals / 10);\n\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n\n    step++;\n  }\n\n  result = result.join('').split('');\n\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n\n  return result.join('');\n}\n/**\n * @since 3.2.0\n */\n\n\nvar NgbCalendarHebrew = /*#__PURE__*/function (_NgbCalendar4) {\n  _inherits(NgbCalendarHebrew, _NgbCalendar4);\n\n  var _super10 = _createSuper(NgbCalendarHebrew);\n\n  function NgbCalendarHebrew() {\n    _classCallCheck(this, NgbCalendarHebrew);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(NgbCalendarHebrew, [{\n    key: \"getDaysPerWeek\",\n    value: function getDaysPerWeek() {\n      return 7;\n    }\n  }, {\n    key: \"getMonths\",\n    value: function getMonths(year) {\n      if (year && isHebrewLeapYear(year)) {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n      } else {\n        return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n      }\n    }\n  }, {\n    key: \"getWeeksPerMonth\",\n    value: function getWeeksPerMonth() {\n      return 6;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      var b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n      b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n      b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n      return b && !isNaN(toGregorian$1(date).getTime());\n    }\n  }, {\n    key: \"getNext\",\n    value: function getNext(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      date = new NgbDate(date.year, date.month, date.day);\n\n      switch (period) {\n        case 'y':\n          date.year += number;\n          date.month = 1;\n          date.day = 1;\n          return date;\n\n        case 'm':\n          date = setHebrewMonth(date, number);\n          date.day = 1;\n          return date;\n\n        case 'd':\n          return setHebrewDay(date, number);\n\n        default:\n          return date;\n      }\n    }\n  }, {\n    key: \"getPrev\",\n    value: function getPrev(date) {\n      var period = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'd';\n      var number = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return this.getNext(date, period, -number);\n    }\n  }, {\n    key: \"getWeekday\",\n    value: function getWeekday(date) {\n      var day = toGregorian$1(date).getDay(); // in JS Date Sun=0, in ISO 8601 Sun=7\n\n      return day === 0 ? 7 : day;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(week, firstDayOfWeek) {\n      var date = week[week.length - 1];\n      return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n  }, {\n    key: \"getToday\",\n    value: function getToday() {\n      return fromGregorian$1(new Date());\n    }\n    /**\n     * @since 3.4.0\n     */\n\n  }, {\n    key: \"toGregorian\",\n    value: function toGregorian(date) {\n      return fromJSDate(toGregorian$1(date));\n    }\n    /**\n     * @since 3.4.0\n     */\n\n  }, {\n    key: \"fromGregorian\",\n    value: function fromGregorian(date) {\n      return fromGregorian$1(toJSDate(date));\n    }\n  }]);\n\n  return NgbCalendarHebrew;\n}(NgbCalendar);\n\nNgbCalendarHebrew.ɵfac = function NgbCalendarHebrew_Factory(t) {\n  return ɵNgbCalendarHebrew_BaseFactory(t || NgbCalendarHebrew);\n};\n\nNgbCalendarHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbCalendarHebrew,\n  factory: function factory(t) {\n    return NgbCalendarHebrew.ɵfac(t);\n  }\n});\nvar WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nvar MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nvar MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * @since 3.2.0\n */\n\nvar NgbDatepickerI18nHebrew = /*#__PURE__*/function (_NgbDatepickerI18n2) {\n  _inherits(NgbDatepickerI18nHebrew, _NgbDatepickerI18n2);\n\n  var _super11 = _createSuper(NgbDatepickerI18nHebrew);\n\n  function NgbDatepickerI18nHebrew() {\n    _classCallCheck(this, NgbDatepickerI18nHebrew);\n\n    return _super11.apply(this, arguments);\n  }\n\n  _createClass(NgbDatepickerI18nHebrew, [{\n    key: \"getMonthShortName\",\n    value: function getMonthShortName(month, year) {\n      return this.getMonthFullName(month, year);\n    }\n  }, {\n    key: \"getMonthFullName\",\n    value: function getMonthFullName(month, year) {\n      return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n    }\n  }, {\n    key: \"getWeekdayShortName\",\n    value: function getWeekdayShortName(weekday) {\n      return WEEKDAYS[weekday - 1];\n    }\n  }, {\n    key: \"getDayAriaLabel\",\n    value: function getDayAriaLabel(date) {\n      return \"\".concat(hebrewNumerals(date.day), \" \").concat(this.getMonthFullName(date.month, date.year), \" \").concat(hebrewNumerals(date.year));\n    }\n  }, {\n    key: \"getDayNumerals\",\n    value: function getDayNumerals(date) {\n      return hebrewNumerals(date.day);\n    }\n  }, {\n    key: \"getWeekNumerals\",\n    value: function getWeekNumerals(weekNumber) {\n      return hebrewNumerals(weekNumber);\n    }\n  }, {\n    key: \"getYearNumerals\",\n    value: function getYearNumerals(year) {\n      return hebrewNumerals(year);\n    }\n  }]);\n\n  return NgbDatepickerI18nHebrew;\n}(NgbDatepickerI18n);\n\nNgbDatepickerI18nHebrew.ɵfac = function NgbDatepickerI18nHebrew_Factory(t) {\n  return ɵNgbDatepickerI18nHebrew_BaseFactory(t || NgbDatepickerI18nHebrew);\n};\n\nNgbDatepickerI18nHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDatepickerI18nHebrew,\n  factory: function factory(t) {\n    return NgbDatepickerI18nHebrew.ɵfac(t);\n  }\n});\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n\nvar NgbDateNativeAdapter = /*#__PURE__*/function (_NgbDateAdapter2) {\n  _inherits(NgbDateNativeAdapter, _NgbDateAdapter2);\n\n  var _super12 = _createSuper(NgbDateNativeAdapter);\n\n  function NgbDateNativeAdapter() {\n    _classCallCheck(this, NgbDateNativeAdapter);\n\n    return _super12.apply(this, arguments);\n  }\n\n  _createClass(NgbDateNativeAdapter, [{\n    key: \"fromModel\",\n\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     */\n    value: function fromModel(date) {\n      return date instanceof Date && !isNaN(date.getTime()) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(date) {\n      return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) : null;\n    }\n  }, {\n    key: \"_fromNativeDate\",\n    value: function _fromNativeDate(date) {\n      return {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate()\n      };\n    }\n  }, {\n    key: \"_toNativeDate\",\n    value: function _toNativeDate(date) {\n      var jsDate = new Date(date.year, date.month - 1, date.day, 12); // avoid 30 -> 1930 conversion\n\n      jsDate.setFullYear(date.year);\n      return jsDate;\n    }\n  }]);\n\n  return NgbDateNativeAdapter;\n}(NgbDateAdapter);\n\nNgbDateNativeAdapter.ɵfac = function NgbDateNativeAdapter_Factory(t) {\n  return ɵNgbDateNativeAdapter_BaseFactory(t || NgbDateNativeAdapter);\n};\n\nNgbDateNativeAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeAdapter,\n  factory: function factory(t) {\n    return NgbDateNativeAdapter.ɵfac(t);\n  }\n});\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n\nvar NgbDateNativeUTCAdapter = /*#__PURE__*/function (_NgbDateNativeAdapter) {\n  _inherits(NgbDateNativeUTCAdapter, _NgbDateNativeAdapter);\n\n  var _super13 = _createSuper(NgbDateNativeUTCAdapter);\n\n  function NgbDateNativeUTCAdapter() {\n    _classCallCheck(this, NgbDateNativeUTCAdapter);\n\n    return _super13.apply(this, arguments);\n  }\n\n  _createClass(NgbDateNativeUTCAdapter, [{\n    key: \"_fromNativeDate\",\n    value: function _fromNativeDate(date) {\n      return {\n        year: date.getUTCFullYear(),\n        month: date.getUTCMonth() + 1,\n        day: date.getUTCDate()\n      };\n    }\n  }, {\n    key: \"_toNativeDate\",\n    value: function _toNativeDate(date) {\n      var jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day)); // avoid 30 -> 1930 conversion\n\n      jsDate.setUTCFullYear(date.year);\n      return jsDate;\n    }\n  }]);\n\n  return NgbDateNativeUTCAdapter;\n}(NgbDateNativeAdapter);\n\nNgbDateNativeUTCAdapter.ɵfac = function NgbDateNativeUTCAdapter_Factory(t) {\n  return ɵNgbDateNativeUTCAdapter_BaseFactory(t || NgbDateNativeUTCAdapter);\n};\n\nNgbDateNativeUTCAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbDateNativeUTCAdapter,\n  factory: function factory(t) {\n    return NgbDateNativeUTCAdapter.ɵfac(t);\n  }\n});\n\nvar NgbDatepickerModule = function NgbDatepickerModule() {\n  _classCallCheck(this, NgbDatepickerModule);\n};\n\nNgbDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDatepickerModule\n});\nNgbDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDatepickerModule_Factory(t) {\n    return new (t || NgbDatepickerModule)();\n  },\n  imports: [[CommonModule, FormsModule]]\n});\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n\nvar NgbDropdownConfig = function NgbDropdownConfig() {\n  _classCallCheck(this, NgbDropdownConfig);\n\n  this.autoClose = true;\n  this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n};\n\nNgbDropdownConfig.ɵfac = function NgbDropdownConfig_Factory(t) {\n  return new (t || NgbDropdownConfig)();\n};\n\nNgbDropdownConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbDropdownConfig_Factory() {\n    return new NgbDropdownConfig();\n  },\n  token: NgbDropdownConfig,\n  providedIn: \"root\"\n});\nvar NgbDropdownToggle_1;\n\nvar NgbNavbar = function NgbNavbar() {\n  _classCallCheck(this, NgbNavbar);\n};\n\nNgbNavbar.ɵfac = function NgbNavbar_Factory(t) {\n  return new (t || NgbNavbar)();\n};\n\nNgbNavbar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavbar,\n  selectors: [[\"\", 8, \"navbar\"]]\n});\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n\nvar NgbDropdownItem = /*#__PURE__*/function () {\n  function NgbDropdownItem(elementRef) {\n    _classCallCheck(this, NgbDropdownItem);\n\n    this.elementRef = elementRef;\n    this._disabled = false;\n  }\n\n  _createClass(NgbDropdownItem, [{\n    key: \"disabled\",\n    set: function set(value) {\n      this._disabled = value === '' || value === true; // accept an empty attribute as true\n    },\n    get: function get() {\n      return this._disabled;\n    }\n  }]);\n\n  return NgbDropdownItem;\n}();\n\nNgbDropdownItem.ɵfac = function NgbDropdownItem_Factory(t) {\n  return new (t || NgbDropdownItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownItem,\n  selectors: [[\"\", \"ngbDropdownItem\", \"\"]],\n  hostAttrs: [1, \"dropdown-item\"],\n  hostVars: 2,\n  hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  }\n});\n\nNgbDropdownItem.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\n__decorate([Input()], NgbDropdownItem.prototype, \"disabled\", null);\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n\n\nvar NgbDropdownMenu = function NgbDropdownMenu(dropdown) {\n  _classCallCheck(this, NgbDropdownMenu);\n\n  this.dropdown = dropdown;\n  this.placement = 'bottom';\n  this.isOpen = false;\n};\n\nNgbDropdownMenu.ɵfac = function NgbDropdownMenu_Factory(t) {\n  return new (t || NgbDropdownMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })));\n};\n\nNgbDropdownMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownMenu,\n  selectors: [[\"\", \"ngbDropdownMenu\", \"\"]],\n  contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n    }\n  },\n  hostVars: 5,\n  hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"x-placement\", ctx.placement);\n      ɵngcc0.ɵɵclassProp(\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\nNgbDropdownMenu.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }];\n};\n\n__decorate([ContentChildren(NgbDropdownItem)], NgbDropdownMenu.prototype, \"menuItems\", void 0);\n\nNgbDropdownMenu = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbDropdown;\n})))], NgbDropdownMenu);\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n\nvar NgbDropdownAnchor = /*#__PURE__*/function () {\n  function NgbDropdownAnchor(dropdown, _elementRef) {\n    _classCallCheck(this, NgbDropdownAnchor);\n\n    this.dropdown = dropdown;\n    this._elementRef = _elementRef;\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  _createClass(NgbDropdownAnchor, [{\n    key: \"getNativeElement\",\n    value: function getNativeElement() {\n      return this._elementRef.nativeElement;\n    }\n  }]);\n\n  return NgbDropdownAnchor;\n}();\n\nNgbDropdownAnchor.ɵfac = function NgbDropdownAnchor_Factory(t) {\n  return new (t || NgbDropdownAnchor)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownAnchor,\n  selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\", 1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  }\n});\n\nNgbDropdownAnchor.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n\nNgbDropdownAnchor = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbDropdown;\n})))], NgbDropdownAnchor);\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n\nvar NgbDropdownToggle = NgbDropdownToggle_1 = /*#__PURE__*/function (_NgbDropdownAnchor) {\n  _inherits(NgbDropdownToggle, _NgbDropdownAnchor);\n\n  var _super14 = _createSuper(NgbDropdownToggle);\n\n  function NgbDropdownToggle(dropdown, elementRef) {\n    _classCallCheck(this, NgbDropdownToggle);\n\n    return _super14.call(this, dropdown, elementRef);\n  }\n\n  return NgbDropdownToggle;\n}(NgbDropdownAnchor);\n\nNgbDropdownToggle.ɵfac = function NgbDropdownToggle_Factory(t) {\n  return new (t || NgbDropdownToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbDropdown;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbDropdownToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdownToggle,\n  selectors: [[\"\", \"ngbDropdownToggle\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\", 1, \"dropdown-toggle\"],\n  hostVars: 1,\n  hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() {\n        return ctx.dropdown.toggle();\n      })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) {\n        return ctx.dropdown.onKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NgbDropdownAnchor,\n    useExisting: forwardRef(function () {\n      return NgbDropdownToggle_1;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n\nNgbDropdownToggle.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbDropdown;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n\nNgbDropdownToggle = NgbDropdownToggle_1 = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbDropdown;\n})))], NgbDropdownToggle);\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n\nvar NgbDropdown = /*#__PURE__*/function () {\n  function NgbDropdown(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n    var _this19 = this;\n\n    _classCallCheck(this, NgbDropdown);\n\n    this._changeDetector = _changeDetector;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._closed$ = new Subject();\n    /**\n     * Defines whether or not the dropdown menu is opened initially.\n     */\n\n    this._open = false;\n    /**\n     * An event fired when the dropdown is opened or closed.\n     *\n     * The event payload is a `boolean`:\n     * * `true` - the dropdown was opened\n     * * `false` - the dropdown was closed\n     */\n\n    this.openChange = new EventEmitter();\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      _this19._positionMenu();\n    });\n  }\n\n  _createClass(NgbDropdown, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this20 = this;\n\n      this._ngZone.onStable.pipe(take(1)).subscribe(function () {\n        _this20._applyPlacementClasses();\n\n        if (_this20._open) {\n          _this20._setCloseHandlers();\n        }\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.container && this._open) {\n        this._applyContainer(this.container);\n      }\n\n      if (changes.placement && !changes.placement.isFirstChange) {\n        this._applyPlacementClasses();\n      }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     */\n\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._open;\n    }\n    /**\n     * Opens the dropdown menu.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open() {\n      if (!this._open) {\n        this._open = true;\n\n        this._applyContainer(this.container);\n\n        this.openChange.emit(true);\n\n        this._setCloseHandlers();\n      }\n    }\n  }, {\n    key: \"_setCloseHandlers\",\n    value: function _setCloseHandlers() {\n      var _this21 = this;\n\n      var anchor = this._anchor;\n      ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n        return _this21.close();\n      }, this._closed$, this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._open) {\n        this._open = false;\n\n        this._resetContainer();\n\n        this._closed$.next();\n\n        this.openChange.emit(false);\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Toggles the dropdown menu.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.isOpen()) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._resetContainer();\n\n      this._closed$.next();\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var _this22 = this;\n\n      // tslint:disable-next-line:deprecation\n      var key = event.which;\n\n      var itemElements = this._getMenuElements();\n\n      var position = -1;\n      var isEventFromItems = false;\n      var itemElement = null;\n\n      var isEventFromToggle = this._isEventFromToggle(event);\n\n      if (!isEventFromToggle && itemElements.length) {\n        itemElements.forEach(function (item, index) {\n          if (item.contains(event.target)) {\n            isEventFromItems = true;\n            itemElement = item;\n          }\n\n          if (item === _this22._document.activeElement) {\n            position = index;\n          }\n        });\n      } // closing on Enter / Space\n\n\n      if (key === Key.Space || key === Key.Enter) {\n        if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n          // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n          // So we have to register a one-time click handler that will fire after any user defined click handlers\n          // to close the dropdown\n          fromEvent(itemElement, 'click').pipe(take(1)).subscribe(function () {\n            return _this22.close();\n          });\n        }\n\n        return;\n      } // opening / navigating\n\n\n      if (isEventFromToggle || isEventFromItems) {\n        this.open();\n\n        if (itemElements.length) {\n          switch (key) {\n            case Key.ArrowDown:\n              position = Math.min(position + 1, itemElements.length - 1);\n              break;\n\n            case Key.ArrowUp:\n              if (this._isDropup() && position === -1) {\n                position = itemElements.length - 1;\n                break;\n              }\n\n              position = Math.max(position - 1, 0);\n              break;\n\n            case Key.Home:\n              position = 0;\n              break;\n\n            case Key.End:\n              position = itemElements.length - 1;\n              break;\n          }\n\n          itemElements[position].focus();\n        }\n\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_isDropup\",\n    value: function _isDropup() {\n      return this._elementRef.nativeElement.classList.contains('dropup');\n    }\n  }, {\n    key: \"_isEventFromToggle\",\n    value: function _isEventFromToggle(event) {\n      return this._anchor.getNativeElement().contains(event.target);\n    }\n  }, {\n    key: \"_getMenuElements\",\n    value: function _getMenuElements() {\n      var menu = this._menu;\n\n      if (menu == null) {\n        return [];\n      }\n\n      return menu.menuItems.filter(function (item) {\n        return !item.disabled;\n      }).map(function (item) {\n        return item.elementRef.nativeElement;\n      });\n    }\n  }, {\n    key: \"_positionMenu\",\n    value: function _positionMenu() {\n      var menu = this._menu;\n\n      if (this.isOpen() && menu) {\n        this._applyPlacementClasses(this.display === 'dynamic' ? positionElements(this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement, this.container === 'body') : this._getFirstPlacement(this.placement));\n      }\n    }\n  }, {\n    key: \"_getFirstPlacement\",\n    value: function _getFirstPlacement(placement) {\n      return Array.isArray(placement) ? placement[0] : placement.split(' ')[0];\n    }\n  }, {\n    key: \"_resetContainer\",\n    value: function _resetContainer() {\n      var renderer = this._renderer;\n      var menuElement = this._menuElement;\n\n      if (menuElement) {\n        var dropdownElement = this._elementRef.nativeElement;\n        var dropdownMenuElement = menuElement.nativeElement;\n        renderer.appendChild(dropdownElement, dropdownMenuElement);\n        renderer.removeStyle(dropdownMenuElement, 'position');\n        renderer.removeStyle(dropdownMenuElement, 'transform');\n      }\n\n      if (this._bodyContainer) {\n        renderer.removeChild(this._document.body, this._bodyContainer);\n        this._bodyContainer = null;\n      }\n    }\n  }, {\n    key: \"_applyContainer\",\n    value: function _applyContainer() {\n      var container = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      this._resetContainer();\n\n      if (container === 'body') {\n        var renderer = this._renderer;\n        var dropdownMenuElement = this._menuElement.nativeElement;\n        var bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div'); // Override some styles to have the positionning working\n\n        renderer.setStyle(bodyContainer, 'position', 'absolute');\n        renderer.setStyle(dropdownMenuElement, 'position', 'static');\n        renderer.setStyle(bodyContainer, 'z-index', '1050');\n        renderer.appendChild(bodyContainer, dropdownMenuElement);\n        renderer.appendChild(this._document.body, bodyContainer);\n      }\n    }\n  }, {\n    key: \"_applyPlacementClasses\",\n    value: function _applyPlacementClasses(placement) {\n      var menu = this._menu;\n\n      if (menu) {\n        if (!placement) {\n          placement = this._getFirstPlacement(this.placement);\n        }\n\n        var renderer = this._renderer;\n        var dropdownElement = this._elementRef.nativeElement; // remove the current placement classes\n\n        renderer.removeClass(dropdownElement, 'dropup');\n        renderer.removeClass(dropdownElement, 'dropdown');\n        menu.placement = this.display === 'static' ? null : placement;\n        /*\n        * apply the new placement\n        * in case of top use up-arrow or down-arrow otherwise\n        */\n\n        var dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n        renderer.addClass(dropdownElement, dropdownClass);\n        var bodyContainer = this._bodyContainer;\n\n        if (bodyContainer) {\n          renderer.removeClass(bodyContainer, 'dropup');\n          renderer.removeClass(bodyContainer, 'dropdown');\n          renderer.addClass(bodyContainer, dropdownClass);\n        }\n      }\n    }\n  }]);\n\n  return NgbDropdown;\n}();\n\nNgbDropdown.ɵfac = function NgbDropdown_Factory(t) {\n  return new (t || NgbDropdown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbDropdownConfig), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(NgbNavbar, 8));\n};\n\nNgbDropdown.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbDropdown,\n  selectors: [[\"\", \"ngbDropdown\", \"\"]],\n  contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, true, ElementRef);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menuElement = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbDropdown_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"show\", ctx.isOpen());\n    }\n  },\n  inputs: {\n    _open: [\"open\", \"_open\"],\n    placement: \"placement\",\n    container: \"container\",\n    autoClose: \"autoClose\",\n    display: \"display\"\n  },\n  outputs: {\n    openChange: \"openChange\"\n  },\n  exportAs: [\"ngbDropdown\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbDropdown.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: NgbDropdownConfig\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgbNavbar,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\n__decorate([ContentChild(NgbDropdownMenu, {\n  static: false\n})], NgbDropdown.prototype, \"_menu\", void 0);\n\n__decorate([ContentChild(NgbDropdownMenu, {\n  read: ElementRef,\n  static: false\n})], NgbDropdown.prototype, \"_menuElement\", void 0);\n\n__decorate([ContentChild(NgbDropdownAnchor, {\n  static: false\n})], NgbDropdown.prototype, \"_anchor\", void 0);\n\n__decorate([Input()], NgbDropdown.prototype, \"autoClose\", void 0);\n\n__decorate([Input('open')], NgbDropdown.prototype, \"_open\", void 0);\n\n__decorate([Input()], NgbDropdown.prototype, \"placement\", void 0);\n\n__decorate([Input()], NgbDropdown.prototype, \"container\", void 0);\n\n__decorate([Input()], NgbDropdown.prototype, \"display\", void 0);\n\n__decorate([Output()], NgbDropdown.prototype, \"openChange\", void 0);\n\nNgbDropdown = __decorate([__param(2, Inject(DOCUMENT)), __param(6, Optional())], NgbDropdown);\nvar NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\nvar NgbDropdownModule = function NgbDropdownModule() {\n  _classCallCheck(this, NgbDropdownModule);\n};\n\nNgbDropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbDropdownModule\n});\nNgbDropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbDropdownModule_Factory(t) {\n    return new (t || NgbDropdownModule)();\n  }\n});\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n\nvar NgbModalConfig = function NgbModalConfig() {\n  _classCallCheck(this, NgbModalConfig);\n\n  this.backdrop = true;\n  this.keyboard = true;\n};\n\nNgbModalConfig.ɵfac = function NgbModalConfig_Factory(t) {\n  return new (t || NgbModalConfig)();\n};\n\nNgbModalConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalConfig_Factory() {\n    return new NgbModalConfig();\n  },\n  token: NgbModalConfig,\n  providedIn: \"root\"\n});\n\nvar ContentRef = function ContentRef(nodes, viewRef, componentRef) {\n  _classCallCheck(this, ContentRef);\n\n  this.nodes = nodes;\n  this.viewRef = viewRef;\n  this.componentRef = componentRef;\n};\n\nvar PopupService = /*#__PURE__*/function () {\n  function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver, _applicationRef) {\n    _classCallCheck(this, PopupService);\n\n    this._type = _type;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._applicationRef = _applicationRef;\n  }\n\n  _createClass(PopupService, [{\n    key: \"open\",\n    value: function open(content, context) {\n      if (!this._windowRef) {\n        this._contentRef = this._getContentRef(content, context);\n        this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), this._viewContainerRef.length, this._injector, this._contentRef.nodes);\n      }\n\n      return this._windowRef;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._windowRef) {\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n\n        this._windowRef = null;\n\n        if (this._contentRef.viewRef) {\n          this._applicationRef.detachView(this._contentRef.viewRef);\n\n          this._contentRef.viewRef.destroy();\n\n          this._contentRef = null;\n        }\n      }\n    }\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef(content, context) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        var viewRef = content.createEmbeddedView(context);\n\n        this._applicationRef.attachView(viewRef);\n\n        return new ContentRef([viewRef.rootNodes], viewRef);\n      } else {\n        return new ContentRef([[this._renderer.createText(\"\".concat(content))]]);\n      }\n    }\n  }]);\n\n  return PopupService;\n}();\n\nvar noop = function noop() {};\n\nvar ɵ0$1 = noop;\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n\nvar ScrollBar = /*#__PURE__*/function () {\n  function ScrollBar(_document) {\n    _classCallCheck(this, ScrollBar);\n\n    this._document = _document;\n  }\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n\n\n  _createClass(ScrollBar, [{\n    key: \"compensate\",\n    value: function compensate() {\n      var width = this._getWidth();\n\n      return !this._isPresent(width) ? noop : this._adjustBody(width);\n    }\n    /**\n     * Adds a padding of the given width on the right of the body.\n     *\n     * @return a callback used to revert the padding to its previous value\n     */\n\n  }, {\n    key: \"_adjustBody\",\n    value: function _adjustBody(scrollbarWidth) {\n      var body = this._document.body;\n      var userSetPaddingStyle = body.style.paddingRight;\n      var actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n      body.style['padding-right'] = \"\".concat(actualPadding + scrollbarWidth, \"px\");\n      return function () {\n        return body.style['padding-right'] = userSetPaddingStyle;\n      };\n    }\n    /**\n     * Tells whether a scrollbar is currently present on the body.\n     *\n     * @return true if scrollbar is present, false otherwise\n     */\n\n  }, {\n    key: \"_isPresent\",\n    value: function _isPresent(scrollbarWidth) {\n      var rect = this._document.body.getBoundingClientRect();\n\n      var bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n      var uncertainty = 0.1 * scrollbarWidth;\n      return bodyToViewportGap >= scrollbarWidth - uncertainty;\n    }\n    /**\n     * Calculates and returns the width of a scrollbar.\n     *\n     * @return the width of a scrollbar on this page\n     */\n\n  }, {\n    key: \"_getWidth\",\n    value: function _getWidth() {\n      var measurer = this._document.createElement('div');\n\n      measurer.className = 'modal-scrollbar-measure';\n      var body = this._document.body;\n      body.appendChild(measurer);\n      var width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n      body.removeChild(measurer);\n      return width;\n    }\n  }]);\n\n  return ScrollBar;\n}();\n\nScrollBar.ɵfac = function ScrollBar_Factory(t) {\n  return new (t || ScrollBar)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nScrollBar.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nScrollBar.ɵprov = ɵɵdefineInjectable({\n  factory: function ScrollBar_Factory() {\n    return new ScrollBar(ɵɵinject(DOCUMENT));\n  },\n  token: ScrollBar,\n  providedIn: \"root\"\n});\nScrollBar = __decorate([__param(0, Inject(DOCUMENT))], ScrollBar);\n\nvar NgbModalBackdrop = function NgbModalBackdrop() {\n  _classCallCheck(this, NgbModalBackdrop);\n};\n\nNgbModalBackdrop.ɵfac = function NgbModalBackdrop_Factory(t) {\n  return new (t || NgbModalBackdrop)();\n};\n\nNgbModalBackdrop.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalBackdrop,\n  selectors: [[\"ngb-modal-backdrop\"]],\n  hostAttrs: [2, \"z-index\", \"1050\"],\n  hostVars: 2,\n  hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-backdrop fade show\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n    }\n  },\n  inputs: {\n    backdropClass: \"backdropClass\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function NgbModalBackdrop_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n__decorate([Input()], NgbModalBackdrop.prototype, \"backdropClass\", void 0);\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\n\n\nvar NgbActiveModal = /*#__PURE__*/function () {\n  function NgbActiveModal() {\n    _classCallCheck(this, NgbActiveModal);\n  }\n\n  _createClass(NgbActiveModal, [{\n    key: \"close\",\n\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    value: function close(result) {}\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(reason) {}\n  }]);\n\n  return NgbActiveModal;\n}();\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\n\n\nvar NgbModalRef = /*#__PURE__*/function () {\n  function NgbModalRef(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n    var _this23 = this;\n\n    _classCallCheck(this, NgbModalRef);\n\n    this._windowCmptRef = _windowCmptRef;\n    this._contentRef = _contentRef;\n    this._backdropCmptRef = _backdropCmptRef;\n    this._beforeDismiss = _beforeDismiss;\n\n    _windowCmptRef.instance.dismissEvent.subscribe(function (reason) {\n      _this23.dismiss(reason);\n    });\n\n    this.result = new Promise(function (resolve, reject) {\n      _this23._resolve = resolve;\n      _this23._reject = reject;\n    });\n    this.result.then(null, function () {});\n  }\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n\n\n  _createClass(NgbModalRef, [{\n    key: \"close\",\n\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     */\n    value: function close(result) {\n      if (this._windowCmptRef) {\n        this._resolve(result);\n\n        this._removeModalElements();\n      }\n    }\n  }, {\n    key: \"_dismiss\",\n    value: function _dismiss(reason) {\n      this._reject(reason);\n\n      this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     */\n\n  }, {\n    key: \"dismiss\",\n    value: function dismiss(reason) {\n      var _this24 = this;\n\n      if (this._windowCmptRef) {\n        if (!this._beforeDismiss) {\n          this._dismiss(reason);\n        } else {\n          var dismiss = this._beforeDismiss();\n\n          if (dismiss && dismiss.then) {\n            dismiss.then(function (result) {\n              if (result !== false) {\n                _this24._dismiss(reason);\n              }\n            }, function () {});\n          } else if (dismiss !== false) {\n            this._dismiss(reason);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_removeModalElements\",\n    value: function _removeModalElements() {\n      var windowNativeEl = this._windowCmptRef.location.nativeElement;\n      windowNativeEl.parentNode.removeChild(windowNativeEl);\n\n      this._windowCmptRef.destroy();\n\n      if (this._backdropCmptRef) {\n        var backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n        backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n\n        this._backdropCmptRef.destroy();\n      }\n\n      if (this._contentRef && this._contentRef.viewRef) {\n        this._contentRef.viewRef.destroy();\n      }\n\n      this._windowCmptRef = null;\n      this._backdropCmptRef = null;\n      this._contentRef = null;\n    }\n  }, {\n    key: \"componentInstance\",\n    get: function get() {\n      if (this._contentRef && this._contentRef.componentRef) {\n        return this._contentRef.componentRef.instance;\n      }\n    }\n  }]);\n\n  return NgbModalRef;\n}();\n\nvar ModalDismissReasons;\n\n(function (ModalDismissReasons) {\n  ModalDismissReasons[ModalDismissReasons[\"BACKDROP_CLICK\"] = 0] = \"BACKDROP_CLICK\";\n  ModalDismissReasons[ModalDismissReasons[\"ESC\"] = 1] = \"ESC\";\n})(ModalDismissReasons || (ModalDismissReasons = {}));\n\nvar NgbModalWindow = /*#__PURE__*/function () {\n  function NgbModalWindow(_document, _elRef, _zone) {\n    _classCallCheck(this, NgbModalWindow);\n\n    this._document = _document;\n    this._elRef = _elRef;\n    this._zone = _zone;\n    this._closed$ = new Subject();\n    this.backdrop = true;\n    this.keyboard = true;\n    this.dismissEvent = new EventEmitter();\n  }\n\n  _createClass(NgbModalWindow, [{\n    key: \"dismiss\",\n    value: function dismiss(reason) {\n      this.dismissEvent.emit(reason);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._elWithFocus = this._document.activeElement;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this25 = this;\n\n      var nativeElement = this._elRef.nativeElement;\n\n      this._zone.runOutsideAngular(function () {\n        fromEvent(nativeElement, 'keydown').pipe(takeUntil(_this25._closed$), // tslint:disable-next-line:deprecation\n        filter(function (e) {\n          return e.which === Key.Escape && _this25.keyboard;\n        })).subscribe(function (event) {\n          return requestAnimationFrame(function () {\n            if (!event.defaultPrevented) {\n              _this25._zone.run(function () {\n                return _this25.dismiss(ModalDismissReasons.ESC);\n              });\n            }\n          });\n        }); // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n        // inside the modal dialog and releasing it outside\n\n        var preventClose = false;\n        fromEvent(_this25._dialogEl.nativeElement, 'mousedown').pipe(takeUntil(_this25._closed$), tap(function () {\n          return preventClose = false;\n        }), switchMap(function () {\n          return fromEvent(nativeElement, 'mouseup').pipe(takeUntil(_this25._closed$), take(1));\n        }), filter(function (_ref11) {\n          var target = _ref11.target;\n          return nativeElement === target;\n        })).subscribe(function () {\n          preventClose = true;\n        }); // We're listening to 'click' to dismiss modal on modal window click, except when:\n        // 1. clicking on modal dialog itself\n        // 2. closing was prevented by mousedown/up handlers\n        // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n\n        fromEvent(nativeElement, 'click').pipe(takeUntil(_this25._closed$)).subscribe(function (_ref12) {\n          var target = _ref12.target;\n\n          if (_this25.backdrop === true && nativeElement === target && !preventClose) {\n            _this25._zone.run(function () {\n              return _this25.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n            });\n          }\n\n          preventClose = false;\n        });\n      });\n\n      if (!nativeElement.contains(document.activeElement)) {\n        var autoFocusable = nativeElement.querySelector(\"[ngbAutofocus]\");\n        var firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n        var elementToFocus = autoFocusable || firstFocusable || nativeElement;\n        elementToFocus.focus();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _this26 = this;\n\n      var body = this._document.body;\n      var elWithFocus = this._elWithFocus;\n      var elementToFocus;\n\n      if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n        elementToFocus = elWithFocus;\n      } else {\n        elementToFocus = body;\n      }\n\n      this._zone.runOutsideAngular(function () {\n        setTimeout(function () {\n          return elementToFocus.focus();\n        });\n        _this26._elWithFocus = null;\n      });\n\n      this._closed$.next();\n    }\n  }]);\n\n  return NgbModalWindow;\n}();\n\nNgbModalWindow.ɵfac = function NgbModalWindow_Factory(t) {\n  return new (t || NgbModalWindow)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n};\n\nNgbModalWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbModalWindow,\n  selectors: [[\"ngb-modal-window\"]],\n  viewQuery: function NgbModalWindow_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c31, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._dialogEl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"],\n  hostVars: 4,\n  hostBindings: function NgbModalWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy);\n      ɵngcc0.ɵɵclassMap(\"modal fade show d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n    }\n  },\n  inputs: {\n    backdrop: \"backdrop\",\n    keyboard: \"keyboard\",\n    ariaLabelledBy: \"ariaLabelledBy\",\n    centered: \"centered\",\n    scrollable: \"scrollable\",\n    size: \"size\",\n    windowClass: \"windowClass\"\n  },\n  outputs: {\n    dismissEvent: \"dismiss\"\n  },\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 2,\n  consts: [[\"role\", \"document\"], [\"dialog\", \"\"], [1, \"modal-content\"]],\n  template: function NgbModalWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\") + (ctx.scrollable ? \" modal-dialog-scrollable\" : \"\"));\n    }\n  },\n  styles: [\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"],\n  encapsulation: 2\n});\n\nNgbModalWindow.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\n__decorate([ViewChild('dialog', {\n  static: true\n})], NgbModalWindow.prototype, \"_dialogEl\", void 0);\n\n__decorate([Input()], NgbModalWindow.prototype, \"ariaLabelledBy\", void 0);\n\n__decorate([Input()], NgbModalWindow.prototype, \"backdrop\", void 0);\n\n__decorate([Input()], NgbModalWindow.prototype, \"centered\", void 0);\n\n__decorate([Input()], NgbModalWindow.prototype, \"keyboard\", void 0);\n\n__decorate([Input()], NgbModalWindow.prototype, \"scrollable\", void 0);\n\n__decorate([Input()], NgbModalWindow.prototype, \"size\", void 0);\n\n__decorate([Input()], NgbModalWindow.prototype, \"windowClass\", void 0);\n\n__decorate([Output('dismiss')], NgbModalWindow.prototype, \"dismissEvent\", void 0);\n\nNgbModalWindow = __decorate([__param(0, Inject(DOCUMENT))], NgbModalWindow);\n\nvar NgbModalStack = /*#__PURE__*/function () {\n  function NgbModalStack(_applicationRef, _injector, _document, _scrollBar, _rendererFactory, _ngZone) {\n    var _this27 = this;\n\n    _classCallCheck(this, NgbModalStack);\n\n    this._applicationRef = _applicationRef;\n    this._injector = _injector;\n    this._document = _document;\n    this._scrollBar = _scrollBar;\n    this._rendererFactory = _rendererFactory;\n    this._ngZone = _ngZone;\n    this._activeWindowCmptHasChanged = new Subject();\n    this._ariaHiddenValues = new Map();\n    this._backdropAttributes = ['backdropClass'];\n    this._modalRefs = [];\n    this._windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n    this._windowCmpts = []; // Trap focus on active WindowCmpt\n\n    this._activeWindowCmptHasChanged.subscribe(function () {\n      if (_this27._windowCmpts.length) {\n        var activeWindowCmpt = _this27._windowCmpts[_this27._windowCmpts.length - 1];\n        ngbFocusTrap(_this27._ngZone, activeWindowCmpt.location.nativeElement, _this27._activeWindowCmptHasChanged);\n\n        _this27._revertAriaHidden();\n\n        _this27._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  _createClass(NgbModalStack, [{\n    key: \"open\",\n    value: function open(moduleCFR, contentInjector, content, options) {\n      var _this28 = this;\n\n      var containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n\n      var renderer = this._rendererFactory.createRenderer(null, null);\n\n      var revertPaddingForScrollBar = this._scrollBar.compensate();\n\n      var removeBodyClass = function removeBodyClass() {\n        if (!_this28._modalRefs.length) {\n          renderer.removeClass(_this28._document.body, 'modal-open');\n\n          _this28._revertAriaHidden();\n        }\n      };\n\n      if (!containerEl) {\n        throw new Error(\"The specified modal container \\\"\".concat(options.container || 'body', \"\\\" was not found in the DOM.\"));\n      }\n\n      var activeModal = new NgbActiveModal();\n\n      var contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n      var backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n\n      var windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n\n      var ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n      this._registerModalRef(ngbModalRef);\n\n      this._registerWindowCmpt(windowCmptRef);\n\n      ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n      ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n\n      activeModal.close = function (result) {\n        ngbModalRef.close(result);\n      };\n\n      activeModal.dismiss = function (reason) {\n        ngbModalRef.dismiss(reason);\n      };\n\n      this._applyWindowOptions(windowCmptRef.instance, options);\n\n      if (this._modalRefs.length === 1) {\n        renderer.addClass(this._document.body, 'modal-open');\n      }\n\n      if (backdropCmptRef && backdropCmptRef.instance) {\n        this._applyBackdropOptions(backdropCmptRef.instance, options);\n      }\n\n      return ngbModalRef;\n    }\n  }, {\n    key: \"dismissAll\",\n    value: function dismissAll(reason) {\n      this._modalRefs.forEach(function (ngbModalRef) {\n        return ngbModalRef.dismiss(reason);\n      });\n    }\n  }, {\n    key: \"hasOpenModals\",\n    value: function hasOpenModals() {\n      return this._modalRefs.length > 0;\n    }\n  }, {\n    key: \"_attachBackdrop\",\n    value: function _attachBackdrop(moduleCFR, containerEl) {\n      var backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n      var backdropCmptRef = backdropFactory.create(this._injector);\n\n      this._applicationRef.attachView(backdropCmptRef.hostView);\n\n      containerEl.appendChild(backdropCmptRef.location.nativeElement);\n      return backdropCmptRef;\n    }\n  }, {\n    key: \"_attachWindowComponent\",\n    value: function _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n      var windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n      var windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n\n      this._applicationRef.attachView(windowCmptRef.hostView);\n\n      containerEl.appendChild(windowCmptRef.location.nativeElement);\n      return windowCmptRef;\n    }\n  }, {\n    key: \"_applyWindowOptions\",\n    value: function _applyWindowOptions(windowInstance, options) {\n      this._windowAttributes.forEach(function (optionName) {\n        if (isDefined(options[optionName])) {\n          windowInstance[optionName] = options[optionName];\n        }\n      });\n    }\n  }, {\n    key: \"_applyBackdropOptions\",\n    value: function _applyBackdropOptions(backdropInstance, options) {\n      this._backdropAttributes.forEach(function (optionName) {\n        if (isDefined(options[optionName])) {\n          backdropInstance[optionName] = options[optionName];\n        }\n      });\n    }\n  }, {\n    key: \"_getContentRef\",\n    value: function _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n      if (!content) {\n        return new ContentRef([]);\n      } else if (content instanceof TemplateRef) {\n        return this._createFromTemplateRef(content, activeModal);\n      } else if (isString(content)) {\n        return this._createFromString(content);\n      } else {\n        return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n      }\n    }\n  }, {\n    key: \"_createFromTemplateRef\",\n    value: function _createFromTemplateRef(content, activeModal) {\n      var context = {\n        $implicit: activeModal,\n        close: function close(result) {\n          activeModal.close(result);\n        },\n        dismiss: function dismiss(reason) {\n          activeModal.dismiss(reason);\n        }\n      };\n      var viewRef = content.createEmbeddedView(context);\n\n      this._applicationRef.attachView(viewRef);\n\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n  }, {\n    key: \"_createFromString\",\n    value: function _createFromString(content) {\n      var component = this._document.createTextNode(\"\".concat(content));\n\n      return new ContentRef([[component]]);\n    }\n  }, {\n    key: \"_createFromComponent\",\n    value: function _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n      var contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n      var modalContentInjector = Injector.create({\n        providers: [{\n          provide: NgbActiveModal,\n          useValue: context\n        }],\n        parent: contentInjector\n      });\n      var componentRef = contentCmptFactory.create(modalContentInjector);\n      var componentNativeEl = componentRef.location.nativeElement;\n\n      if (options.scrollable) {\n        componentNativeEl.classList.add('component-host-scrollable');\n      }\n\n      this._applicationRef.attachView(componentRef.hostView); // FIXME: we should here get rid of the component nativeElement\n      // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n\n\n      return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n  }, {\n    key: \"_setAriaHidden\",\n    value: function _setAriaHidden(element) {\n      var _this29 = this;\n\n      var parent = element.parentElement;\n\n      if (parent && element !== this._document.body) {\n        Array.from(parent.children).forEach(function (sibling) {\n          if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n            _this29._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n\n            sibling.setAttribute('aria-hidden', 'true');\n          }\n        });\n\n        this._setAriaHidden(parent);\n      }\n    }\n  }, {\n    key: \"_revertAriaHidden\",\n    value: function _revertAriaHidden() {\n      this._ariaHiddenValues.forEach(function (value, element) {\n        if (value) {\n          element.setAttribute('aria-hidden', value);\n        } else {\n          element.removeAttribute('aria-hidden');\n        }\n      });\n\n      this._ariaHiddenValues.clear();\n    }\n  }, {\n    key: \"_registerModalRef\",\n    value: function _registerModalRef(ngbModalRef) {\n      var _this30 = this;\n\n      var unregisterModalRef = function unregisterModalRef() {\n        var index = _this30._modalRefs.indexOf(ngbModalRef);\n\n        if (index > -1) {\n          _this30._modalRefs.splice(index, 1);\n        }\n      };\n\n      this._modalRefs.push(ngbModalRef);\n\n      ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n  }, {\n    key: \"_registerWindowCmpt\",\n    value: function _registerWindowCmpt(ngbWindowCmpt) {\n      var _this31 = this;\n\n      this._windowCmpts.push(ngbWindowCmpt);\n\n      this._activeWindowCmptHasChanged.next();\n\n      ngbWindowCmpt.onDestroy(function () {\n        var index = _this31._windowCmpts.indexOf(ngbWindowCmpt);\n\n        if (index > -1) {\n          _this31._windowCmpts.splice(index, 1);\n\n          _this31._activeWindowCmptHasChanged.next();\n        }\n      });\n    }\n  }]);\n\n  return NgbModalStack;\n}();\n\nNgbModalStack.ɵfac = function NgbModalStack_Factory(t) {\n  return new (t || NgbModalStack)(ɵngcc0.ɵɵinject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ScrollBar), ɵngcc0.ɵɵinject(ɵngcc0.RendererFactory2), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nNgbModalStack.ctorParameters = function () {\n  return [{\n    type: ApplicationRef\n  }, {\n    type: Injector\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ScrollBar\n  }, {\n    type: RendererFactory2\n  }, {\n    type: NgZone\n  }];\n};\n\nNgbModalStack.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModalStack_Factory() {\n    return new NgbModalStack(ɵɵinject(ApplicationRef), ɵɵinject(INJECTOR), ɵɵinject(DOCUMENT), ɵɵinject(ScrollBar), ɵɵinject(RendererFactory2), ɵɵinject(NgZone));\n  },\n  token: NgbModalStack,\n  providedIn: \"root\"\n});\nNgbModalStack = __decorate([__param(2, Inject(DOCUMENT))], NgbModalStack);\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n\nvar NgbModal = /*#__PURE__*/function () {\n  function NgbModal(_moduleCFR, _injector, _modalStack, _config) {\n    _classCallCheck(this, NgbModal);\n\n    this._moduleCFR = _moduleCFR;\n    this._injector = _injector;\n    this._modalStack = _modalStack;\n    this._config = _config;\n  }\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n\n\n  _createClass(NgbModal, [{\n    key: \"open\",\n    value: function open(content) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var combinedOptions = Object.assign({}, this._config, options);\n      return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * @since 3.1.0\n     */\n\n  }, {\n    key: \"dismissAll\",\n    value: function dismissAll(reason) {\n      this._modalStack.dismissAll(reason);\n    }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * @since 3.3.0\n     */\n\n  }, {\n    key: \"hasOpenModals\",\n    value: function hasOpenModals() {\n      return this._modalStack.hasOpenModals();\n    }\n  }]);\n\n  return NgbModal;\n}();\n\nNgbModal.ɵfac = function NgbModal_Factory(t) {\n  return new (t || NgbModal)(ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(NgbModalStack), ɵngcc0.ɵɵinject(NgbModalConfig));\n};\n\nNgbModal.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }, {\n    type: Injector\n  }, {\n    type: NgbModalStack\n  }, {\n    type: NgbModalConfig\n  }];\n};\n\nNgbModal.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbModal_Factory() {\n    return new NgbModal(ɵɵinject(ComponentFactoryResolver), ɵɵinject(INJECTOR), ɵɵinject(NgbModalStack), ɵɵinject(NgbModalConfig));\n  },\n  token: NgbModal,\n  providedIn: \"root\"\n});\n\nvar NgbModalModule = function NgbModalModule() {\n  _classCallCheck(this, NgbModalModule);\n};\n\nNgbModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModalModule\n});\nNgbModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModalModule_Factory(t) {\n    return new (t || NgbModalModule)();\n  },\n  providers: [NgbModal]\n});\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n\nvar NgbNavConfig = function NgbNavConfig() {\n  _classCallCheck(this, NgbNavConfig);\n\n  this.destroyOnHide = true;\n  this.orientation = 'horizontal';\n  this.roles = 'tablist';\n};\n\nNgbNavConfig.ɵfac = function NgbNavConfig_Factory(t) {\n  return new (t || NgbNavConfig)();\n};\n\nNgbNavConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbNavConfig_Factory() {\n    return new NgbNavConfig();\n  },\n  token: NgbNavConfig,\n  providedIn: \"root\"\n});\n\nvar isValidNavId = function isValidNavId(id) {\n  return isDefined(id) && id !== '';\n};\n\nvar ɵ0$2 = isValidNavId;\nvar navCounter = 0;\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n\nvar NgbNavContent = function NgbNavContent(templateRef) {\n  _classCallCheck(this, NgbNavContent);\n\n  this.templateRef = templateRef;\n};\n\nNgbNavContent.ɵfac = function NgbNavContent_Factory(t) {\n  return new (t || NgbNavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbNavContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavContent,\n  selectors: [[\"ng-template\", \"ngbNavContent\", \"\"]]\n});\n\nNgbNavContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n\n\nvar NgbNavItem = /*#__PURE__*/function () {\n  function NgbNavItem(nav, elementRef) {\n    _classCallCheck(this, NgbNavItem);\n\n    this.elementRef = elementRef;\n    /**\n     * If `true`, the current nav item is disabled and can't be toggled by user.\n     *\n     * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n     */\n\n    this.disabled = false; // TODO: cf https://github.com/angular/angular/issues/30106\n\n    this._nav = nav;\n  }\n\n  _createClass(NgbNavItem, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.contentTpl = this.contentTpls.first;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!isDefined(this.domId)) {\n        this.domId = \"ngb-nav-\".concat(navCounter++);\n      }\n    }\n  }, {\n    key: \"isPanelInDom\",\n    value: function isPanelInDom() {\n      return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._nav.activeId === this.id;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return isValidNavId(this._id) ? this._id : this.domId;\n    }\n  }, {\n    key: \"panelDomId\",\n    get: function get() {\n      return \"\".concat(this.domId, \"-panel\");\n    }\n  }]);\n\n  return NgbNavItem;\n}();\n\nNgbNavItem.ɵfac = function NgbNavItem_Factory(t) {\n  return new (t || NgbNavItem)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return NgbNav;\n  })), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNgbNavItem.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavItem,\n  selectors: [[\"\", \"ngbNavItem\", \"\"]],\n  contentQueries: function NgbNavItem_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavContent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgbNavItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"nav-item\", true);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    domId: \"domId\",\n    destroyOnHide: \"destroyOnHide\",\n    _id: [\"ngbNavItem\", \"_id\"]\n  },\n  exportAs: [\"ngbNavItem\"]\n});\n\nNgbNavItem.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return NgbNav;\n      })]\n    }]\n  }, {\n    type: ElementRef\n  }];\n};\n\n__decorate([Input()], NgbNavItem.prototype, \"destroyOnHide\", void 0);\n\n__decorate([Input()], NgbNavItem.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgbNavItem.prototype, \"domId\", void 0);\n\n__decorate([Input('ngbNavItem')], NgbNavItem.prototype, \"_id\", void 0);\n\n__decorate([ContentChildren(NgbNavContent, {\n  descendants: false\n})], NgbNavItem.prototype, \"contentTpls\", void 0);\n\nNgbNavItem = __decorate([__param(0, Inject(forwardRef(function () {\n  return NgbNav;\n})))], NgbNavItem);\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n\nvar NgbNav = /*#__PURE__*/function () {\n  function NgbNav(role, config, _cd) {\n    _classCallCheck(this, NgbNav);\n\n    this.role = role;\n    this._cd = _cd;\n    /**\n     * The event emitted after the active nav changes\n     * The payload of the event is the newly active nav id\n     *\n     * If you want to prevent nav change, you should use `(navChange)` event\n     */\n\n    this.activeIdChange = new EventEmitter();\n    /**\n     * The nav change event emitted right before the nav change happens on user click.\n     *\n     * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n     *\n     * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n     */\n\n    this.navChange = new EventEmitter();\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  _createClass(NgbNav, [{\n    key: \"click\",\n    value: function click(item) {\n      if (!item.disabled) {\n        this._updateActiveId(item.id);\n      }\n    }\n    /**\n     * Selects the nav with the given id and shows its associated pane.\n     * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n     */\n\n  }, {\n    key: \"select\",\n    value: function select(id) {\n      this._updateActiveId(id, false);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (!isDefined(this.activeId)) {\n        var _nextId = this.items.first ? this.items.first.id : null;\n\n        if (isValidNavId(_nextId)) {\n          this._updateActiveId(_nextId, false);\n\n          this._cd.detectChanges();\n        }\n      }\n    }\n  }, {\n    key: \"_updateActiveId\",\n    value: function _updateActiveId(nextId) {\n      var emitNavChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (this.activeId !== nextId) {\n        var defaultPrevented = false;\n\n        if (emitNavChange) {\n          this.navChange.emit({\n            activeId: this.activeId,\n            nextId: nextId,\n            preventDefault: function preventDefault() {\n              defaultPrevented = true;\n            }\n          });\n        }\n\n        if (!defaultPrevented) {\n          this.activeId = nextId;\n          this.activeIdChange.emit(nextId);\n        }\n      }\n    }\n  }]);\n\n  return NgbNav;\n}();\n\nNgbNav.ɵfac = function NgbNav_Factory(t) {\n  return new (t || NgbNav)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbNav.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNav,\n  selectors: [[\"\", \"ngbNav\", \"\"]],\n  contentQueries: function NgbNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbNavItem, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function NgbNav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.orientation === \"vertical\" && ctx.roles === \"tablist\" ? \"vertical\" : undefined)(\"role\", ctx.role ? ctx.role : ctx.roles ? \"tablist\" : undefined);\n      ɵngcc0.ɵɵclassProp(\"nav\", true)(\"flex-column\", ctx.orientation === \"vertical\");\n    }\n  },\n  inputs: {\n    destroyOnHide: \"destroyOnHide\",\n    orientation: \"orientation\",\n    roles: \"roles\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    activeIdChange: \"activeIdChange\",\n    navChange: \"navChange\"\n  },\n  exportAs: [\"ngbNav\"]\n});\n\nNgbNav.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: NgbNavConfig\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], NgbNav.prototype, \"activeId\", void 0);\n\n__decorate([Output()], NgbNav.prototype, \"activeIdChange\", void 0);\n\n__decorate([Input()], NgbNav.prototype, \"destroyOnHide\", void 0);\n\n__decorate([Input()], NgbNav.prototype, \"orientation\", void 0);\n\n__decorate([Input()], NgbNav.prototype, \"roles\", void 0);\n\n__decorate([ContentChildren(NgbNavItem)], NgbNav.prototype, \"items\", void 0);\n\n__decorate([Output()], NgbNav.prototype, \"navChange\", void 0);\n\nNgbNav = __decorate([__param(0, Attribute('role'))], NgbNav);\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n\nvar NgbNavLink = /*#__PURE__*/function () {\n  function NgbNavLink(role, navItem, nav) {\n    _classCallCheck(this, NgbNavLink);\n\n    this.role = role;\n    this.navItem = navItem;\n    this.nav = nav;\n  }\n\n  _createClass(NgbNavLink, [{\n    key: \"hasNavItemClass\",\n    value: function hasNavItemClass() {\n      // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n      return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n    }\n  }]);\n\n  return NgbNavLink;\n}();\n\nNgbNavLink.ɵfac = function NgbNavLink_Factory(t) {\n  return new (t || NgbNavLink)(ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(NgbNavItem), ɵngcc0.ɵɵdirectiveInject(NgbNav));\n};\n\nNgbNavLink.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbNavLink,\n  selectors: [[\"a\", \"ngbNavLink\", \"\"]],\n  hostAttrs: [\"href\", \"\"],\n  hostVars: 14,\n  hostBindings: function NgbNavLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function NgbNavLink_click_HostBindingHandler($event) {\n        ctx.nav.click(ctx.navItem);\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.navItem.domId);\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role ? ctx.role : ctx.nav.roles ? \"tab\" : undefined)(\"tabindex\", ctx.navItem.disabled ? -1 : undefined)(\"aria-controls\", ctx.navItem.isPanelInDom() ? ctx.navItem.panelDomId : null)(\"aria-selected\", ctx.navItem.active)(\"aria-disabled\", ctx.navItem.disabled);\n      ɵngcc0.ɵɵclassProp(\"nav-link\", true)(\"nav-item\", ctx.hasNavItemClass())(\"active\", ctx.navItem.active)(\"disabled\", ctx.navItem.disabled);\n    }\n  }\n});\n\nNgbNavLink.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['role']\n    }]\n  }, {\n    type: NgbNavItem\n  }, {\n    type: NgbNav\n  }];\n};\n\nNgbNavLink = __decorate([__param(0, Attribute('role'))], NgbNavLink);\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n\nvar NgbNavOutlet = function NgbNavOutlet() {\n  _classCallCheck(this, NgbNavOutlet);\n};\n\nNgbNavOutlet.ɵfac = function NgbNavOutlet_Factory(t) {\n  return new (t || NgbNavOutlet)();\n};\n\nNgbNavOutlet.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbNavOutlet,\n  selectors: [[\"\", \"ngbNavOutlet\", \"\"]],\n  hostVars: 2,\n  hostBindings: function NgbNavOutlet_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"tab-content\", true);\n    }\n  },\n  inputs: {\n    paneRole: \"paneRole\",\n    nav: [\"ngbNavOutlet\", \"nav\"]\n  },\n  attrs: _c32,\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"tab-pane\", 3, \"id\", \"active\", 4, \"ngIf\"], [1, \"tab-pane\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbNavOutlet_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbNavOutlet_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.nav.items);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n__decorate([Input()], NgbNavOutlet.prototype, \"paneRole\", void 0);\n\n__decorate([Input('ngbNavOutlet')], NgbNavOutlet.prototype, \"nav\", void 0);\n\nvar NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\nvar NgbNavModule = function NgbNavModule() {\n  _classCallCheck(this, NgbNavModule);\n};\n\nNgbNavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbNavModule\n});\nNgbNavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbNavModule_Factory(t) {\n    return new (t || NgbNavModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n\nvar NgbPaginationConfig = function NgbPaginationConfig() {\n  _classCallCheck(this, NgbPaginationConfig);\n\n  this.disabled = false;\n  this.boundaryLinks = false;\n  this.directionLinks = true;\n  this.ellipses = true;\n  this.maxSize = 0;\n  this.pageSize = 10;\n  this.rotate = false;\n};\n\nNgbPaginationConfig.ɵfac = function NgbPaginationConfig_Factory(t) {\n  return new (t || NgbPaginationConfig)();\n};\n\nNgbPaginationConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPaginationConfig_Factory() {\n    return new NgbPaginationConfig();\n  },\n  token: NgbPaginationConfig,\n  providedIn: \"root\"\n});\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n\nvar NgbPaginationEllipsis = function NgbPaginationEllipsis(templateRef) {\n  _classCallCheck(this, NgbPaginationEllipsis);\n\n  this.templateRef = templateRef;\n};\n\nNgbPaginationEllipsis.ɵfac = function NgbPaginationEllipsis_Factory(t) {\n  return new (t || NgbPaginationEllipsis)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationEllipsis.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationEllipsis,\n  selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]]\n});\n\nNgbPaginationEllipsis.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n\n\nvar NgbPaginationFirst = function NgbPaginationFirst(templateRef) {\n  _classCallCheck(this, NgbPaginationFirst);\n\n  this.templateRef = templateRef;\n};\n\nNgbPaginationFirst.ɵfac = function NgbPaginationFirst_Factory(t) {\n  return new (t || NgbPaginationFirst)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationFirst.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationFirst,\n  selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]]\n});\n\nNgbPaginationFirst.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n\n\nvar NgbPaginationLast = function NgbPaginationLast(templateRef) {\n  _classCallCheck(this, NgbPaginationLast);\n\n  this.templateRef = templateRef;\n};\n\nNgbPaginationLast.ɵfac = function NgbPaginationLast_Factory(t) {\n  return new (t || NgbPaginationLast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationLast.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationLast,\n  selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]]\n});\n\nNgbPaginationLast.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n\n\nvar NgbPaginationNext = function NgbPaginationNext(templateRef) {\n  _classCallCheck(this, NgbPaginationNext);\n\n  this.templateRef = templateRef;\n};\n\nNgbPaginationNext.ɵfac = function NgbPaginationNext_Factory(t) {\n  return new (t || NgbPaginationNext)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNext,\n  selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]]\n});\n\nNgbPaginationNext.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n\n\nvar NgbPaginationNumber = function NgbPaginationNumber(templateRef) {\n  _classCallCheck(this, NgbPaginationNumber);\n\n  this.templateRef = templateRef;\n};\n\nNgbPaginationNumber.ɵfac = function NgbPaginationNumber_Factory(t) {\n  return new (t || NgbPaginationNumber)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationNumber.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationNumber,\n  selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]]\n});\n\nNgbPaginationNumber.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n\n\nvar NgbPaginationPrevious = function NgbPaginationPrevious(templateRef) {\n  _classCallCheck(this, NgbPaginationPrevious);\n\n  this.templateRef = templateRef;\n};\n\nNgbPaginationPrevious.ɵfac = function NgbPaginationPrevious_Factory(t) {\n  return new (t || NgbPaginationPrevious)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbPaginationPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPaginationPrevious,\n  selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]]\n});\n\nNgbPaginationPrevious.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n\n\nvar NgbPagination = /*#__PURE__*/function () {\n  function NgbPagination(config) {\n    _classCallCheck(this, NgbPagination);\n\n    this.pageCount = 0;\n    this.pages = [];\n    /**\n     *  The current page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.page = 1;\n    /**\n     *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n     *\n     *  Event payload is the number of the newly selected page.\n     *\n     *  Page numbers start with `1`.\n     */\n\n    this.pageChange = new EventEmitter(true);\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  _createClass(NgbPagination, [{\n    key: \"hasPrevious\",\n    value: function hasPrevious() {\n      return this.page > 1;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.page < this.pageCount;\n    }\n  }, {\n    key: \"nextDisabled\",\n    value: function nextDisabled() {\n      return !this.hasNext() || this.disabled;\n    }\n  }, {\n    key: \"previousDisabled\",\n    value: function previousDisabled() {\n      return !this.hasPrevious() || this.disabled;\n    }\n  }, {\n    key: \"selectPage\",\n    value: function selectPage(pageNumber) {\n      this._updatePages(pageNumber);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this._updatePages(this.page);\n    }\n  }, {\n    key: \"isEllipsis\",\n    value: function isEllipsis(pageNumber) {\n      return pageNumber === -1;\n    }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     */\n\n  }, {\n    key: \"_applyEllipses\",\n    value: function _applyEllipses(start, end) {\n      if (this.ellipses) {\n        if (start > 0) {\n          // The first page will always be included. If the displayed range\n          // starts after the third page, then add ellipsis. But if the range\n          // starts on the third page, then add the second page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (start > 2) {\n            this.pages.unshift(-1);\n          } else if (start === 2) {\n            this.pages.unshift(2);\n          }\n\n          this.pages.unshift(1);\n        }\n\n        if (end < this.pageCount) {\n          // The last page will always be included. If the displayed range\n          // ends before the third-last page, then add ellipsis. But if the range\n          // ends on third-last page, then add the second-last page instead of\n          // an ellipsis, because the ellipsis would only hide a single page.\n          if (end < this.pageCount - 2) {\n            this.pages.push(-1);\n          } else if (end === this.pageCount - 2) {\n            this.pages.push(this.pageCount - 1);\n          }\n\n          this.pages.push(this.pageCount);\n        }\n      }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     */\n\n  }, {\n    key: \"_applyRotation\",\n    value: function _applyRotation() {\n      var start = 0;\n      var end = this.pageCount;\n      var leftOffset = Math.floor(this.maxSize / 2);\n      var rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n      if (this.page <= leftOffset) {\n        // very beginning, no rotation -> [0..maxSize]\n        end = this.maxSize;\n      } else if (this.pageCount - this.page < leftOffset) {\n        // very end, no rotation -> [len-maxSize..len]\n        start = this.pageCount - this.maxSize;\n      } else {\n        // rotate\n        start = this.page - leftOffset - 1;\n        end = this.page + rightOffset;\n      }\n\n      return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     */\n\n  }, {\n    key: \"_applyPagination\",\n    value: function _applyPagination() {\n      var page = Math.ceil(this.page / this.maxSize) - 1;\n      var start = page * this.maxSize;\n      var end = start + this.maxSize;\n      return [start, end];\n    }\n  }, {\n    key: \"_setPageInRange\",\n    value: function _setPageInRange(newPageNo) {\n      var prevPageNo = this.page;\n      this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n      if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n        this.pageChange.emit(this.page);\n      }\n    }\n  }, {\n    key: \"_updatePages\",\n    value: function _updatePages(newPage) {\n      this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n      if (!isNumber(this.pageCount)) {\n        this.pageCount = 0;\n      } // fill-in model needed to render pages\n\n\n      this.pages.length = 0;\n\n      for (var i = 1; i <= this.pageCount; i++) {\n        this.pages.push(i);\n      } // set page within 1..max range\n\n\n      this._setPageInRange(newPage); // apply maxSize if necessary\n\n\n      if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n        var start = 0;\n        var end = this.pageCount; // either paginating or rotating page numbers\n\n        if (this.rotate) {\n          var _this$_applyRotation = this._applyRotation();\n\n          var _this$_applyRotation2 = _slicedToArray(_this$_applyRotation, 2);\n\n          start = _this$_applyRotation2[0];\n          end = _this$_applyRotation2[1];\n        } else {\n          var _this$_applyPaginatio = this._applyPagination();\n\n          var _this$_applyPaginatio2 = _slicedToArray(_this$_applyPaginatio, 2);\n\n          start = _this$_applyPaginatio2[0];\n          end = _this$_applyPaginatio2[1];\n        }\n\n        this.pages = this.pages.slice(start, end); // adding ellipses\n\n        this._applyEllipses(start, end);\n      }\n    }\n  }]);\n\n  return NgbPagination;\n}();\n\nNgbPagination.ɵfac = function NgbPagination_Factory(t) {\n  return new (t || NgbPagination)(ɵngcc0.ɵɵdirectiveInject(NgbPaginationConfig));\n};\n\nNgbPagination.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPagination,\n  selectors: [[\"ngb-pagination\"]],\n  contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"navigation\"],\n  inputs: {\n    page: \"page\",\n    disabled: \"disabled\",\n    boundaryLinks: \"boundaryLinks\",\n    directionLinks: \"directionLinks\",\n    ellipses: \"ellipses\",\n    maxSize: \"maxSize\",\n    pageSize: \"pageSize\",\n    rotate: \"rotate\",\n    size: \"size\",\n    collectionSize: \"collectionSize\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 18,\n  vars: 7,\n  consts: function consts() {\n    var i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35 = goog.getMsg(\"\\xAB\\xAB\");\n      i18n_34 = MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__35;\n    } else {\n      i18n_34 = $localize(_templateObject13());\n    }\n\n    var i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37 = goog.getMsg(\"\\xAB\");\n      i18n_36 = MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__37;\n    } else {\n      i18n_36 = $localize(_templateObject14());\n    }\n\n    var i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39 = goog.getMsg(\"\\xBB\");\n      i18n_38 = MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__39;\n    } else {\n      i18n_38 = $localize(_templateObject15());\n    }\n\n    var i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41 = goog.getMsg(\"\\xBB\\xBB\");\n      i18n_40 = MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__41;\n    } else {\n      i18n_40 = $localize(_templateObject16());\n    }\n\n    var i18n_42;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__43 = goog.getMsg(\"First\");\n      i18n_42 = MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__43;\n    } else {\n      i18n_42 = $localize(_templateObject17());\n    }\n\n    var i18n_45;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__46 = goog.getMsg(\"Previous\");\n      i18n_45 = MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__46;\n    } else {\n      i18n_45 = $localize(_templateObject18());\n    }\n\n    var i18n_50;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51 = goog.getMsg(\"Next\");\n      i18n_50 = MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__51;\n    } else {\n      i18n_50 = $localize(_templateObject19());\n    }\n\n    var i18n_52;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53 = goog.getMsg(\"Last\");\n      i18n_52 = MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__53;\n    } else {\n      i18n_52 = $localize(_templateObject20());\n    }\n\n    return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], i18n_34, i18n_36, i18n_38, i18n_40, [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [1, \"page-item\"], [\"aria-label\", i18n_42, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-label\", i18n_45, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"class\", \"page-link\", \"tabindex\", \"-1\", \"aria-disabled\", \"true\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"aria-disabled\", \"true\", 1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_50, \"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_52, \"href\", \"\", 1, \"page-link\", 3, \"click\"]];\n  },\n  template: function NgbPagination_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(10, NgbPagination_ng_template_10_Template, 2, 2, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementStart(12, \"ul\");\n      ɵngcc0.ɵɵtemplate(13, NgbPagination_li_13_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(14, NgbPagination_li_14_Template, 3, 8, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(15, NgbPagination_li_15_Template, 3, 7, \"li\", 7);\n      ɵngcc0.ɵɵtemplate(16, NgbPagination_li_16_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵtemplate(17, NgbPagination_li_17_Template, 3, 9, \"li\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(12);\n      ɵngcc0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbPagination.ctorParameters = function () {\n  return [{\n    type: NgbPaginationConfig\n  }];\n};\n\n__decorate([ContentChild(NgbPaginationEllipsis, {\n  static: false\n})], NgbPagination.prototype, \"tplEllipsis\", void 0);\n\n__decorate([ContentChild(NgbPaginationFirst, {\n  static: false\n})], NgbPagination.prototype, \"tplFirst\", void 0);\n\n__decorate([ContentChild(NgbPaginationLast, {\n  static: false\n})], NgbPagination.prototype, \"tplLast\", void 0);\n\n__decorate([ContentChild(NgbPaginationNext, {\n  static: false\n})], NgbPagination.prototype, \"tplNext\", void 0);\n\n__decorate([ContentChild(NgbPaginationNumber, {\n  static: false\n})], NgbPagination.prototype, \"tplNumber\", void 0);\n\n__decorate([ContentChild(NgbPaginationPrevious, {\n  static: false\n})], NgbPagination.prototype, \"tplPrevious\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"disabled\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"boundaryLinks\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"directionLinks\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"ellipses\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"rotate\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"collectionSize\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"maxSize\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"page\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"pageSize\", void 0);\n\n__decorate([Output()], NgbPagination.prototype, \"pageChange\", void 0);\n\n__decorate([Input()], NgbPagination.prototype, \"size\", void 0);\n\nvar DIRECTIVES = [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n\nvar NgbPaginationModule = function NgbPaginationModule() {\n  _classCallCheck(this, NgbPaginationModule);\n};\n\nNgbPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPaginationModule\n});\nNgbPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPaginationModule_Factory(t) {\n    return new (t || NgbPaginationModule)();\n  },\n  imports: [[CommonModule]]\n});\n\nvar Trigger = /*#__PURE__*/function () {\n  function Trigger(open, close) {\n    _classCallCheck(this, Trigger);\n\n    this.open = open;\n    this.close = close;\n\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  _createClass(Trigger, [{\n    key: \"isManual\",\n    value: function isManual() {\n      return this.open === 'manual' || this.close === 'manual';\n    }\n  }]);\n\n  return Trigger;\n}();\n\nvar DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout']\n};\n\nfunction parseTriggers(triggers) {\n  var aliases = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ALIASES;\n  var trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  var parsedTriggers = trimmedTriggers.split(/\\s+/).map(function (trigger) {\n    return trigger.split(':');\n  }).map(function (triggerPair) {\n    var alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n  var manualTriggers = parsedTriggers.filter(function (triggerPair) {\n    return triggerPair.isManual();\n  });\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n  return new Observable(function (subscriber) {\n    var listeners = [];\n\n    var openFn = function openFn() {\n      return subscriber.next(true);\n    };\n\n    var closeFn = function closeFn() {\n      return subscriber.next(false);\n    };\n\n    var toggleFn = function toggleFn() {\n      return subscriber.next(!isOpenedFn());\n    };\n\n    triggers.forEach(function (trigger) {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n    return function () {\n      listeners.forEach(function (unsubscribeFn) {\n        return unsubscribeFn();\n      });\n    };\n  });\n}\n\nvar delayOrNoop = function delayOrNoop(time) {\n  return time > 0 ? delay(time) : function (a) {\n    return a;\n  };\n};\n\nvar ɵ0$3 = delayOrNoop;\n\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n  return function (input$) {\n    var pending = null;\n    var filteredInput$ = input$.pipe(map(function (open) {\n      return {\n        open: open\n      };\n    }), filter(function (event) {\n      var currentlyOpen = isOpenedFn();\n\n      if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n        pending = event;\n        return true;\n      }\n\n      if (pending && pending.open !== event.open) {\n        pending = null;\n      }\n\n      return false;\n    }), share());\n    var delayedOpen$ = filteredInput$.pipe(filter(function (event) {\n      return event.open;\n    }), delayOrNoop(openDelay));\n    var delayedClose$ = filteredInput$.pipe(filter(function (event) {\n      return !event.open;\n    }), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$).pipe(filter(function (event) {\n      if (event === pending) {\n        pending = null;\n        return event.open !== isOpenedFn();\n      }\n\n      return false;\n    }), map(function (event) {\n      return event.open;\n    }));\n  };\n}\n\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn) {\n  var openDelay = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n  var closeDelay = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n  var parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return function () {};\n  }\n\n  var subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn).pipe(triggerDelay(openDelay, closeDelay, isOpenedFn)).subscribe(function (open) {\n    return open ? openFn() : closeFn();\n  });\n  return function () {\n    return subscription.unsubscribe();\n  };\n}\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n\n\nvar NgbPopoverConfig = function NgbPopoverConfig() {\n  _classCallCheck(this, NgbPopoverConfig);\n\n  this.autoClose = true;\n  this.placement = 'auto';\n  this.triggers = 'click';\n  this.disablePopover = false;\n  this.openDelay = 0;\n  this.closeDelay = 0;\n};\n\nNgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) {\n  return new (t || NgbPopoverConfig)();\n};\n\nNgbPopoverConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbPopoverConfig_Factory() {\n    return new NgbPopoverConfig();\n  },\n  token: NgbPopoverConfig,\n  providedIn: \"root\"\n});\nvar nextId$3 = 0;\n\nvar NgbPopoverWindow = /*#__PURE__*/function () {\n  function NgbPopoverWindow() {\n    _classCallCheck(this, NgbPopoverWindow);\n  }\n\n  _createClass(NgbPopoverWindow, [{\n    key: \"isTitleTemplate\",\n    value: function isTitleTemplate() {\n      return this.title instanceof TemplateRef;\n    }\n  }]);\n\n  return NgbPopoverWindow;\n}();\n\nNgbPopoverWindow.ɵfac = function NgbPopoverWindow_Factory(t) {\n  return new (t || NgbPopoverWindow)();\n};\n\nNgbPopoverWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbPopoverWindow,\n  selectors: [[\"ngb-popover-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 3,\n  hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n    }\n  },\n  inputs: {\n    title: \"title\",\n    id: \"id\",\n    popoverClass: \"popoverClass\",\n    context: \"context\"\n  },\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbPopoverWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title != null);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Input()], NgbPopoverWindow.prototype, \"title\", void 0);\n\n__decorate([Input()], NgbPopoverWindow.prototype, \"id\", void 0);\n\n__decorate([Input()], NgbPopoverWindow.prototype, \"popoverClass\", void 0);\n\n__decorate([Input()], NgbPopoverWindow.prototype, \"context\", void 0);\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n\n\nvar NgbPopover = /*#__PURE__*/function () {\n  function NgbPopover(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    var _this32 = this;\n\n    _classCallCheck(this, NgbPopover);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the popover is shown. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the popover is hidden. Contains no payload.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbPopoverWindowId = \"ngb-popover-\".concat(nextId$3++);\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      if (_this32._windowRef) {\n        positionElements(_this32._elementRef.nativeElement, _this32._windowRef.location.nativeElement, _this32.placement, _this32.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  _createClass(NgbPopover, [{\n    key: \"_isDisabled\",\n    value: function _isDisabled() {\n      if (this.disablePopover) {\n        return true;\n      }\n\n      if (!this.ngbPopover && !this.popoverTitle) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     */\n\n  }, {\n    key: \"open\",\n    value: function open(context) {\n      var _this33 = this;\n\n      if (!this._windowRef && !this._isDisabled()) {\n        this._windowRef = this._popupService.open(this.ngbPopover, context);\n        this._windowRef.instance.title = this.popoverTitle;\n        this._windowRef.instance.context = context;\n        this._windowRef.instance.popoverClass = this.popoverClass;\n        this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        } // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening popover from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n        this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because popover won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the popover from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n\n\n        this._windowRef.changeDetectorRef.markForCheck();\n\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this33.close();\n        }, this.hidden, [this._windowRef.location.nativeElement]);\n        this.shown.emit();\n      }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._windowRef) {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n        this._popupService.close();\n\n        this._windowRef = null;\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref13) {\n      var ngbPopover = _ref13.ngbPopover,\n          popoverTitle = _ref13.popoverTitle,\n          disablePopover = _ref13.disablePopover,\n          popoverClass = _ref13.popoverClass;\n\n      if (popoverClass && this.isOpen()) {\n        this._windowRef.instance.popoverClass = popoverClass.currentValue;\n      } // close popover if title and content become empty, or disablePopover set to true\n\n\n      if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n        this.close();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }]);\n\n  return NgbPopover;\n}();\n\nNgbPopover.ɵfac = function NgbPopover_Factory(t) {\n  return new (t || NgbPopover)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbPopoverConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbPopover.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbPopover,\n  selectors: [[\"\", \"ngbPopover\", \"\"]],\n  inputs: {\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disablePopover: \"disablePopover\",\n    popoverClass: \"popoverClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbPopover: \"ngbPopover\",\n    popoverTitle: \"popoverTitle\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbPopover\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbPopover.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: NgbPopoverConfig\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n\n__decorate([Input()], NgbPopover.prototype, \"autoClose\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"ngbPopover\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"popoverTitle\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"placement\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"triggers\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"container\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"disablePopover\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"popoverClass\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"openDelay\", void 0);\n\n__decorate([Input()], NgbPopover.prototype, \"closeDelay\", void 0);\n\n__decorate([Output()], NgbPopover.prototype, \"shown\", void 0);\n\n__decorate([Output()], NgbPopover.prototype, \"hidden\", void 0);\n\nNgbPopover = __decorate([__param(7, Inject(DOCUMENT))], NgbPopover);\n\nvar NgbPopoverModule = function NgbPopoverModule() {\n  _classCallCheck(this, NgbPopoverModule);\n};\n\nNgbPopoverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbPopoverModule\n});\nNgbPopoverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbPopoverModule_Factory(t) {\n    return new (t || NgbPopoverModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n\nvar NgbProgressbarConfig = function NgbProgressbarConfig() {\n  _classCallCheck(this, NgbProgressbarConfig);\n\n  this.max = 100;\n  this.animated = false;\n  this.striped = false;\n  this.showValue = false;\n};\n\nNgbProgressbarConfig.ɵfac = function NgbProgressbarConfig_Factory(t) {\n  return new (t || NgbProgressbarConfig)();\n};\n\nNgbProgressbarConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbProgressbarConfig_Factory() {\n    return new NgbProgressbarConfig();\n  },\n  token: NgbProgressbarConfig,\n  providedIn: \"root\"\n});\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n\nvar NgbProgressbar = /*#__PURE__*/function () {\n  function NgbProgressbar(config) {\n    _classCallCheck(this, NgbProgressbar);\n\n    /**\n     * The current value for the progress bar.\n     *\n     * Should be in the `[0, max]` range.\n     */\n    this.value = 0;\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n\n\n  _createClass(NgbProgressbar, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return getValueInRange(this.value, this.max);\n    }\n  }, {\n    key: \"getPercentValue\",\n    value: function getPercentValue() {\n      return 100 * this.getValue() / this.max;\n    }\n  }, {\n    key: \"max\",\n    set: function set(max) {\n      this._max = !isNumber(max) || max <= 0 ? 100 : max;\n    },\n    get: function get() {\n      return this._max;\n    }\n  }]);\n\n  return NgbProgressbar;\n}();\n\nNgbProgressbar.ɵfac = function NgbProgressbar_Factory(t) {\n  return new (t || NgbProgressbar)(ɵngcc0.ɵɵdirectiveInject(NgbProgressbarConfig));\n};\n\nNgbProgressbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbProgressbar,\n  selectors: [[\"ngb-progressbar\"]],\n  inputs: {\n    value: \"value\",\n    max: \"max\",\n    animated: \"animated\",\n    striped: \"striped\",\n    textType: \"textType\",\n    type: \"type\",\n    showValue: \"showValue\",\n    height: \"height\"\n  },\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 13,\n  consts: function consts() {\n    var i18n_54;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__55 = goog.getMsg(\"{$interpolation}%\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_54 = MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__55;\n    } else {\n      i18n_54 = $localize(_templateObject21(), \"\\uFFFD0\\uFFFD\");\n    }\n\n    return [[1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\"], [4, \"ngIf\"], i18n_54];\n  },\n  template: function NgbProgressbar_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, NgbProgressbar_span_2_Template, 2, 1, \"span\", 2);\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.height);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassMapInterpolate4(\"progress-bar\", ctx.type ? \" bg-\" + ctx.type : \"\", \"\", ctx.textType ? \" text-\" + ctx.textType : \"\", \"\\n      \", ctx.animated ? \" progress-bar-animated\" : \"\", \"\", ctx.striped ? \" progress-bar-striped\" : \"\", \"\");\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.getPercentValue(), \"%\");\n      ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbProgressbar.ctorParameters = function () {\n  return [{\n    type: NgbProgressbarConfig\n  }];\n};\n\n__decorate([Input()], NgbProgressbar.prototype, \"max\", null);\n\n__decorate([Input()], NgbProgressbar.prototype, \"animated\", void 0);\n\n__decorate([Input()], NgbProgressbar.prototype, \"striped\", void 0);\n\n__decorate([Input()], NgbProgressbar.prototype, \"showValue\", void 0);\n\n__decorate([Input()], NgbProgressbar.prototype, \"textType\", void 0);\n\n__decorate([Input()], NgbProgressbar.prototype, \"type\", void 0);\n\n__decorate([Input()], NgbProgressbar.prototype, \"value\", void 0);\n\n__decorate([Input()], NgbProgressbar.prototype, \"height\", void 0);\n\nvar NgbProgressbarModule = function NgbProgressbarModule() {\n  _classCallCheck(this, NgbProgressbarModule);\n};\n\nNgbProgressbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbProgressbarModule\n});\nNgbProgressbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbProgressbarModule_Factory(t) {\n    return new (t || NgbProgressbarModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n\nvar NgbRatingConfig = function NgbRatingConfig() {\n  _classCallCheck(this, NgbRatingConfig);\n\n  this.max = 10;\n  this.readonly = false;\n  this.resettable = false;\n};\n\nNgbRatingConfig.ɵfac = function NgbRatingConfig_Factory(t) {\n  return new (t || NgbRatingConfig)();\n};\n\nNgbRatingConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbRatingConfig_Factory() {\n    return new NgbRatingConfig();\n  },\n  token: NgbRatingConfig,\n  providedIn: \"root\"\n});\nvar NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbRating;\n  }),\n  multi: true\n};\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n\nvar NgbRating = /*#__PURE__*/function () {\n  function NgbRating(config, _changeDetectorRef) {\n    _classCallCheck(this, NgbRating);\n\n    this._changeDetectorRef = _changeDetectorRef;\n    this.contexts = [];\n    this.disabled = false;\n    /**\n     * An event emitted when the user is hovering over a given rating.\n     *\n     * Event payload equals to the rating being hovered over.\n     */\n\n    this.hover = new EventEmitter();\n    /**\n     * An event emitted when the user stops hovering over a given rating.\n     *\n     * Event payload equals to the rating of the last item being hovered over.\n     */\n\n    this.leave = new EventEmitter();\n    /**\n     * An event emitted when the user selects a new rating.\n     *\n     * Event payload equals to the newly selected rating.\n     */\n\n    this.rateChange = new EventEmitter(true);\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  _createClass(NgbRating, [{\n    key: \"ariaValueText\",\n    value: function ariaValueText() {\n      return \"\".concat(this.nextRate, \" out of \").concat(this.max);\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(value) {\n      if (!this.readonly && !this.disabled) {\n        this._updateState(value);\n      }\n\n      this.hover.emit(value);\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this.onTouched();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(value) {\n      if (!this.readonly && !this.disabled) {\n        this.update(this.resettable && this.rate === value ? 0 : value);\n      }\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      // tslint:disable-next-line:deprecation\n      switch (event.which) {\n        case Key.ArrowDown:\n        case Key.ArrowLeft:\n          this.update(this.rate - 1);\n          break;\n\n        case Key.ArrowUp:\n        case Key.ArrowRight:\n          this.update(this.rate + 1);\n          break;\n\n        case Key.Home:\n          this.update(0);\n          break;\n\n        case Key.End:\n          this.update(this.max);\n          break;\n\n        default:\n          return;\n      } // note 'return' in default case\n\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['rate']) {\n        this.update(this.rate);\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.contexts = Array.from({\n        length: this.max\n      }, function (v, k) {\n        return {\n          fill: 0,\n          index: k\n        };\n      });\n\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.leave.emit(this.nextRate);\n\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"update\",\n    value: function update(value) {\n      var internalChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var newRate = getValueInRange(value, this.max, 0);\n\n      if (!this.readonly && !this.disabled && this.rate !== newRate) {\n        this.rate = newRate;\n        this.rateChange.emit(this.rate);\n      }\n\n      if (internalChange) {\n        this.onChange(this.rate);\n        this.onTouched();\n      }\n\n      this._updateState(this.rate);\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.update(value, false);\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }, {\n    key: \"_getFillValue\",\n    value: function _getFillValue(index) {\n      var diff = this.nextRate - index;\n\n      if (diff >= 1) {\n        return 100;\n      }\n\n      if (diff < 1 && diff > 0) {\n        return parseInt((diff * 100).toFixed(2), 10);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_updateState\",\n    value: function _updateState(nextValue) {\n      var _this34 = this;\n\n      this.nextRate = nextValue;\n      this.contexts.forEach(function (context, index) {\n        return context.fill = _this34._getFillValue(index);\n      });\n    }\n  }]);\n\n  return NgbRating;\n}();\n\nNgbRating.ɵfac = function NgbRating_Factory(t) {\n  return new (t || NgbRating)(ɵngcc0.ɵɵdirectiveInject(NgbRatingConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nNgbRating.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbRating,\n  selectors: [[\"ngb-rating\"]],\n  contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"],\n  hostVars: 5,\n  hostBindings: function NgbRating_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() {\n        return ctx.reset();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"tabindex\", ctx.disabled ? -1 : 0);\n      ɵngcc0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText())(\"aria-disabled\", ctx.readonly ? true : null);\n    }\n  },\n  inputs: {\n    max: \"max\",\n    readonly: \"readonly\",\n    rate: \"rate\",\n    resettable: \"resettable\",\n    starTemplate: \"starTemplate\"\n  },\n  outputs: {\n    hover: \"hover\",\n    leave: \"leave\",\n    rateChange: \"rateChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_RATING_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"sr-only\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbRating_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.contexts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nNgbRating.ctorParameters = function () {\n  return [{\n    type: NgbRatingConfig\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\n__decorate([Input()], NgbRating.prototype, \"max\", void 0);\n\n__decorate([Input()], NgbRating.prototype, \"rate\", void 0);\n\n__decorate([Input()], NgbRating.prototype, \"readonly\", void 0);\n\n__decorate([Input()], NgbRating.prototype, \"resettable\", void 0);\n\n__decorate([Input()], NgbRating.prototype, \"starTemplate\", void 0);\n\n__decorate([ContentChild(TemplateRef, {\n  static: false\n})], NgbRating.prototype, \"starTemplateFromContent\", void 0);\n\n__decorate([Output()], NgbRating.prototype, \"hover\", void 0);\n\n__decorate([Output()], NgbRating.prototype, \"leave\", void 0);\n\n__decorate([Output()], NgbRating.prototype, \"rateChange\", void 0);\n\nvar NgbRatingModule = function NgbRatingModule() {\n  _classCallCheck(this, NgbRatingModule);\n};\n\nNgbRatingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbRatingModule\n});\nNgbRatingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbRatingModule_Factory(t) {\n    return new (t || NgbRatingModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n\nvar NgbTabsetConfig = function NgbTabsetConfig() {\n  _classCallCheck(this, NgbTabsetConfig);\n\n  this.justify = 'start';\n  this.orientation = 'horizontal';\n  this.type = 'tabs';\n};\n\nNgbTabsetConfig.ɵfac = function NgbTabsetConfig_Factory(t) {\n  return new (t || NgbTabsetConfig)();\n};\n\nNgbTabsetConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTabsetConfig_Factory() {\n    return new NgbTabsetConfig();\n  },\n  token: NgbTabsetConfig,\n  providedIn: \"root\"\n});\nvar nextId$4 = 0;\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n\nvar NgbTabTitle = function NgbTabTitle(templateRef) {\n  _classCallCheck(this, NgbTabTitle);\n\n  this.templateRef = templateRef;\n};\n\nNgbTabTitle.ɵfac = function NgbTabTitle_Factory(t) {\n  return new (t || NgbTabTitle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbTabTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTabTitle,\n  selectors: [[\"ng-template\", \"ngbTabTitle\", \"\"]]\n});\n\nNgbTabTitle.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive to wrap content to be displayed in a tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n\n\nvar NgbTabContent = function NgbTabContent(templateRef) {\n  _classCallCheck(this, NgbTabContent);\n\n  this.templateRef = templateRef;\n};\n\nNgbTabContent.ɵfac = function NgbTabContent_Factory(t) {\n  return new (t || NgbTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nNgbTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTabContent,\n  selectors: [[\"ng-template\", \"ngbTabContent\", \"\"]]\n});\n\nNgbTabContent.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/**\n * A directive representing an individual tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n\n\nvar NgbTab = /*#__PURE__*/function () {\n  function NgbTab() {\n    _classCallCheck(this, NgbTab);\n\n    /**\n     * The tab identifier.\n     *\n     * Must be unique for the entire document for proper accessibility support.\n     */\n    this.id = \"ngb-tab-\".concat(nextId$4++);\n    /**\n     * If `true`, the current tab is disabled and can't be toggled.\n     */\n\n    this.disabled = false;\n  }\n\n  _createClass(NgbTab, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n      // only @ContentChildren allows us to specify the {descendants: false} option.\n      // Without {descendants: false} we are hitting bugs described in:\n      // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n      this.titleTpl = this.titleTpls.first;\n      this.contentTpl = this.contentTpls.first;\n    }\n  }]);\n\n  return NgbTab;\n}();\n\nNgbTab.ɵfac = function NgbTab_Factory(t) {\n  return new (t || NgbTab)();\n};\n\nNgbTab.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTab,\n  selectors: [[\"ngb-tab\"]],\n  contentQueries: function NgbTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTabTitle, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTabContent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    title: \"title\"\n  }\n});\n\n__decorate([Input()], NgbTab.prototype, \"id\", void 0);\n\n__decorate([Input()], NgbTab.prototype, \"title\", void 0);\n\n__decorate([Input()], NgbTab.prototype, \"disabled\", void 0);\n\n__decorate([ContentChildren(NgbTabTitle, {\n  descendants: false\n})], NgbTab.prototype, \"titleTpls\", void 0);\n\n__decorate([ContentChildren(NgbTabContent, {\n  descendants: false\n})], NgbTab.prototype, \"contentTpls\", void 0);\n/**\n * A component that makes it easy to create tabbed interface.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n\n\nvar NgbTabset = /*#__PURE__*/function () {\n  function NgbTabset(config) {\n    _classCallCheck(this, NgbTabset);\n\n    /**\n     * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n     */\n    this.destroyOnHide = true;\n    /**\n     * A tab change event emitted right before the tab change happens.\n     *\n     * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n     */\n\n    this.tabChange = new EventEmitter();\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n\n\n  _createClass(NgbTabset, [{\n    key: \"select\",\n\n    /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     */\n    value: function select(tabId) {\n      var selectedTab = this._getTabById(tabId);\n\n      if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n        var defaultPrevented = false;\n        this.tabChange.emit({\n          activeId: this.activeId,\n          nextId: selectedTab.id,\n          preventDefault: function preventDefault() {\n            defaultPrevented = true;\n          }\n        });\n\n        if (!defaultPrevented) {\n          this.activeId = selectedTab.id;\n        }\n      }\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      // auto-correct activeId that might have been set incorrectly as input\n      var activeTab = this._getTabById(this.activeId);\n\n      this.activeId = activeTab ? activeTab.id : this.tabs.length ? this.tabs.first.id : null;\n    }\n  }, {\n    key: \"_getTabById\",\n    value: function _getTabById(id) {\n      var tabsWithId = this.tabs.filter(function (tab) {\n        return tab.id === id;\n      });\n      return tabsWithId.length ? tabsWithId[0] : null;\n    }\n  }, {\n    key: \"justify\",\n    set: function set(className) {\n      if (className === 'fill' || className === 'justified') {\n        this.justifyClass = \"nav-\".concat(className);\n      } else {\n        this.justifyClass = \"justify-content-\".concat(className);\n      }\n    }\n  }]);\n\n  return NgbTabset;\n}();\n\nNgbTabset.ɵfac = function NgbTabset_Factory(t) {\n  return new (t || NgbTabset)(ɵngcc0.ɵɵdirectiveInject(NgbTabsetConfig));\n};\n\nNgbTabset.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTabset,\n  selectors: [[\"ngb-tabset\"]],\n  contentQueries: function NgbTabset_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTab, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);\n    }\n  },\n  inputs: {\n    destroyOnHide: \"destroyOnHide\",\n    type: \"type\",\n    justify: \"justify\",\n    orientation: \"orientation\",\n    activeId: \"activeId\"\n  },\n  outputs: {\n    tabChange: \"tabChange\"\n  },\n  exportAs: [\"ngbTabset\"],\n  decls: 4,\n  vars: 4,\n  consts: [[\"role\", \"tablist\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"nav-item\"], [\"href\", \"\", \"role\", \"tab\", 1, \"nav-link\", 3, \"id\", \"click\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tabpanel\", 3, \"class\", \"id\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\"]],\n  template: function NgbTabset_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵtemplate(1, NgbTabset_li_1_Template, 4, 11, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbTabset_ng_template_3_Template, 1, 1, \"ng-template\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"nav nav-\" + ctx.type + (ctx.orientation == \"horizontal\" ? \" \" + ctx.justifyClass : \" flex-column\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf],\n  encapsulation: 2\n});\n\nNgbTabset.ctorParameters = function () {\n  return [{\n    type: NgbTabsetConfig\n  }];\n};\n\n__decorate([ContentChildren(NgbTab)], NgbTabset.prototype, \"tabs\", void 0);\n\n__decorate([Input()], NgbTabset.prototype, \"activeId\", void 0);\n\n__decorate([Input()], NgbTabset.prototype, \"destroyOnHide\", void 0);\n\n__decorate([Input()], NgbTabset.prototype, \"justify\", null);\n\n__decorate([Input()], NgbTabset.prototype, \"orientation\", void 0);\n\n__decorate([Input()], NgbTabset.prototype, \"type\", void 0);\n\n__decorate([Output()], NgbTabset.prototype, \"tabChange\", void 0);\n\nvar NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n/**\n * @deprecated 6.0.0 Please use NgbNavModule instead\n */\n\nvar NgbTabsetModule = function NgbTabsetModule() {\n  _classCallCheck(this, NgbTabsetModule);\n};\n\nNgbTabsetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTabsetModule\n});\nNgbTabsetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTabsetModule_Factory(t) {\n    return new (t || NgbTabsetModule)();\n  },\n  imports: [[CommonModule]]\n});\n\nvar NgbTime = /*#__PURE__*/function () {\n  function NgbTime(hour, minute, second) {\n    _classCallCheck(this, NgbTime);\n\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  _createClass(NgbTime, [{\n    key: \"changeHour\",\n    value: function changeHour() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\n    }\n  }, {\n    key: \"updateHour\",\n    value: function updateHour(hour) {\n      if (isNumber(hour)) {\n        this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n      } else {\n        this.hour = NaN;\n      }\n    }\n  }, {\n    key: \"changeMinute\",\n    value: function changeMinute() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\n    }\n  }, {\n    key: \"updateMinute\",\n    value: function updateMinute(minute) {\n      if (isNumber(minute)) {\n        this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n        this.changeHour(Math.floor(minute / 60));\n      } else {\n        this.minute = NaN;\n      }\n    }\n  }, {\n    key: \"changeSecond\",\n    value: function changeSecond() {\n      var step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\n    }\n  }, {\n    key: \"updateSecond\",\n    value: function updateSecond(second) {\n      if (isNumber(second)) {\n        this.second = second < 0 ? 60 + second % 60 : second % 60;\n        this.changeMinute(Math.floor(second / 60));\n      } else {\n        this.second = NaN;\n      }\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      var checkSecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.hour || 0, \":\").concat(this.minute || 0, \":\").concat(this.second || 0);\n    }\n  }]);\n\n  return NgbTime;\n}();\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n\n\nvar NgbTimepickerConfig = function NgbTimepickerConfig() {\n  _classCallCheck(this, NgbTimepickerConfig);\n\n  this.meridian = false;\n  this.spinners = true;\n  this.seconds = false;\n  this.hourStep = 1;\n  this.minuteStep = 1;\n  this.secondStep = 1;\n  this.disabled = false;\n  this.readonlyInputs = false;\n  this.size = 'medium';\n};\n\nNgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) {\n  return new (t || NgbTimepickerConfig)();\n};\n\nNgbTimepickerConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerConfig_Factory() {\n    return new NgbTimepickerConfig();\n  },\n  token: NgbTimepickerConfig,\n  providedIn: \"root\"\n});\n\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n\n\nvar NgbTimeAdapter = function NgbTimeAdapter() {\n  _classCallCheck(this, NgbTimeAdapter);\n};\n\nNgbTimeAdapter.ɵfac = function NgbTimeAdapter_Factory(t) {\n  return new (t || NgbTimeAdapter)();\n};\n\nNgbTimeAdapter.ɵprov = ɵɵdefineInjectable({\n  factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY,\n  token: NgbTimeAdapter,\n  providedIn: \"root\"\n});\n\nvar NgbTimeStructAdapter = /*#__PURE__*/function (_NgbTimeAdapter) {\n  _inherits(NgbTimeStructAdapter, _NgbTimeAdapter);\n\n  var _super15 = _createSuper(NgbTimeStructAdapter);\n\n  function NgbTimeStructAdapter() {\n    _classCallCheck(this, NgbTimeStructAdapter);\n\n    return _super15.apply(this, arguments);\n  }\n\n  _createClass(NgbTimeStructAdapter, [{\n    key: \"fromModel\",\n\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n    value: function fromModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(time) {\n      return time && isInteger(time.hour) && isInteger(time.minute) ? {\n        hour: time.hour,\n        minute: time.minute,\n        second: isInteger(time.second) ? time.second : null\n      } : null;\n    }\n  }]);\n\n  return NgbTimeStructAdapter;\n}(NgbTimeAdapter);\n\nNgbTimeStructAdapter.ɵfac = function NgbTimeStructAdapter_Factory(t) {\n  return ɵNgbTimeStructAdapter_BaseFactory(t || NgbTimeStructAdapter);\n};\n\nNgbTimeStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimeStructAdapter,\n  factory: function factory(t) {\n    return NgbTimeStructAdapter.ɵfac(t);\n  }\n});\n\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n\n\nvar NgbTimepickerI18n = function NgbTimepickerI18n() {\n  _classCallCheck(this, NgbTimepickerI18n);\n};\n\nNgbTimepickerI18n.ɵfac = function NgbTimepickerI18n_Factory(t) {\n  return new (t || NgbTimepickerI18n)();\n};\n\nNgbTimepickerI18n.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTimepickerI18n_Factory() {\n    return NGB_TIMEPICKER_I18N_FACTORY(ɵɵinject(LOCALE_ID));\n  },\n  token: NgbTimepickerI18n,\n  providedIn: \"root\"\n});\n\nvar NgbTimepickerI18nDefault = /*#__PURE__*/function (_NgbTimepickerI18n) {\n  _inherits(NgbTimepickerI18nDefault, _NgbTimepickerI18n);\n\n  var _super16 = _createSuper(NgbTimepickerI18nDefault);\n\n  function NgbTimepickerI18nDefault(locale) {\n    var _this35;\n\n    _classCallCheck(this, NgbTimepickerI18nDefault);\n\n    _this35 = _super16.call(this);\n    _this35._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n    return _this35;\n  }\n\n  _createClass(NgbTimepickerI18nDefault, [{\n    key: \"getMorningPeriod\",\n    value: function getMorningPeriod() {\n      return this._periods[0];\n    }\n  }, {\n    key: \"getAfternoonPeriod\",\n    value: function getAfternoonPeriod() {\n      return this._periods[1];\n    }\n  }]);\n\n  return NgbTimepickerI18nDefault;\n}(NgbTimepickerI18n);\n\nNgbTimepickerI18nDefault.ɵfac = function NgbTimepickerI18nDefault_Factory(t) {\n  return new (t || NgbTimepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID));\n};\n\nNgbTimepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgbTimepickerI18nDefault,\n  factory: function factory(t) {\n    return NgbTimepickerI18nDefault.ɵfac(t);\n  }\n});\n\nNgbTimepickerI18nDefault.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\nNgbTimepickerI18nDefault = __decorate([__param(0, Inject(LOCALE_ID))], NgbTimepickerI18nDefault);\nvar FILTER_REGEX = /[^0-9]/g;\nvar NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbTimepicker;\n  }),\n  multi: true\n};\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n\nvar NgbTimepicker = /*#__PURE__*/function () {\n  function NgbTimepicker(_config, _ngbTimeAdapter, _cd, i18n) {\n    _classCallCheck(this, NgbTimepicker);\n\n    this._config = _config;\n    this._ngbTimeAdapter = _ngbTimeAdapter;\n    this._cd = _cd;\n    this.i18n = i18n;\n\n    this.onChange = function (_) {};\n\n    this.onTouched = function () {};\n\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n\n\n  _createClass(NgbTimepicker, [{\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      var structValue = this._ngbTimeAdapter.fromModel(value);\n\n      this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n\n      if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n        this.model.second = 0;\n      }\n\n      this._cd.markForCheck();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n  }, {\n    key: \"changeHour\",\n    value: function changeHour(step) {\n      this.model.changeHour(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"changeMinute\",\n    value: function changeMinute(step) {\n      this.model.changeMinute(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"changeSecond\",\n    value: function changeSecond(step) {\n      this.model.changeSecond(step);\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateHour\",\n    value: function updateHour(newVal) {\n      var isPM = this.model.hour >= 12;\n      var enteredHour = toInteger(newVal);\n\n      if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n        this.model.updateHour(enteredHour + 12);\n      } else {\n        this.model.updateHour(enteredHour);\n      }\n\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateMinute\",\n    value: function updateMinute(newVal) {\n      this.model.updateMinute(toInteger(newVal));\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"updateSecond\",\n    value: function updateSecond(newVal) {\n      this.model.updateSecond(toInteger(newVal));\n      this.propagateModelChange();\n    }\n  }, {\n    key: \"toggleMeridian\",\n    value: function toggleMeridian() {\n      if (this.meridian) {\n        this.changeHour(12);\n      }\n    }\n  }, {\n    key: \"formatInput\",\n    value: function formatInput(input) {\n      input.value = input.value.replace(FILTER_REGEX, '');\n    }\n  }, {\n    key: \"formatHour\",\n    value: function formatHour(value) {\n      if (isNumber(value)) {\n        if (this.meridian) {\n          return padNumber(value % 12 === 0 ? 12 : value % 12);\n        } else {\n          return padNumber(value % 24);\n        }\n      } else {\n        return padNumber(NaN);\n      }\n    }\n  }, {\n    key: \"formatMinSec\",\n    value: function formatMinSec(value) {\n      return padNumber(value);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n        this.model.second = 0;\n        this.propagateModelChange(false);\n      }\n    }\n  }, {\n    key: \"propagateModelChange\",\n    value: function propagateModelChange() {\n      var touched = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (touched) {\n        this.onTouched();\n      }\n\n      if (this.model.isValid(this.seconds)) {\n        this.onChange(this._ngbTimeAdapter.toModel({\n          hour: this.model.hour,\n          minute: this.model.minute,\n          second: this.model.second\n        }));\n      } else {\n        this.onChange(this._ngbTimeAdapter.toModel(null));\n      }\n    }\n  }, {\n    key: \"hourStep\",\n    set: function set(step) {\n      this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    },\n    get: function get() {\n      return this._hourStep;\n    }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     */\n\n  }, {\n    key: \"minuteStep\",\n    set: function set(step) {\n      this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    },\n    get: function get() {\n      return this._minuteStep;\n    }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     */\n\n  }, {\n    key: \"secondStep\",\n    set: function set(step) {\n      this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    },\n    get: function get() {\n      return this._secondStep;\n    }\n  }, {\n    key: \"isSmallSize\",\n    get: function get() {\n      return this.size === 'small';\n    }\n  }, {\n    key: \"isLargeSize\",\n    get: function get() {\n      return this.size === 'large';\n    }\n  }]);\n\n  return NgbTimepicker;\n}();\n\nNgbTimepicker.ɵfac = function NgbTimepicker_Factory(t) {\n  return new (t || NgbTimepicker)(ɵngcc0.ɵɵdirectiveInject(NgbTimepickerConfig), ɵngcc0.ɵɵdirectiveInject(NgbTimeAdapter), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbTimepickerI18n));\n};\n\nNgbTimepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTimepicker,\n  selectors: [[\"ngb-timepicker\"]],\n  inputs: {\n    meridian: \"meridian\",\n    spinners: \"spinners\",\n    seconds: \"seconds\",\n    hourStep: \"hourStep\",\n    minuteStep: \"minuteStep\",\n    secondStep: \"secondStep\",\n    readonlyInputs: \"readonlyInputs\",\n    size: \"size\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_TIMEPICKER_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 16,\n  vars: 25,\n  consts: function consts() {\n    var i18n_56;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_57 = goog.getMsg(\"HH\");\n      i18n_56 = MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_57;\n    } else {\n      i18n_56 = $localize(_templateObject22());\n    }\n\n    var i18n_58;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_59 = goog.getMsg(\"Hours\");\n      i18n_58 = MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_59;\n    } else {\n      i18n_58 = $localize(_templateObject23());\n    }\n\n    var i18n_60;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_61 = goog.getMsg(\"MM\");\n      i18n_60 = MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_61;\n    } else {\n      i18n_60 = $localize(_templateObject24());\n    }\n\n    var i18n_62;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_63 = goog.getMsg(\"Minutes\");\n      i18n_62 = MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_63;\n    } else {\n      i18n_62 = $localize(_templateObject25());\n    }\n\n    var i18n_64;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__65 = goog.getMsg(\"Increment hours\");\n      i18n_64 = MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__65;\n    } else {\n      i18n_64 = $localize(_templateObject26());\n    }\n\n    var i18n_66;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__67 = goog.getMsg(\"Decrement hours\");\n      i18n_66 = MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__67;\n    } else {\n      i18n_66 = $localize(_templateObject27());\n    }\n\n    var i18n_68;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__69 = goog.getMsg(\"Increment minutes\");\n      i18n_68 = MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__69;\n    } else {\n      i18n_68 = $localize(_templateObject28());\n    }\n\n    var i18n_70;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__71 = goog.getMsg(\"Decrement minutes\");\n      i18n_70 = MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__71;\n    } else {\n      i18n_70 = $localize(_templateObject29());\n    }\n\n    var i18n_72;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__73 = goog.getMsg(\"SS\");\n      i18n_72 = MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__73;\n    } else {\n      i18n_72 = $localize(_templateObject30());\n    }\n\n    var i18n_74;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__75 = goog.getMsg(\"Seconds\");\n      i18n_74 = MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__75;\n    } else {\n      i18n_74 = $localize(_templateObject31());\n    }\n\n    var i18n_76;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___77 = goog.getMsg(\"Increment seconds\");\n      i18n_76 = MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___77;\n    } else {\n      i18n_76 = $localize(_templateObject32());\n    }\n\n    var i18n_78;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___79 = goog.getMsg(\"Decrement seconds\");\n      i18n_78 = MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___79;\n    } else {\n      i18n_78 = $localize(_templateObject33());\n    }\n\n    var i18n_80;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___81 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_80 = MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___81;\n    } else {\n      i18n_80 = $localize(_templateObject34(), \"\\uFFFD0\\uFFFD\");\n    }\n\n    var i18n_82;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___83 = goog.getMsg(\"{$interpolation}\", {\n        \"interpolation\": \"\\uFFFD0\\uFFFD\"\n      });\n      i18n_82 = MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___83;\n    } else {\n      i18n_82 = $localize(_templateObject35(), \"\\uFFFD0\\uFFFD\");\n    }\n\n    return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_56, \"aria-label\", i18n_58, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_60, \"aria-label\", i18n_62, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"sr-only\"], i18n_64, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_66, i18n_68, i18n_70, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"type\", \"text\", \"maxlength\", \"2\", \"inputmode\", \"numeric\", \"placeholder\", i18n_72, \"aria-label\", i18n_74, 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"input\", \"keydown.ArrowUp\", \"keydown.ArrowDown\"], i18n_76, i18n_78, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_80, i18n_82];\n  },\n  template: function NgbTimepicker_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"fieldset\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"input\", 4);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) {\n        return ctx.updateHour($event.target.value);\n      })(\"input\", function NgbTimepicker_Template_input_input_4_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) {\n        ctx.changeHour(ctx.hourStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) {\n        ctx.changeHour(-ctx.hourStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, NgbTimepicker_button_5_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n      ɵngcc0.ɵɵtext(7, \":\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"div\", 6);\n      ɵngcc0.ɵɵtemplate(9, NgbTimepicker_button_9_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementStart(10, \"input\", 7);\n      ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_10_listener($event) {\n        return ctx.updateMinute($event.target.value);\n      })(\"input\", function NgbTimepicker_Template_input_input_10_listener($event) {\n        return ctx.formatInput($event.target);\n      })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_10_listener($event) {\n        ctx.changeMinute(ctx.minuteStep);\n        return $event.preventDefault();\n      })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_10_listener($event) {\n        ctx.changeMinute(-ctx.minuteStep);\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, NgbTimepicker_button_11_Template, 4, 7, \"button\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(12, NgbTimepicker_div_12_Template, 2, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(13, NgbTimepicker_div_13_Template, 4, 9, \"div\", 9);\n      ɵngcc0.ɵɵtemplate(14, NgbTimepicker_div_14_Template, 1, 0, \"div\", 8);\n      ɵngcc0.ɵɵtemplate(15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"],\n  encapsulation: 2\n});\n\nNgbTimepicker.ctorParameters = function () {\n  return [{\n    type: NgbTimepickerConfig\n  }, {\n    type: NgbTimeAdapter\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgbTimepickerI18n\n  }];\n};\n\n__decorate([Input()], NgbTimepicker.prototype, \"meridian\", void 0);\n\n__decorate([Input()], NgbTimepicker.prototype, \"spinners\", void 0);\n\n__decorate([Input()], NgbTimepicker.prototype, \"seconds\", void 0);\n\n__decorate([Input()], NgbTimepicker.prototype, \"hourStep\", null);\n\n__decorate([Input()], NgbTimepicker.prototype, \"minuteStep\", null);\n\n__decorate([Input()], NgbTimepicker.prototype, \"secondStep\", null);\n\n__decorate([Input()], NgbTimepicker.prototype, \"readonlyInputs\", void 0);\n\n__decorate([Input()], NgbTimepicker.prototype, \"size\", void 0);\n\nvar NgbTimepickerModule = function NgbTimepickerModule() {\n  _classCallCheck(this, NgbTimepickerModule);\n};\n\nNgbTimepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTimepickerModule\n});\nNgbTimepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTimepickerModule_Factory(t) {\n    return new (t || NgbTimepickerModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n\nvar NgbToastConfig = function NgbToastConfig() {\n  _classCallCheck(this, NgbToastConfig);\n\n  this.autohide = true;\n  this.delay = 500;\n  this.ariaLive = 'polite';\n};\n\nNgbToastConfig.ɵfac = function NgbToastConfig_Factory(t) {\n  return new (t || NgbToastConfig)();\n};\n\nNgbToastConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbToastConfig_Factory() {\n    return new NgbToastConfig();\n  },\n  token: NgbToastConfig,\n  providedIn: \"root\"\n});\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n\nvar NgbToastHeader = function NgbToastHeader() {\n  _classCallCheck(this, NgbToastHeader);\n};\n\nNgbToastHeader.ɵfac = function NgbToastHeader_Factory(t) {\n  return new (t || NgbToastHeader)();\n};\n\nNgbToastHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbToastHeader,\n  selectors: [[\"\", \"ngbToastHeader\", \"\"]]\n});\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n\nvar NgbToast = /*#__PURE__*/function () {\n  function NgbToast(ariaLive, config) {\n    _classCallCheck(this, NgbToast);\n\n    this.ariaLive = ariaLive;\n    /**\n     * A template like `<ng-template ngbToastHeader></ng-template>` can be\n     * used in the projected content to allow markup usage.\n     */\n\n    this.contentHeaderTpl = null;\n    /**\n     * An event fired immediately when toast's `hide()` method has been called.\n     * It can only occur in 2 different scenarios:\n     * - `autohide` timeout fires\n     * - user clicks on a closing cross (&times)\n     *\n     * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n     * that.\n     */\n\n    this.hideOutput = new EventEmitter();\n\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  _createClass(NgbToast, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      this._init();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if ('autohide' in changes) {\n        this._clearTimeout();\n\n        this._init();\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this._clearTimeout();\n\n      this.hideOutput.emit();\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this36 = this;\n\n      if (this.autohide && !this._timeoutID) {\n        this._timeoutID = setTimeout(function () {\n          return _this36.hide();\n        }, this.delay);\n      }\n    }\n  }, {\n    key: \"_clearTimeout\",\n    value: function _clearTimeout() {\n      if (this._timeoutID) {\n        clearTimeout(this._timeoutID);\n        this._timeoutID = null;\n      }\n    }\n  }]);\n\n  return NgbToast;\n}();\n\nNgbToast.ɵfac = function NgbToast_Factory(t) {\n  return new (t || NgbToast)(ɵngcc0.ɵɵinjectAttribute('aria-live'), ɵngcc0.ɵɵdirectiveInject(NgbToastConfig));\n};\n\nNgbToast.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbToast,\n  selectors: [[\"ngb-toast\"]],\n  contentQueries: function NgbToast_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, NgbToastHeader, true, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentHeaderTpl = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"alert\", \"aria-atomic\", \"true\"],\n  hostVars: 5,\n  hostBindings: function NgbToast_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-live\", ctx.ariaLive);\n      ɵngcc0.ɵɵclassProp(\"toast\", true)(\"show\", true);\n    }\n  },\n  inputs: {\n    delay: \"delay\",\n    autohide: \"autohide\",\n    header: \"header\"\n  },\n  outputs: {\n    hideOutput: \"hide\"\n  },\n  exportAs: [\"ngbToast\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c5,\n  decls: 5,\n  vars: 1,\n  consts: function consts() {\n    var i18n_84;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      var MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__85 = goog.getMsg(\"Close\");\n      i18n_84 = MSG_EXTERNAL_ngb_toast_close_aria$$FESM2015_NG_BOOTSTRAP_JS__85;\n    } else {\n      i18n_84 = $localize(_templateObject36());\n    }\n\n    return [[\"headerTpl\", \"\"], [3, \"ngIf\"], [1, \"toast-body\"], [1, \"mr-auto\"], [1, \"toast-header\"], [3, \"ngTemplateOutlet\"], [\"type\", \"button\", \"aria-label\", i18n_84, 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"]];\n  },\n  template: function NgbToast_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, NgbToast_ng_template_0_Template, 2, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbToast_ng_template_2_Template, 5, 1, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.contentHeaderTpl || ctx.header);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  styles: [\".ngb-toasts{position:fixed;top:0;right:0;margin:.5em;z-index:1200}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\"],\n  encapsulation: 2\n});\n\nNgbToast.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['aria-live']\n    }]\n  }, {\n    type: NgbToastConfig\n  }];\n};\n\n__decorate([Input()], NgbToast.prototype, \"delay\", void 0);\n\n__decorate([Input()], NgbToast.prototype, \"autohide\", void 0);\n\n__decorate([Input()], NgbToast.prototype, \"header\", void 0);\n\n__decorate([ContentChild(NgbToastHeader, {\n  read: TemplateRef,\n  static: true\n})], NgbToast.prototype, \"contentHeaderTpl\", void 0);\n\n__decorate([Output('hide')], NgbToast.prototype, \"hideOutput\", void 0);\n\nNgbToast = __decorate([__param(0, Attribute('aria-live'))], NgbToast);\n\nvar NgbToastModule = function NgbToastModule() {\n  _classCallCheck(this, NgbToastModule);\n};\n\nNgbToastModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbToastModule\n});\nNgbToastModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbToastModule_Factory(t) {\n    return new (t || NgbToastModule)();\n  },\n  imports: [[CommonModule]]\n});\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n\nvar NgbTooltipConfig = function NgbTooltipConfig() {\n  _classCallCheck(this, NgbTooltipConfig);\n\n  this.autoClose = true;\n  this.placement = 'auto';\n  this.triggers = 'hover focus';\n  this.disableTooltip = false;\n  this.openDelay = 0;\n  this.closeDelay = 0;\n};\n\nNgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) {\n  return new (t || NgbTooltipConfig)();\n};\n\nNgbTooltipConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTooltipConfig_Factory() {\n    return new NgbTooltipConfig();\n  },\n  token: NgbTooltipConfig,\n  providedIn: \"root\"\n});\nvar nextId$5 = 0;\n\nvar NgbTooltipWindow = function NgbTooltipWindow() {\n  _classCallCheck(this, NgbTooltipWindow);\n};\n\nNgbTooltipWindow.ɵfac = function NgbTooltipWindow_Factory(t) {\n  return new (t || NgbTooltipWindow)();\n};\n\nNgbTooltipWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTooltipWindow,\n  selectors: [[\"ngb-tooltip-window\"]],\n  hostAttrs: [\"role\", \"tooltip\"],\n  hostVars: 3,\n  hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵclassMap(\"tooltip show\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n    }\n  },\n  inputs: {\n    id: \"id\",\n    tooltipClass: \"tooltipClass\"\n  },\n  ngContentSelectors: _c5,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"arrow\"], [1, \"tooltip-inner\"]],\n  template: function NgbTooltipWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Input()], NgbTooltipWindow.prototype, \"id\", void 0);\n\n__decorate([Input()], NgbTooltipWindow.prototype, \"tooltipClass\", void 0);\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n\n\nvar NgbTooltip = /*#__PURE__*/function () {\n  function NgbTooltip(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef) {\n    var _this37 = this;\n\n    _classCallCheck(this, NgbTooltip);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._changeDetector = _changeDetector;\n    /**\n     * An event emitted when the tooltip is shown. Contains no payload.\n     */\n\n    this.shown = new EventEmitter();\n    /**\n     * An event emitted when the popover is hidden. Contains no payload.\n     */\n\n    this.hidden = new EventEmitter();\n    this._ngbTooltipWindowId = \"ngb-tooltip-\".concat(nextId$5++);\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = _ngZone.onStable.subscribe(function () {\n      if (_this37._windowRef) {\n        positionElements(_this37._elementRef.nativeElement, _this37._windowRef.location.nativeElement, _this37.placement, _this37.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n\n\n  _createClass(NgbTooltip, [{\n    key: \"open\",\n\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     */\n    value: function open(context) {\n      var _this38 = this;\n\n      if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n        this._windowRef = this._popupService.open(this._ngbTooltip, context);\n        this._windowRef.instance.tooltipClass = this.tooltipClass;\n        this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n        if (this.container === 'body') {\n          this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        } // We need to detect changes, because we don't know where .open() might be called from.\n        // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n        // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n\n\n        this._windowRef.changeDetectorRef.detectChanges(); // We need to mark for check, because tooltip won't work inside the OnPush component.\n        // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n        // inside the template of an OnPush component and we change the tooltip from\n        // open -> closed, the expression in question won't be updated unless we explicitly\n        // mark the parent component to be checked.\n\n\n        this._windowRef.changeDetectorRef.markForCheck();\n\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, function () {\n          return _this38.close();\n        }, this.hidden, [this._windowRef.location.nativeElement]);\n        this.shown.emit();\n      }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this._windowRef != null) {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n\n        this._popupService.close();\n\n        this._windowRef = null;\n        this.hidden.emit();\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      if (this._windowRef) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     */\n\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_ref14) {\n      var tooltipClass = _ref14.tooltipClass;\n\n      if (tooltipClass && this.isOpen()) {\n        this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close(); // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n      // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n\n      if (this._unregisterListenersFn) {\n        this._unregisterListenersFn();\n      }\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"ngbTooltip\",\n    set: function set(value) {\n      this._ngbTooltip = value;\n\n      if (!value && this._windowRef) {\n        this.close();\n      }\n    },\n    get: function get() {\n      return this._ngbTooltip;\n    }\n  }]);\n\n  return NgbTooltip;\n}();\n\nNgbTooltip.ɵfac = function NgbTooltip_Factory(t) {\n  return new (t || NgbTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbTooltipConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTooltip,\n  selectors: [[\"\", \"ngbTooltip\", \"\"]],\n  inputs: {\n    autoClose: \"autoClose\",\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    disableTooltip: \"disableTooltip\",\n    tooltipClass: \"tooltipClass\",\n    openDelay: \"openDelay\",\n    closeDelay: \"closeDelay\",\n    ngbTooltip: \"ngbTooltip\"\n  },\n  outputs: {\n    shown: \"shown\",\n    hidden: \"hidden\"\n  },\n  exportAs: [\"ngbTooltip\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n\nNgbTooltip.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: NgbTooltipConfig\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n\n__decorate([Input()], NgbTooltip.prototype, \"autoClose\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"placement\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"triggers\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"container\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"disableTooltip\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"tooltipClass\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"openDelay\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"closeDelay\", void 0);\n\n__decorate([Output()], NgbTooltip.prototype, \"shown\", void 0);\n\n__decorate([Output()], NgbTooltip.prototype, \"hidden\", void 0);\n\n__decorate([Input()], NgbTooltip.prototype, \"ngbTooltip\", null);\n\nNgbTooltip = __decorate([__param(7, Inject(DOCUMENT))], NgbTooltip);\n\nvar NgbTooltipModule = function NgbTooltipModule() {\n  _classCallCheck(this, NgbTooltipModule);\n};\n\nNgbTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTooltipModule\n});\nNgbTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTooltipModule_Factory(t) {\n    return new (t || NgbTooltipModule)();\n  }\n});\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n\nvar NgbHighlight = /*#__PURE__*/function () {\n  function NgbHighlight() {\n    _classCallCheck(this, NgbHighlight);\n\n    /**\n     * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n     */\n    this.highlightClass = 'ngb-highlight';\n  }\n\n  _createClass(NgbHighlight, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var result = toString(this.result);\n      var terms = Array.isArray(this.term) ? this.term : [this.term];\n      var escapedTerms = terms.map(function (term) {\n        return regExpEscape(toString(term));\n      }).filter(function (term) {\n        return term;\n      });\n      this.parts = escapedTerms.length ? result.split(new RegExp(\"(\".concat(escapedTerms.join('|'), \")\"), 'gmi')) : [result];\n    }\n  }]);\n\n  return NgbHighlight;\n}();\n\nNgbHighlight.ɵfac = function NgbHighlight_Factory(t) {\n  return new (t || NgbHighlight)();\n};\n\nNgbHighlight.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbHighlight,\n  selectors: [[\"ngb-highlight\"]],\n  inputs: {\n    highlightClass: \"highlightClass\",\n    result: \"result\",\n    term: \"term\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]],\n  template: function NgbHighlight_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf],\n  styles: [\".ngb-highlight{font-weight:700}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Input()], NgbHighlight.prototype, \"highlightClass\", void 0);\n\n__decorate([Input()], NgbHighlight.prototype, \"result\", void 0);\n\n__decorate([Input()], NgbHighlight.prototype, \"term\", void 0);\n\nvar NgbTypeaheadWindow = /*#__PURE__*/function () {\n  function NgbTypeaheadWindow() {\n    _classCallCheck(this, NgbTypeaheadWindow);\n\n    this.activeIdx = 0;\n    /**\n     * Flag indicating if the first row should be active initially\n     */\n\n    this.focusFirst = true;\n    /**\n     * A function used to format a given result before display. This function should return a formatted string without any\n     * HTML markup\n     */\n\n    this.formatter = toString;\n    /**\n     * Event raised when user selects a particular result row\n     */\n\n    this.selectEvent = new EventEmitter();\n    this.activeChangeEvent = new EventEmitter();\n  }\n\n  _createClass(NgbTypeaheadWindow, [{\n    key: \"hasActive\",\n    value: function hasActive() {\n      return this.activeIdx > -1 && this.activeIdx < this.results.length;\n    }\n  }, {\n    key: \"getActive\",\n    value: function getActive() {\n      return this.results[this.activeIdx];\n    }\n  }, {\n    key: \"markActive\",\n    value: function markActive(activeIdx) {\n      this.activeIdx = activeIdx;\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.activeIdx === this.results.length - 1) {\n        this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n      } else {\n        this.activeIdx++;\n      }\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      if (this.activeIdx < 0) {\n        this.activeIdx = this.results.length - 1;\n      } else if (this.activeIdx === 0) {\n        this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n      } else {\n        this.activeIdx--;\n      }\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"resetActive\",\n    value: function resetActive() {\n      this.activeIdx = this.focusFirst ? 0 : -1;\n\n      this._activeChanged();\n    }\n  }, {\n    key: \"select\",\n    value: function select(item) {\n      this.selectEvent.emit(item);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.resetActive();\n    }\n  }, {\n    key: \"_activeChanged\",\n    value: function _activeChanged() {\n      this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n  }]);\n\n  return NgbTypeaheadWindow;\n}();\n\nNgbTypeaheadWindow.ɵfac = function NgbTypeaheadWindow_Factory(t) {\n  return new (t || NgbTypeaheadWindow)();\n};\n\nNgbTypeaheadWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NgbTypeaheadWindow,\n  selectors: [[\"ngb-typeahead-window\"]],\n  hostAttrs: [\"role\", \"listbox\", 1, \"dropdown-menu\", \"show\"],\n  hostVars: 1,\n  hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) {\n        return $event.preventDefault();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    focusFirst: \"focusFirst\",\n    formatter: \"formatter\",\n    id: \"id\",\n    results: \"results\",\n    term: \"term\",\n    resultTemplate: \"resultTemplate\"\n  },\n  outputs: {\n    selectEvent: \"select\",\n    activeChangeEvent: \"activeChange\"\n  },\n  exportAs: [\"ngbTypeaheadWindow\"],\n  decls: 3,\n  vars: 1,\n  consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NgbTypeaheadWindow_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.results);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, NgbHighlight, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"id\", void 0);\n\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"focusFirst\", void 0);\n\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"results\", void 0);\n\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"term\", void 0);\n\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"formatter\", void 0);\n\n__decorate([Input()], NgbTypeaheadWindow.prototype, \"resultTemplate\", void 0);\n\n__decorate([Output('select')], NgbTypeaheadWindow.prototype, \"selectEvent\", void 0);\n\n__decorate([Output('activeChange')], NgbTypeaheadWindow.prototype, \"activeChangeEvent\", void 0);\n\nvar ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', {\n  providedIn: 'root',\n  factory: ARIA_LIVE_DELAY_FACTORY\n});\n\nfunction ARIA_LIVE_DELAY_FACTORY() {\n  return 100;\n}\n\nfunction getLiveElement(document) {\n  var lazyCreate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var element = document.body.querySelector('#ngb-live');\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n    element.classList.add('sr-only');\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\nvar Live = /*#__PURE__*/function () {\n  function Live(_document, _delay) {\n    _classCallCheck(this, Live);\n\n    this._document = _document;\n    this._delay = _delay;\n  }\n\n  _createClass(Live, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var element = getLiveElement(this._document);\n\n      if (element) {\n        element.parentElement.removeChild(element);\n      }\n    }\n  }, {\n    key: \"say\",\n    value: function say(message) {\n      var element = getLiveElement(this._document, true);\n      var delay = this._delay;\n      element.textContent = '';\n\n      var setText = function setText() {\n        return element.textContent = message;\n      };\n\n      if (delay === null) {\n        setText();\n      } else {\n        setTimeout(setText, delay);\n      }\n    }\n  }]);\n\n  return Live;\n}();\n\nLive.ɵfac = function Live_Factory(t) {\n  return new (t || Live)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ARIA_LIVE_DELAY));\n};\n\nLive.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [ARIA_LIVE_DELAY]\n    }]\n  }];\n};\n\nLive.ɵprov = ɵɵdefineInjectable({\n  factory: function Live_Factory() {\n    return new Live(ɵɵinject(DOCUMENT), ɵɵinject(ARIA_LIVE_DELAY));\n  },\n  token: Live,\n  providedIn: \"root\"\n});\nLive = __decorate([__param(0, Inject(DOCUMENT)), __param(1, Inject(ARIA_LIVE_DELAY))], Live);\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n\nvar NgbTypeaheadConfig = function NgbTypeaheadConfig() {\n  _classCallCheck(this, NgbTypeaheadConfig);\n\n  this.editable = true;\n  this.focusFirst = true;\n  this.showHint = false;\n  this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n};\n\nNgbTypeaheadConfig.ɵfac = function NgbTypeaheadConfig_Factory(t) {\n  return new (t || NgbTypeaheadConfig)();\n};\n\nNgbTypeaheadConfig.ɵprov = ɵɵdefineInjectable({\n  factory: function NgbTypeaheadConfig_Factory() {\n    return new NgbTypeaheadConfig();\n  },\n  token: NgbTypeaheadConfig,\n  providedIn: \"root\"\n});\nvar NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return NgbTypeahead;\n  }),\n  multi: true\n};\nvar nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n\nvar NgbTypeahead = /*#__PURE__*/function () {\n  function NgbTypeahead(_elementRef, viewContainerRef, _renderer, injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, applicationRef) {\n    var _this39 = this;\n\n    _classCallCheck(this, NgbTypeahead);\n\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._live = _live;\n    this._document = _document;\n    this._ngZone = _ngZone;\n    this._changeDetector = _changeDetector;\n    this._closed$ = new Subject();\n    /**\n     * The value for the `autocomplete` attribute for the `<input>` element.\n     *\n     * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n     *\n     * @since 2.1.0\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * The preferred placement of the typeahead.\n     *\n     * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n     * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n     * `\"right-bottom\"`\n     *\n     * Accepts an array of strings or a string with space separated possible values.\n     *\n     * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n     *\n     * Please see the [positioning overview](#/positioning) for more details.\n     */\n\n    this.placement = 'bottom-left';\n    /**\n     * An event emitted right before an item is selected from the result list.\n     *\n     * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n     */\n\n    this.selectItem = new EventEmitter();\n    this.popupId = \"ngb-typeahead-\".concat(nextWindowId++);\n\n    this._onTouched = function () {};\n\n    this._onChange = function (_) {};\n\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n    this._valueChanges = fromEvent(_elementRef.nativeElement, 'input').pipe(map(function ($event) {\n      return $event.target.value;\n    }));\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n    this._popupService = new PopupService(NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n    this._zoneSubscription = ngZone.onStable.subscribe(function () {\n      if (_this39.isPopupOpen()) {\n        positionElements(_this39._elementRef.nativeElement, _this39._windowRef.location.nativeElement, _this39.placement, _this39.container === 'body');\n      }\n    });\n  }\n\n  _createClass(NgbTypeahead, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this40 = this;\n\n      var inputValues$ = this._valueChanges.pipe(tap(function (value) {\n        _this40._inputValueBackup = _this40.showHint ? value : null;\n\n        _this40._onChange(_this40.editable ? value : undefined);\n      }));\n\n      var results$ = inputValues$.pipe(this.ngbTypeahead);\n\n      var userInput$ = this._resubscribeTypeahead.pipe(switchMap(function () {\n        return results$;\n      }));\n\n      this._subscription = this._subscribeToUserInput(userInput$);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._closePopup();\n\n      this._unsubscribeFromUserInput();\n\n      this._zoneSubscription.unsubscribe();\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChange = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this._writeInputValue(this._formatItemForInput(value));\n\n      if (this.showHint) {\n        this._inputValueBackup = value;\n      }\n    }\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * Dismisses typeahead popup window\n     */\n\n  }, {\n    key: \"dismissPopup\",\n    value: function dismissPopup() {\n      if (this.isPopupOpen()) {\n        this._resubscribeTypeahead.next(null);\n\n        this._closePopup();\n\n        if (this.showHint && this._inputValueBackup !== null) {\n          this._writeInputValue(this._inputValueBackup);\n        }\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     */\n\n  }, {\n    key: \"isPopupOpen\",\n    value: function isPopupOpen() {\n      return this._windowRef != null;\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      this._resubscribeTypeahead.next(null);\n\n      this._onTouched();\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      if (!this.isPopupOpen()) {\n        return;\n      } // tslint:disable-next-line:deprecation\n\n\n      switch (event.which) {\n        case Key.ArrowDown:\n          event.preventDefault();\n\n          this._windowRef.instance.next();\n\n          this._showHint();\n\n          break;\n\n        case Key.ArrowUp:\n          event.preventDefault();\n\n          this._windowRef.instance.prev();\n\n          this._showHint();\n\n          break;\n\n        case Key.Enter:\n        case Key.Tab:\n          var result = this._windowRef.instance.getActive();\n\n          if (isDefined(result)) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            this._selectResult(result);\n          }\n\n          this._closePopup();\n\n          break;\n      }\n    }\n  }, {\n    key: \"_openPopup\",\n    value: function _openPopup() {\n      var _this41 = this;\n\n      if (!this.isPopupOpen()) {\n        this._inputValueBackup = this._elementRef.nativeElement.value;\n        this._windowRef = this._popupService.open();\n        this._windowRef.instance.id = this.popupId;\n\n        this._windowRef.instance.selectEvent.subscribe(function (result) {\n          return _this41._selectResultClosePopup(result);\n        });\n\n        this._windowRef.instance.activeChangeEvent.subscribe(function (activeId) {\n          return _this41.activeDescendant = activeId;\n        });\n\n        if (this.container === 'body') {\n          window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n        }\n\n        this._changeDetector.markForCheck();\n\n        ngbAutoClose(this._ngZone, this._document, 'outside', function () {\n          return _this41.dismissPopup();\n        }, this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n      }\n    }\n  }, {\n    key: \"_closePopup\",\n    value: function _closePopup() {\n      this._closed$.next();\n\n      this._popupService.close();\n\n      this._windowRef = null;\n      this.activeDescendant = undefined;\n    }\n  }, {\n    key: \"_selectResult\",\n    value: function _selectResult(result) {\n      var defaultPrevented = false;\n      this.selectItem.emit({\n        item: result,\n        preventDefault: function preventDefault() {\n          defaultPrevented = true;\n        }\n      });\n\n      this._resubscribeTypeahead.next(null);\n\n      if (!defaultPrevented) {\n        this.writeValue(result);\n\n        this._onChange(result);\n      }\n    }\n  }, {\n    key: \"_selectResultClosePopup\",\n    value: function _selectResultClosePopup(result) {\n      this._selectResult(result);\n\n      this._closePopup();\n    }\n  }, {\n    key: \"_showHint\",\n    value: function _showHint() {\n      if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n        var userInputLowerCase = this._inputValueBackup.toLowerCase();\n\n        var formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n        if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n          this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n\n          this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n        } else {\n          this._writeInputValue(formattedVal);\n        }\n      }\n    }\n  }, {\n    key: \"_formatItemForInput\",\n    value: function _formatItemForInput(item) {\n      return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n  }, {\n    key: \"_writeInputValue\",\n    value: function _writeInputValue(value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    }\n  }, {\n    key: \"_subscribeToUserInput\",\n    value: function _subscribeToUserInput(userInput$) {\n      var _this42 = this;\n\n      return userInput$.subscribe(function (results) {\n        if (!results || results.length === 0) {\n          _this42._closePopup();\n        } else {\n          _this42._openPopup();\n\n          _this42._windowRef.instance.focusFirst = _this42.focusFirst;\n          _this42._windowRef.instance.results = results;\n          _this42._windowRef.instance.term = _this42._elementRef.nativeElement.value;\n\n          if (_this42.resultFormatter) {\n            _this42._windowRef.instance.formatter = _this42.resultFormatter;\n          }\n\n          if (_this42.resultTemplate) {\n            _this42._windowRef.instance.resultTemplate = _this42.resultTemplate;\n          }\n\n          _this42._windowRef.instance.resetActive(); // The observable stream we are subscribing to might have async steps\n          // and if a component containing typeahead is using the OnPush strategy\n          // the change detection turn wouldn't be invoked automatically.\n\n\n          _this42._windowRef.changeDetectorRef.detectChanges();\n\n          _this42._showHint();\n        } // live announcer\n\n\n        var count = results ? results.length : 0;\n\n        _this42._live.say(count === 0 ? 'No results available' : \"\".concat(count, \" result\").concat(count === 1 ? '' : 's', \" available\"));\n      });\n    }\n  }, {\n    key: \"_unsubscribeFromUserInput\",\n    value: function _unsubscribeFromUserInput() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n\n      this._subscription = null;\n    }\n  }]);\n\n  return NgbTypeahead;\n}();\n\nNgbTypeahead.ɵfac = function NgbTypeahead_Factory(t) {\n  return new (t || NgbTypeahead)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NgbTypeaheadConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(Live), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef));\n};\n\nNgbTypeahead.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NgbTypeahead,\n  selectors: [[\"input\", \"ngbTypeahead\", \"\"]],\n  hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\", \"aria-multiline\", \"false\"],\n  hostVars: 7,\n  hostBindings: function NgbTypeahead_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) {\n        return ctx.handleKeyDown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n      ɵngcc0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n      ɵngcc0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n    }\n  },\n  inputs: {\n    autocomplete: \"autocomplete\",\n    placement: \"placement\",\n    container: \"container\",\n    editable: \"editable\",\n    focusFirst: \"focusFirst\",\n    showHint: \"showHint\",\n    inputFormatter: \"inputFormatter\",\n    ngbTypeahead: \"ngbTypeahead\",\n    resultFormatter: \"resultFormatter\",\n    resultTemplate: \"resultTemplate\"\n  },\n  outputs: {\n    selectItem: \"selectItem\"\n  },\n  exportAs: [\"ngbTypeahead\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([NGB_TYPEAHEAD_VALUE_ACCESSOR])]\n});\n\nNgbTypeahead.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: NgbTypeaheadConfig\n  }, {\n    type: NgZone\n  }, {\n    type: Live\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ApplicationRef\n  }];\n};\n\n__decorate([Input()], NgbTypeahead.prototype, \"autocomplete\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"container\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"editable\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"focusFirst\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"inputFormatter\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"ngbTypeahead\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"resultFormatter\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"resultTemplate\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"showHint\", void 0);\n\n__decorate([Input()], NgbTypeahead.prototype, \"placement\", void 0);\n\n__decorate([Output()], NgbTypeahead.prototype, \"selectItem\", void 0);\n\nNgbTypeahead = __decorate([__param(8, Inject(DOCUMENT))], NgbTypeahead);\n\nvar NgbTypeaheadModule = function NgbTypeaheadModule() {\n  _classCallCheck(this, NgbTypeaheadModule);\n};\n\nNgbTypeaheadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbTypeaheadModule\n});\nNgbTypeaheadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbTypeaheadModule_Factory(t) {\n    return new (t || NgbTypeaheadModule)();\n  },\n  imports: [[CommonModule]]\n});\nvar NGB_MODULES = [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule, // tslint:disable-next-line:deprecation\nNgbTabsetModule];\n\nvar NgbModule = function NgbModule() {\n  _classCallCheck(this, NgbModule);\n};\n\nNgbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NgbModule\n});\nNgbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NgbModule_Factory(t) {\n    return new (t || NgbModule)();\n  },\n  imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule, NgbTabsetModule]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAccordionConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelHeader, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelHeader]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelTitle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPanelContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanel, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-panel'\n    }]\n  }], function () {\n    return [];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    cardClass: [{\n      type: Input\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelTitle, {\n        descendants: false\n      }]\n    }],\n    headerTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelHeader, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbPanelContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAccordion, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-accordion',\n      exportAs: 'ngbAccordion',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'accordion',\n        'role': 'tablist',\n        '[attr.aria-multiselectable]': '!closeOtherPanels'\n      },\n      template: \"\\n    <ng-template #t ngbPanelHeader let-panel>\\n      <button class=\\\"btn btn-link\\\" [ngbPanelToggle]=\\\"panel\\\">\\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\\\"panel.titleTpl?.templateRef\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n    <ng-template ngFor let-panel [ngForOf]=\\\"panels\\\">\\n      <div [class]=\\\"'card ' + (panel.cardClass || '')\\\">\\n        <div role=\\\"tab\\\" id=\\\"{{panel.id}}-header\\\" [class]=\\\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"panel.headerTpl?.templateRef || t\\\"\\n                       [ngTemplateOutletContext]=\\\"{$implicit: panel, opened: panel.isOpen}\\\"></ng-template>\\n        </div>\\n        <div id=\\\"{{panel.id}}\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"panel.id + '-header'\\\"\\n             class=\\\"collapse\\\" [class.show]=\\\"panel.isOpen\\\" *ngIf=\\\"!destroyOnHide || panel.isOpen\\\">\\n          <div class=\\\"card-body\\\">\\n               <ng-template [ngTemplateOutlet]=\\\"panel.contentTpl?.templateRef\\\"></ng-template>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordionConfig\n    }];\n  }, {\n    activeIds: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    panelChange: [{\n      type: Output\n    }],\n    type: [{\n      type: Input\n    }],\n    closeOtherPanels: [{\n      type: Input,\n      args: ['closeOthers']\n    }],\n    panels: [{\n      type: ContentChildren,\n      args: [NgbPanel]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPanelToggle, [{\n    type: Directive,\n    args: [{\n      selector: 'button[ngbPanelToggle]',\n      host: {\n        'type': 'button',\n        '[disabled]': 'panel.disabled',\n        '[class.collapsed]': '!panel.isOpen',\n        '[attr.aria-expanded]': 'panel.isOpen',\n        '[attr.aria-controls]': 'panel.id',\n        '(click)': 'accordion.toggle(panel.id)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbAccordion\n    }, {\n      type: NgbPanel,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Host\n      }]\n    }];\n  }, {\n    ngbPanelToggle: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAccordionModule, {\n    declarations: function declarations() {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAccordionModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_ACCORDION_DIRECTIVES,\n      exports: NGB_ACCORDION_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAlertConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAlert, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-alert',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        'class': 'alert',\n        '[class.alert-dismissible]': 'dismissible'\n      },\n      template: \"\\n    <ng-content></ng-content>\\n    <button *ngIf=\\\"dismissible\\\" type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.alert.close\\\"\\n      (click)=\\\"closeHandler()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n    \",\n      styles: [\"ngb-alert{display:block}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbAlertConfig\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    close: [{\n      type: Output\n    }],\n    dismissible: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAlertModule, {\n    declarations: function declarations() {\n      return [NgbAlert];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbAlert];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbAlertModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbAlert],\n      exports: [NgbAlert],\n      imports: [CommonModule],\n      entryComponents: [NgbAlert]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbButtonLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButtonLabel]',\n      host: {\n        '[class.btn]': 'true',\n        '[class.active]': 'active',\n        '[class.disabled]': 'disabled',\n        '[class.focus]': 'focused'\n      }\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCheckBox, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=checkbox]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '(change)': 'onInputChange($event)',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      },\n      providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    valueChecked: [{\n      type: Input\n    }],\n    valueUnChecked: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRadioGroup, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbRadioGroup]',\n      host: {\n        'role': 'radiogroup'\n      },\n      providers: [NGB_RADIO_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [];\n  }, {\n    name: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRadio, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbButton][type=radio]',\n      host: {\n        '[checked]': 'checked',\n        '[disabled]': 'disabled',\n        '[name]': 'nameAttr',\n        '(change)': 'onChange()',\n        '(focus)': 'focused = true',\n        '(blur)': 'focused = false'\n      }\n    }]\n  }], function () {\n    return [{\n      type: NgbRadioGroup\n    }, {\n      type: NgbButtonLabel\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    value: [{\n      type: Input,\n      args: ['value']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    name: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbButtonsModule, {\n    declarations: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio],\n    exports: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbButtonsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_BUTTON_DIRECTIVES,\n      exports: NGB_BUTTON_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCarouselConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbSlide, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbSlide]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCarousel, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-carousel',\n      exportAs: 'ngbCarousel',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'carousel slide',\n        '[style.display]': '\"block\"',\n        'tabIndex': '0',\n        '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n        '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n      },\n      template: \"\\n    <ol class=\\\"carousel-indicators\\\" *ngIf=\\\"showNavigationIndicators\\\">\\n      <li *ngFor=\\\"let slide of slides\\\" [id]=\\\"slide.id\\\" [class.active]=\\\"slide.id === activeId\\\"\\n          (click)=\\\"select(slide.id, NgbSlideEventSource.INDICATOR)\\\"></li>\\n    </ol>\\n    <div class=\\\"carousel-inner\\\">\\n      <div *ngFor=\\\"let slide of slides\\\" class=\\\"carousel-item\\\" [class.active]=\\\"slide.id === activeId\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"slide.tplRef\\\"></ng-template>\\n      </div>\\n    </div>\\n    <a class=\\\"carousel-control-prev\\\" role=\\\"button\\\" (click)=\\\"prev(NgbSlideEventSource.ARROW_LEFT)\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.previous\\\">Previous</span>\\n    </a>\\n    <a class=\\\"carousel-control-next\\\" role=\\\"button\\\" (click)=\\\"next(NgbSlideEventSource.ARROW_RIGHT)\\\" *ngIf=\\\"showNavigationArrows\\\">\\n      <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n      <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.carousel.next\\\">Next</span>\\n    </a>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbCarouselConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    slide: [{\n      type: Output\n    }],\n    interval: [{\n      type: Input\n    }],\n    wrap: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    pauseOnHover: [{\n      type: Input\n    }],\n    showNavigationArrows: [{\n      type: Input\n    }],\n    showNavigationIndicators: [{\n      type: Input\n    }],\n    mouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n    mouseLeave: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }],\n    activeId: [{\n      type: Input\n    }],\n    slides: [{\n      type: ContentChildren,\n      args: [NgbSlide]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCarouselModule, {\n    declarations: function declarations() {\n      return [NgbCarousel, NgbSlide];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbCarousel, NgbSlide];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCarouselModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_CAROUSEL_DIRECTIVES,\n      exports: NGB_CAROUSEL_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCollapse, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbCollapse]',\n      exportAs: 'ngbCollapse',\n      host: {\n        '[class.collapse]': 'true',\n        '[class.show]': '!collapsed'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    collapsed: [{\n      type: Input,\n      args: ['ngbCollapse']\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCollapseModule, {\n    declarations: [NgbCollapse],\n    exports: [NgbCollapse]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCollapseModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbCollapse],\n      exports: [NgbCollapse]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_CALENDAR_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar ɵNgbCalendarGregorian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarGregorian);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarGregorian, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar ɵNgbDateStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateStructAdapter);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbDatepickerContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepicker, [{\n    type: Component,\n    args: [{\n      exportAs: 'ngbDatepicker',\n      selector: 'ngb-datepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ng-template #defaultDayTemplate let-date=\\\"date\\\" let-currentMonth=\\\"currentMonth\\\" let-selected=\\\"selected\\\"\\n                 let-disabled=\\\"disabled\\\" let-focused=\\\"focused\\\">\\n      <div ngbDatepickerDayView\\n        [date]=\\\"date\\\"\\n        [currentMonth]=\\\"currentMonth\\\"\\n        [selected]=\\\"selected\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [focused]=\\\"focused\\\">\\n      </div>\\n    </ng-template>\\n\\n    <ng-template #defaultContentTemplate>\\n      <div *ngFor=\\\"let month of model.months; let i = index;\\\" class=\\\"ngb-dp-month\\\">\\n        <div *ngIf=\\\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\\\" class=\\\"ngb-dp-month-name\\\">\\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\\n        </div>\\n        <ngb-datepicker-month [month]=\\\"month.firstDate\\\"></ngb-datepicker-month>\\n      </div>\\n    </ng-template>\\n\\n    <div class=\\\"ngb-dp-header\\\">\\n      <ngb-datepicker-navigation *ngIf=\\\"navigation !== 'none'\\\"\\n        [date]=\\\"model.firstDate\\\"\\n        [months]=\\\"model.months\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [showSelect]=\\\"model.navigation === 'select'\\\"\\n        [prevDisabled]=\\\"model.prevDisabled\\\"\\n        [nextDisabled]=\\\"model.nextDisabled\\\"\\n        [selectBoxes]=\\\"model.selectBoxes\\\"\\n        (navigate)=\\\"onNavigateEvent($event)\\\"\\n        (select)=\\\"onNavigateDateSelect($event)\\\">\\n      </ngb-datepicker-navigation>\\n    </div>\\n\\n    <div class=\\\"ngb-dp-content\\\" [class.ngb-dp-months]=\\\"!contentTemplate\\\" #content>\\n      <ng-template [ngTemplateOutlet]=\\\"contentTemplate?.templateRef || defaultContentTemplate\\\"></ng-template>\\n    </div>\\n\\n    <ng-template [ngTemplateOutlet]=\\\"footerTemplate\\\"></ng-template>\\n  \",\n      providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService],\n      styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerService\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepickerConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    navigate: [{\n      type: Output\n    }],\n    dateSelect: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    _defaultDayTemplate: [{\n      type: ViewChild,\n      args: ['defaultDayTemplate', {\n        static: true\n      }]\n    }],\n    _contentEl: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [NgbDatepickerContent, {\n        static: true\n      }]\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerKeyboardService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerMonth, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-month',\n      host: {\n        'role': 'grid',\n        '(keydown)': 'onKeyDown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div *ngIf=\\\"datepicker.showWeekdays\\\" class=\\\"ngb-dp-week ngb-dp-weekdays\\\" role=\\\"row\\\">\\n      <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-weekday ngb-dp-showweek\\\"></div>\\n      <div *ngFor=\\\"let w of viewModel.weekdays\\\" class=\\\"ngb-dp-weekday small\\\" role=\\\"columnheader\\\">\\n        {{ i18n.getWeekdayShortName(w) }}\\n      </div>\\n    </div>\\n    <ng-template ngFor let-week [ngForOf]=\\\"viewModel.weeks\\\">\\n      <div *ngIf=\\\"!week.collapsed\\\" class=\\\"ngb-dp-week\\\" role=\\\"row\\\">\\n        <div *ngIf=\\\"datepicker.showWeekNumbers\\\" class=\\\"ngb-dp-week-number small text-muted\\\">{{ i18n.getWeekNumerals(week.number) }}</div>\\n        <div *ngFor=\\\"let day of week.days\\\" (click)=\\\"doSelect(day); $event.preventDefault()\\\" class=\\\"ngb-dp-day\\\" role=\\\"gridcell\\\"\\n          [class.disabled]=\\\"day.context.disabled\\\"\\n          [tabindex]=\\\"day.tabindex\\\"\\n          [class.hidden]=\\\"day.hidden\\\"\\n          [class.ngb-dp-today]=\\\"day.context.today\\\"\\n          [attr.aria-label]=\\\"day.ariaLabel\\\">\\n          <ng-template [ngIf]=\\\"!day.hidden\\\">\\n            <ng-template [ngTemplateOutlet]=\\\"datepicker.dayTemplate\\\" [ngTemplateOutletContext]=\\\"day.context\\\"></ng-template>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </ng-template>\\n  \",\n      styles: [\"ngb-datepicker-month{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0;background-color:#f8f9fa;background-color:var(--light)}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}.ngb-dp-day[tabindex=\\\"0\\\"]{z-index:1}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: NgbDatepicker\n    }, {\n      type: NgbDatepickerKeyboardService\n    }, {\n      type: NgbDatepickerService\n    }];\n  }, {\n    month: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigation, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"ngb-dp-arrow\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickPrev($event)\\\" [disabled]=\\\"prevDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.previous-month\\\" aria-label=\\\"Previous month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.previous-month\\\" title=\\\"Previous month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    <ngb-datepicker-navigation-select *ngIf=\\\"showSelect\\\" class=\\\"ngb-dp-navigation-select\\\"\\n      [date]=\\\"date\\\"\\n      [disabled] = \\\"disabled\\\"\\n      [months]=\\\"selectBoxes.months\\\"\\n      [years]=\\\"selectBoxes.years\\\"\\n      (select)=\\\"select.emit($event)\\\">\\n    </ngb-datepicker-navigation-select>\\n\\n    <ng-template *ngIf=\\\"!showSelect\\\" ngFor let-month [ngForOf]=\\\"months\\\" let-i=\\\"index\\\">\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i > 0\\\"></div>\\n      <div class=\\\"ngb-dp-month-name\\\">\\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\\n      </div>\\n      <div class=\\\"ngb-dp-arrow\\\" *ngIf=\\\"i !== months.length - 1\\\"></div>\\n    </ng-template>\\n    <div class=\\\"ngb-dp-arrow right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-link ngb-dp-arrow-btn\\\" (click)=\\\"onClickNext($event)\\\" [disabled]=\\\"nextDisabled\\\"\\n              i18n-aria-label=\\\"@@ngb.datepicker.next-month\\\" aria-label=\\\"Next month\\\"\\n              i18n-title=\\\"@@ngb.datepicker.next-month\\\" title=\\\"Next month\\\">\\n        <span class=\\\"ngb-dp-navigation-chevron\\\"></span>\\n      </button>\\n    </div>\\n    \",\n      styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    months: [{\n      type: Input\n    }],\n    navigate: [{\n      type: Output\n    }],\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    showSelect: [{\n      type: Input\n    }],\n    prevDisabled: [{\n      type: Input\n    }],\n    nextDisabled: [{\n      type: Input\n    }],\n    selectBoxes: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateParserFormatter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar ɵNgbDateISOParserFormatter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateISOParserFormatter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbInputDatepickerConfig_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbInputDatepickerConfig);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbInputDatepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbInputDatepicker, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbDatepicker]',\n      exportAs: 'ngbDatepicker',\n      host: {\n        '(input)': 'manualDateChange($event.target.value)',\n        '(change)': 'manualDateChange($event.target.value, true)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '[disabled]': 'disabled'\n      },\n      providers: [NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, {\n        provide: NgbDatepickerConfig,\n        useExisting: NgbInputDatepickerConfig\n      }]\n    }]\n  }], function () {\n    return [{\n      type: NgbDateParserFormatter\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: NgbCalendar\n    }, {\n      type: NgbDateAdapter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbInputDatepickerConfig\n    }];\n  }, {\n    dateSelect: [{\n      type: Output\n    }],\n    navigate: [{\n      type: Output\n    }],\n    closed: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    dayTemplate: [{\n      type: Input\n    }],\n    dayTemplateData: [{\n      type: Input\n    }],\n    displayMonths: [{\n      type: Input\n    }],\n    firstDayOfWeek: [{\n      type: Input\n    }],\n    footerTemplate: [{\n      type: Input\n    }],\n    markDisabled: [{\n      type: Input\n    }],\n    minDate: [{\n      type: Input\n    }],\n    maxDate: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    outsideDays: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    restoreFocus: [{\n      type: Input\n    }],\n    showWeekdays: [{\n      type: Input\n    }],\n    showWeekNumbers: [{\n      type: Input\n    }],\n    startDate: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    positionTarget: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerDayView, [{\n    type: Component,\n    args: [{\n      selector: '[ngbDatepickerDayView]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'btn-light',\n        '[class.bg-primary]': 'selected',\n        '[class.text-white]': 'selected',\n        '[class.text-muted]': 'isMuted()',\n        '[class.outside]': 'isMuted()',\n        '[class.active]': 'focused'\n      },\n      template: \"{{ i18n.getDayNumerals(date) }}\",\n      styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }];\n  }, {\n    currentMonth: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigationSelect, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-datepicker-navigation-select',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <select #month\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-month\\\" aria-label=\\\"Select month\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-month\\\" title=\\\"Select month\\\"\\n      (change)=\\\"changeMonth($event.target.value)\\\">\\n        <option *ngFor=\\\"let m of months\\\" [attr.aria-label]=\\\"i18n.getMonthFullName(m, date?.year)\\\"\\n                [value]=\\\"m\\\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\\n    </select><select #year\\n      [disabled]=\\\"disabled\\\"\\n      class=\\\"custom-select\\\"\\n      i18n-aria-label=\\\"@@ngb.datepicker.select-year\\\" aria-label=\\\"Select year\\\"\\n      i18n-title=\\\"@@ngb.datepicker.select-year\\\" title=\\\"Select year\\\"\\n      (change)=\\\"changeYear($event.target.value)\\\">\\n        <option *ngFor=\\\"let y of years\\\" [value]=\\\"y\\\">{{ i18n.getYearNumerals(y) }}</option>\\n    </select>\\n  \",\n      styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}ngb-datepicker-navigation-select>.custom-select:focus{z-index:1}ngb-datepicker-navigation-select>.custom-select::-ms-value{background-color:transparent!important}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbDatepickerI18n\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    select: [{\n      type: Output\n    }],\n    date: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    months: [{\n      type: Input\n    }],\n    years: [{\n      type: Input\n    }],\n    monthSelect: [{\n      type: ViewChild,\n      args: ['month', {\n        static: true,\n        read: ElementRef\n      }]\n    }],\n    yearSelect: [{\n      type: ViewChild,\n      args: ['year', {\n        static: true,\n        read: ElementRef\n      }]\n    }]\n  });\n})();\n\nvar ɵNgbCalendarHijri_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHijri);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarHijri, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbCalendarIslamicCivil_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicCivil, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbCalendarIslamicUmalqura_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicUmalqura, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbCalendarPersian_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarPersian);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarPersian, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbCalendarHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHebrew);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbCalendarHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbDatepickerI18nHebrew_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nHebrew, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbDateNativeAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeAdapter);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateNativeAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar ɵNgbDateNativeUTCAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDateNativeUTCAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDatepickerModule, {\n    declarations: function declarations() {\n      return [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDatepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker],\n      exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n      imports: [CommonModule, FormsModule],\n      entryComponents: [NgbDatepicker]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavbar, [{\n    type: Directive,\n    args: [{\n      selector: '.navbar'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownItem]',\n      host: {\n        'class': 'dropdown-item',\n        '[class.disabled]': 'disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownMenu, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownMenu]',\n      host: {\n        '[class.dropdown-menu]': 'true',\n        '[class.show]': 'dropdown.isOpen()',\n        '[attr.x-placement]': 'placement',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)',\n        '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n        '(keydown.Space)': 'dropdown.onKeyDown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }];\n  }, {\n    menuItems: [{\n      type: ContentChildren,\n      args: [NgbDropdownItem]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownAnchor, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownAnchor]',\n      host: {\n        'class': 'dropdown-toggle',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'dropdown.isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownToggle, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdownToggle]',\n      host: {\n        'class': 'dropdown-toggle',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'dropdown.isOpen()',\n        '(click)': 'dropdown.toggle()',\n        '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n        '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n        '(keydown.Home)': 'dropdown.onKeyDown($event)',\n        '(keydown.End)': 'dropdown.onKeyDown($event)'\n      },\n      providers: [{\n        provide: NgbDropdownAnchor,\n        useExisting: forwardRef(function () {\n          return NgbDropdownToggle_1;\n        })\n      }]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbDropdown;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdown, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbDropdown]',\n      exportAs: 'ngbDropdown',\n      host: {\n        '[class.show]': 'isOpen()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbDropdownConfig\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: NgbNavbar,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    _open: [{\n      type: Input,\n      args: ['open']\n    }],\n    openChange: [{\n      type: Output\n    }],\n    placement: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    display: [{\n      type: Input\n    }],\n    _menu: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        static: false\n      }]\n    }],\n    _menuElement: [{\n      type: ContentChild,\n      args: [NgbDropdownMenu, {\n        read: ElementRef,\n        static: false\n      }]\n    }],\n    _anchor: [{\n      type: ContentChild,\n      args: [NgbDropdownAnchor, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDropdownModule, {\n    declarations: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar],\n    exports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbDropdownModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_DROPDOWN_DIRECTIVES,\n      exports: NGB_DROPDOWN_DIRECTIVES\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollBar, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalBackdrop, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-backdrop',\n      encapsulation: ViewEncapsulation.None,\n      template: '',\n      host: {\n        '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")',\n        'style': 'z-index: 1050'\n      }\n    }]\n  }], null, {\n    backdropClass: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-modal-window',\n      host: {\n        '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n        'role': 'dialog',\n        'tabindex': '-1',\n        '[attr.aria-modal]': 'true',\n        '[attr.aria-labelledby]': 'ariaLabelledBy'\n      },\n      template: \"\\n    <div #dialog [class]=\\\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\\n     (scrollable ? ' modal-dialog-scrollable' : '')\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\"><ng-content></ng-content></div>\\n    </div>\\n    \",\n      encapsulation: ViewEncapsulation.None,\n      styles: [\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, {\n    backdrop: [{\n      type: Input\n    }],\n    keyboard: [{\n      type: Input\n    }],\n    dismissEvent: [{\n      type: Output,\n      args: ['dismiss']\n    }],\n    _dialogEl: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    ariaLabelledBy: [{\n      type: Input\n    }],\n    centered: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    windowClass: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalStack, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollBar\n    }, {\n      type: ɵngcc0.RendererFactory2\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModal, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: NgbModalStack\n    }, {\n      type: NgbModalConfig\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModalModule, {\n    declarations: [NgbModalBackdrop, NgbModalWindow]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModalModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbModalBackdrop, NgbModalWindow],\n      entryComponents: [NgbModalBackdrop, NgbModalWindow],\n      providers: [NgbModal]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbNavContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavItem, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNavItem]',\n      exportAs: 'ngbNavItem',\n      host: {\n        '[class.nav-item]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return NgbNav;\n        })]\n      }]\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    domId: [{\n      type: Input\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    _id: [{\n      type: Input,\n      args: ['ngbNavItem']\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbNavContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNav, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbNav]',\n      exportAs: 'ngbNav',\n      host: {\n        '[class.nav]': 'true',\n        '[class.flex-column]': \"orientation === 'vertical'\",\n        '[attr.aria-orientation]': \"orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined\",\n        '[attr.role]': \"role ? role : roles ? 'tablist' : undefined\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    activeIdChange: [{\n      type: Output\n    }],\n    navChange: [{\n      type: Output\n    }],\n    destroyOnHide: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    roles: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [NgbNavItem]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavLink, [{\n    type: Directive,\n    args: [{\n      selector: 'a[ngbNavLink]',\n      host: {\n        '[id]': 'navItem.domId',\n        '[class.nav-link]': 'true',\n        '[class.nav-item]': 'hasNavItemClass()',\n        '[attr.role]': \"role ? role : nav.roles ? 'tab' : undefined\",\n        'href': '',\n        '[class.active]': 'navItem.active',\n        '[class.disabled]': 'navItem.disabled',\n        '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n        '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n        '[attr.aria-selected]': 'navItem.active',\n        '[attr.aria-disabled]': 'navItem.disabled',\n        '(click)': 'nav.click(navItem); $event.preventDefault()'\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['role']\n      }]\n    }, {\n      type: NgbNavItem\n    }, {\n      type: NgbNav\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavOutlet, [{\n    type: Component,\n    args: [{\n      selector: '[ngbNavOutlet]',\n      host: {\n        '[class.tab-content]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n      <ng-template ngFor let-item [ngForOf]=\\\"nav.items\\\">\\n          <div class=\\\"tab-pane\\\"\\n               *ngIf=\\\"item.isPanelInDom()\\\"\\n               [id]=\\\"item.panelDomId\\\"\\n               [class.active]=\\\"item.active\\\"\\n               [attr.role]=\\\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\\\"\\n               [attr.aria-labelledby]=\\\"item.domId\\\">\\n              <ng-template [ngTemplateOutlet]=\\\"item.contentTpl?.templateRef\\\"\\n                           [ngTemplateOutletContext]=\\\"{$implicit: item.active}\\\"></ng-template>\\n          </div>\\n      </ng-template>\\n  \"\n    }]\n  }], null, {\n    paneRole: [{\n      type: Input\n    }],\n    nav: [{\n      type: Input,\n      args: ['ngbNavOutlet']\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbNavModule, {\n    declarations: function declarations() {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbNavModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_NAV_DIRECTIVES,\n      exports: NGB_NAV_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationEllipsis, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationEllipsis]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationFirst, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationFirst]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationLast, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationLast]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationNext, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNext]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationNumber, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationNumber]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbPaginationPrevious]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPagination, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-pagination',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'role': 'navigation'\n      },\n      template: \"\\n    <ng-template #first><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.first\\\">&laquo;&laquo;</span></ng-template>\\n    <ng-template #previous><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.previous\\\">&laquo;</span></ng-template>\\n    <ng-template #next><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.next\\\">&raquo;</span></ng-template>\\n    <ng-template #last><span aria-hidden=\\\"true\\\" i18n=\\\"@@ngb.pagination.last\\\">&raquo;&raquo;</span></ng-template>\\n    <ng-template #ellipsis>...</ng-template>\\n    <ng-template #defaultNumber let-page let-currentPage=\\\"currentPage\\\">\\n      {{ page }}\\n      <span *ngIf=\\\"page === currentPage\\\" class=\\\"sr-only\\\">(current)</span>\\n    </ng-template>\\n    <ul [class]=\\\"'pagination' + (size ? ' pagination-' + size : '')\\\">\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"First\\\" i18n-aria-label=\\\"@@ngb.pagination.first-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplFirst?.templateRef || first\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\"\\n        [class.disabled]=\\\"previousDisabled()\\\">\\n        <a aria-label=\\\"Previous\\\" i18n-aria-label=\\\"@@ngb.pagination.previous-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page-1); $event.preventDefault()\\\" [attr.tabindex]=\\\"previousDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"previousDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplPrevious?.templateRef || previous\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: previousDisabled()}\\\"></ng-template>\\n        </a>\\n      </li>\\n      <li *ngFor=\\\"let pageNumber of pages\\\" class=\\\"page-item\\\" [class.active]=\\\"pageNumber === page\\\"\\n        [class.disabled]=\\\"isEllipsis(pageNumber) || disabled\\\" [attr.aria-current]=\\\"(pageNumber === page ? 'page' : null)\\\">\\n        <a *ngIf=\\\"isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" tabindex=\\\"-1\\\" aria-disabled=\\\"true\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplEllipsis?.templateRef || ellipsis\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: true, currentPage: page}\\\"></ng-template>\\n        </a>\\n        <a *ngIf=\\\"!isEllipsis(pageNumber)\\\" class=\\\"page-link\\\" href (click)=\\\"selectPage(pageNumber); $event.preventDefault()\\\"\\n          [attr.tabindex]=\\\"disabled ? '-1' : null\\\" [attr.aria-disabled]=\\\"disabled ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNumber?.templateRef || defaultNumber\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n      <li *ngIf=\\\"directionLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Next\\\" i18n-aria-label=\\\"@@ngb.pagination.next-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(page+1); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplNext?.templateRef || next\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n\\n      <li *ngIf=\\\"boundaryLinks\\\" class=\\\"page-item\\\" [class.disabled]=\\\"nextDisabled()\\\">\\n        <a aria-label=\\\"Last\\\" i18n-aria-label=\\\"@@ngb.pagination.last-aria\\\" class=\\\"page-link\\\" href\\n          (click)=\\\"selectPage(pageCount); $event.preventDefault()\\\" [attr.tabindex]=\\\"nextDisabled() ? '-1' : null\\\"\\n          [attr.aria-disabled]=\\\"nextDisabled() ? 'true' : null\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tplLast?.templateRef || last\\\"\\n                       [ngTemplateOutletContext]=\\\"{disabled: nextDisabled(), currentPage: page}\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbPaginationConfig\n    }];\n  }, {\n    page: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    boundaryLinks: [{\n      type: Input\n    }],\n    directionLinks: [{\n      type: Input\n    }],\n    ellipses: [{\n      type: Input\n    }],\n    maxSize: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    rotate: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    tplEllipsis: [{\n      type: ContentChild,\n      args: [NgbPaginationEllipsis, {\n        static: false\n      }]\n    }],\n    tplFirst: [{\n      type: ContentChild,\n      args: [NgbPaginationFirst, {\n        static: false\n      }]\n    }],\n    tplLast: [{\n      type: ContentChild,\n      args: [NgbPaginationLast, {\n        static: false\n      }]\n    }],\n    tplNext: [{\n      type: ContentChild,\n      args: [NgbPaginationNext, {\n        static: false\n      }]\n    }],\n    tplNumber: [{\n      type: ContentChild,\n      args: [NgbPaginationNumber, {\n        static: false\n      }]\n    }],\n    tplPrevious: [{\n      type: ContentChild,\n      args: [NgbPaginationPrevious, {\n        static: false\n      }]\n    }],\n    collectionSize: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPaginationModule, {\n    declarations: function declarations() {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPaginationModule, [{\n    type: NgModule,\n    args: [{\n      declarations: DIRECTIVES,\n      exports: DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopoverConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopoverWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-popover-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: \"\\n    <div class=\\\"arrow\\\"></div>\\n    <h3 class=\\\"popover-header\\\" *ngIf=\\\"title != null\\\">\\n      <ng-template #simpleTitle>{{title}}</ng-template>\\n      <ng-template [ngTemplateOutlet]=\\\"isTitleTemplate() ? title : simpleTitle\\\" [ngTemplateOutletContext]=\\\"context\\\"></ng-template>\\n    </h3>\\n    <div class=\\\"popover-body\\\"><ng-content></ng-content></div>\",\n      styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"]\n    }]\n  }], null, {\n    title: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    context: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopover, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbPopover]',\n      exportAs: 'ngbPopover'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbPopoverConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disablePopover: [{\n      type: Input\n    }],\n    popoverClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbPopover: [{\n      type: Input\n    }],\n    popoverTitle: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPopoverModule, {\n    declarations: function declarations() {\n      return [NgbPopover, NgbPopoverWindow];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbPopover];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbPopover, NgbPopoverWindow],\n      exports: [NgbPopover],\n      imports: [CommonModule],\n      entryComponents: [NgbPopoverWindow]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbProgressbarConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbProgressbar, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-progressbar',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <div class=\\\"progress\\\" [style.height]=\\\"height\\\">\\n      <div class=\\\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\\\"\\n      role=\\\"progressbar\\\" [style.width.%]=\\\"getPercentValue()\\\"\\n      [attr.aria-valuenow]=\\\"getValue()\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuemax]=\\\"max\\\">\\n        <span *ngIf=\\\"showValue\\\" i18n=\\\"@@ngb.progressbar.value\\\">{{getPercentValue()}}%</span><ng-content></ng-content>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbProgressbarConfig\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    animated: [{\n      type: Input\n    }],\n    striped: [{\n      type: Input\n    }],\n    textType: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    showValue: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbProgressbarModule, {\n    declarations: function declarations() {\n      return [NgbProgressbar];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbProgressbar];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbProgressbarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbProgressbar],\n      exports: [NgbProgressbar],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRatingConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRating, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-rating',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'd-inline-flex',\n        '[tabindex]': 'disabled ? -1 : 0',\n        'role': 'slider',\n        'aria-valuemin': '0',\n        '[attr.aria-valuemax]': 'max',\n        '[attr.aria-valuenow]': 'nextRate',\n        '[attr.aria-valuetext]': 'ariaValueText()',\n        '[attr.aria-disabled]': 'readonly ? true : null',\n        '(blur)': 'handleBlur()',\n        '(keydown)': 'handleKeyDown($event)',\n        '(mouseleave)': 'reset()'\n      },\n      template: \"\\n    <ng-template #t let-fill=\\\"fill\\\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"contexts\\\" let-index=\\\"index\\\">\\n      <span class=\\\"sr-only\\\">({{ index < nextRate ? '*' : ' ' }})</span>\\n      <span (mouseenter)=\\\"enter(index + 1)\\\" (click)=\\\"handleClick(index + 1)\\\" [style.cursor]=\\\"readonly || disabled ? 'default' : 'pointer'\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"starTemplate || starTemplateFromContent || t\\\" [ngTemplateOutletContext]=\\\"contexts[index]\\\">\\n        </ng-template>\\n      </span>\\n    </ng-template>\\n  \",\n      providers: [NGB_RATING_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: NgbRatingConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    hover: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    rateChange: [{\n      type: Output\n    }],\n    max: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    rate: [{\n      type: Input\n    }],\n    resettable: [{\n      type: Input\n    }],\n    starTemplate: [{\n      type: Input\n    }],\n    starTemplateFromContent: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbRatingModule, {\n    declarations: function declarations() {\n      return [NgbRating];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbRating];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbRatingModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbRating],\n      exports: [NgbRating],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabsetConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabTitle, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbTabTitle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[ngbTabContent]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTab, [{\n    type: Directive,\n    args: [{\n      selector: 'ngb-tab'\n    }]\n  }], function () {\n    return [];\n  }, {\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    titleTpls: [{\n      type: ContentChildren,\n      args: [NgbTabTitle, {\n        descendants: false\n      }]\n    }],\n    contentTpls: [{\n      type: ContentChildren,\n      args: [NgbTabContent, {\n        descendants: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabset, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tabset',\n      exportAs: 'ngbTabset',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <ul [class]=\\\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\\\" role=\\\"tablist\\\">\\n      <li class=\\\"nav-item\\\" *ngFor=\\\"let tab of tabs\\\">\\n        <a [id]=\\\"tab.id\\\" class=\\\"nav-link\\\" [class.active]=\\\"tab.id === activeId\\\" [class.disabled]=\\\"tab.disabled\\\"\\n          href (click)=\\\"select(tab.id); $event.preventDefault()\\\" role=\\\"tab\\\" [attr.tabindex]=\\\"(tab.disabled ? '-1': undefined)\\\"\\n          [attr.aria-controls]=\\\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\\\"\\n          [attr.aria-selected]=\\\"tab.id === activeId\\\" [attr.aria-disabled]=\\\"tab.disabled\\\">\\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\\\"tab.titleTpl?.templateRef\\\"></ng-template>\\n        </a>\\n      </li>\\n    </ul>\\n    <div class=\\\"tab-content\\\">\\n      <ng-template ngFor let-tab [ngForOf]=\\\"tabs\\\">\\n        <div\\n          class=\\\"tab-pane {{tab.id === activeId ? 'active' : null}}\\\"\\n          *ngIf=\\\"!destroyOnHide || tab.id === activeId\\\"\\n          role=\\\"tabpanel\\\"\\n          [attr.aria-labelledby]=\\\"tab.id\\\" id=\\\"{{tab.id}}-panel\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"tab.contentTpl?.templateRef\\\"></ng-template>\\n        </div>\\n      </ng-template>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: NgbTabsetConfig\n    }];\n  }, {\n    destroyOnHide: [{\n      type: Input\n    }],\n    tabChange: [{\n      type: Output\n    }],\n    type: [{\n      type: Input\n    }],\n    justify: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    activeId: [{\n      type: Input\n    }],\n    tabs: [{\n      type: ContentChildren,\n      args: [NgbTab]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTabsetModule, {\n    declarations: function declarations() {\n      return [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTabsetModule, [{\n    type: NgModule,\n    args: [{\n      declarations: NGB_TABSET_DIRECTIVES,\n      exports: NGB_TABSET_DIRECTIVES,\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimeAdapter, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY\n    }]\n  }], null, null);\n})();\n\nvar ɵNgbTimeStructAdapter_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgbTimeStructAdapter);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimeStructAdapter, [{\n    type: Injectable\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18n, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: NGB_TIMEPICKER_I18N_FACTORY,\n      deps: [LOCALE_ID]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerI18nDefault, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepicker, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-timepicker',\n      encapsulation: ViewEncapsulation.None,\n      template: \"\\n    <fieldset [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\">\\n      <div class=\\\"ngb-tp\\\">\\n        <div class=\\\"ngb-tp-input-container ngb-tp-hour\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-hours\\\">Increment hours</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\"\\n            [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"HH\\\" i18n-placeholder=\\\"@@ngb.timepicker.HH\\\"\\n            [value]=\\\"formatHour(model?.hour)\\\" (change)=\\\"updateHour($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Hours\\\" i18n-aria-label=\\\"@@ngb.timepicker.hours\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeHour(hourStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeHour(-hourStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeHour(-hourStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-hours\\\">Decrement hours</span>\\n          </button>\\n        </div>\\n        <div class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div class=\\\"ngb-tp-input-container ngb-tp-minute\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-minutes\\\">Increment minutes</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"MM\\\" i18n-placeholder=\\\"@@ngb.timepicker.MM\\\"\\n            [value]=\\\"formatMinSec(model?.minute)\\\" (change)=\\\"updateMinute($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Minutes\\\" i18n-aria-label=\\\"@@ngb.timepicker.minutes\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeMinute(minuteStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeMinute(-minuteStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeMinute(-minuteStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\"  i18n=\\\"@@ngb.timepicker.decrement-minutes\\\">Decrement minutes</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-spacer\\\">:</div>\\n        <div *ngIf=\\\"seconds\\\" class=\\\"ngb-tp-input-container ngb-tp-second\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\" [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.increment-seconds\\\">Increment seconds</span>\\n          </button>\\n          <input type=\\\"text\\\" class=\\\"ngb-tp-input form-control\\\" [class.form-control-sm]=\\\"isSmallSize\\\" [class.form-control-lg]=\\\"isLargeSize\\\"\\n            maxlength=\\\"2\\\" inputmode=\\\"numeric\\\" placeholder=\\\"SS\\\" i18n-placeholder=\\\"@@ngb.timepicker.SS\\\"\\n            [value]=\\\"formatMinSec(model?.second)\\\" (change)=\\\"updateSecond($event.target.value)\\\"\\n            [readOnly]=\\\"readonlyInputs\\\" [disabled]=\\\"disabled\\\" aria-label=\\\"Seconds\\\" i18n-aria-label=\\\"@@ngb.timepicker.seconds\\\"\\n            (input)=\\\"formatInput($event.target)\\\"\\n            (keydown.ArrowUp)=\\\"changeSecond(secondStep); $event.preventDefault()\\\"\\n            (keydown.ArrowDown)=\\\"changeSecond(-secondStep); $event.preventDefault()\\\">\\n          <button *ngIf=\\\"spinners\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" (click)=\\\"changeSecond(-secondStep)\\\"\\n            class=\\\"btn btn-link\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"  [class.disabled]=\\\"disabled\\\"\\n            [disabled]=\\\"disabled\\\">\\n            <span class=\\\"chevron ngb-tp-chevron bottom\\\"></span>\\n            <span class=\\\"sr-only\\\" i18n=\\\"@@ngb.timepicker.decrement-seconds\\\">Decrement seconds</span>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-spacer\\\"></div>\\n        <div *ngIf=\\\"meridian\\\" class=\\\"ngb-tp-meridian\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" [class.btn-sm]=\\\"isSmallSize\\\" [class.btn-lg]=\\\"isLargeSize\\\"\\n            [disabled]=\\\"disabled\\\" [class.disabled]=\\\"disabled\\\"\\n                  (click)=\\\"toggleMeridian()\\\">\\n            <ng-container *ngIf=\\\"model?.hour >= 12; else am\\\" i18n=\\\"@@ngb.timepicker.PM\\\">{{ i18n.getAfternoonPeriod() }}</ng-container>\\n            <ng-template #am i18n=\\\"@@ngb.timepicker.AM\\\">{{ i18n.getMorningPeriod() }}</ng-template>\\n          </button>\\n        </div>\\n      </div>\\n    </fieldset>\\n  \",\n      providers: [NGB_TIMEPICKER_VALUE_ACCESSOR],\n      styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"]\n    }]\n  }], function () {\n    return [{\n      type: NgbTimepickerConfig\n    }, {\n      type: NgbTimeAdapter\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: NgbTimepickerI18n\n    }];\n  }, {\n    meridian: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    seconds: [{\n      type: Input\n    }],\n    hourStep: [{\n      type: Input\n    }],\n    minuteStep: [{\n      type: Input\n    }],\n    secondStep: [{\n      type: Input\n    }],\n    readonlyInputs: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTimepickerModule, {\n    declarations: function declarations() {\n      return [NgbTimepicker];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTimepicker];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTimepickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTimepicker],\n      exports: [NgbTimepicker],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToastConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToastHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbToastHeader]'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToast, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-toast',\n      exportAs: 'ngbToast',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'role': 'alert',\n        '[attr.aria-live]': 'ariaLive',\n        'aria-atomic': 'true',\n        '[class.toast]': 'true',\n        '[class.show]': 'true'\n      },\n      template: \"\\n    <ng-template #headerTpl>\\n      <strong class=\\\"mr-auto\\\">{{header}}</strong>\\n    </ng-template>\\n    <ng-template [ngIf]=\\\"contentHeaderTpl || header\\\">\\n      <div class=\\\"toast-header\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"contentHeaderTpl || headerTpl\\\"></ng-template>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" i18n-aria-label=\\\"@@ngb.toast.close-aria\\\" (click)=\\\"hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n    </ng-template>\\n    <div class=\\\"toast-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  \",\n      styles: [\".ngb-toasts{position:fixed;top:0;right:0;margin:.5em;z-index:1200}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\"]\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['aria-live']\n      }]\n    }, {\n      type: NgbToastConfig\n    }];\n  }, {\n    contentHeaderTpl: [{\n      type: ContentChild,\n      args: [NgbToastHeader, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    hideOutput: [{\n      type: Output,\n      args: ['hide']\n    }],\n    delay: [{\n      type: Input\n    }],\n    autohide: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbToastModule, {\n    declarations: function declarations() {\n      return [NgbToast, NgbToastHeader];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbToast, NgbToastHeader];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbToastModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbToast, NgbToastHeader],\n      imports: [CommonModule],\n      exports: [NgbToast, NgbToastHeader]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltipConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltipWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-tooltip-window',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")',\n        'role': 'tooltip',\n        '[id]': 'id'\n      },\n      template: \"<div class=\\\"arrow\\\"></div><div class=\\\"tooltip-inner\\\"><ng-content></ng-content></div>\",\n      styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"]\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltip, [{\n    type: Directive,\n    args: [{\n      selector: '[ngbTooltip]',\n      exportAs: 'ngbTooltip'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: NgbTooltipConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    shown: [{\n      type: Output\n    }],\n    hidden: [{\n      type: Output\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    disableTooltip: [{\n      type: Input\n    }],\n    tooltipClass: [{\n      type: Input\n    }],\n    openDelay: [{\n      type: Input\n    }],\n    closeDelay: [{\n      type: Input\n    }],\n    ngbTooltip: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTooltipModule, {\n    declarations: [NgbTooltip, NgbTooltipWindow],\n    exports: [NgbTooltip]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTooltipModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTooltip, NgbTooltipWindow],\n      exports: [NgbTooltip],\n      entryComponents: [NgbTooltipWindow]\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbHighlight, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-highlight',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-template ngFor [ngForOf]=\\\"parts\\\" let-part let-isOdd=\\\"odd\\\">\" + \"<span *ngIf=\\\"isOdd; else even\\\" [class]=\\\"highlightClass\\\">{{part}}</span><ng-template #even>{{part}}</ng-template>\" + \"</ng-template>\",\n      styles: [\".ngb-highlight{font-weight:700}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    highlightClass: [{\n      type: Input\n    }],\n    result: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeaheadWindow, [{\n    type: Component,\n    args: [{\n      selector: 'ngb-typeahead-window',\n      exportAs: 'ngbTypeaheadWindow',\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        '(mousedown)': '$event.preventDefault()',\n        'class': 'dropdown-menu show',\n        'role': 'listbox',\n        '[id]': 'id'\n      },\n      template: \"\\n    <ng-template #rt let-result=\\\"result\\\" let-term=\\\"term\\\" let-formatter=\\\"formatter\\\">\\n      <ngb-highlight [result]=\\\"formatter(result)\\\" [term]=\\\"term\\\"></ngb-highlight>\\n    </ng-template>\\n    <ng-template ngFor [ngForOf]=\\\"results\\\" let-result let-idx=\\\"index\\\">\\n      <button type=\\\"button\\\" class=\\\"dropdown-item\\\" role=\\\"option\\\"\\n        [id]=\\\"id + '-' + idx\\\"\\n        [class.active]=\\\"idx === activeIdx\\\"\\n        (mouseenter)=\\\"markActive(idx)\\\"\\n        (click)=\\\"select(result)\\\">\\n          <ng-template [ngTemplateOutlet]=\\\"resultTemplate || rt\\\"\\n          [ngTemplateOutletContext]=\\\"{result: result, term: term, formatter: formatter}\\\"></ng-template>\\n      </button>\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    focusFirst: [{\n      type: Input\n    }],\n    formatter: [{\n      type: Input\n    }],\n    selectEvent: [{\n      type: Output,\n      args: ['select']\n    }],\n    activeChangeEvent: [{\n      type: Output,\n      args: ['activeChange']\n    }],\n    id: [{\n      type: Input\n    }],\n    results: [{\n      type: Input\n    }],\n    term: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Live, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [ARIA_LIVE_DELAY]\n      }]\n    }];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeaheadConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeahead, [{\n    type: Directive,\n    args: [{\n      selector: 'input[ngbTypeahead]',\n      exportAs: 'ngbTypeahead',\n      host: {\n        '(blur)': 'handleBlur()',\n        '[class.open]': 'isPopupOpen()',\n        '(keydown)': 'handleKeyDown($event)',\n        '[autocomplete]': 'autocomplete',\n        'autocapitalize': 'off',\n        'autocorrect': 'off',\n        'role': 'combobox',\n        'aria-multiline': 'false',\n        '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n        '[attr.aria-activedescendant]': 'activeDescendant',\n        '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n        '[attr.aria-expanded]': 'isPopupOpen()'\n      },\n      providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: NgbTypeaheadConfig\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: Live\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }];\n  }, {\n    autocomplete: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    selectItem: [{\n      type: Output\n    }],\n    container: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    focusFirst: [{\n      type: Input\n    }],\n    showHint: [{\n      type: Input\n    }],\n    inputFormatter: [{\n      type: Input\n    }],\n    ngbTypeahead: [{\n      type: Input\n    }],\n    resultFormatter: [{\n      type: Input\n    }],\n    resultTemplate: [{\n      type: Input\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTypeaheadModule, {\n    declarations: function declarations() {\n      return [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [NgbTypeahead, NgbHighlight];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbTypeaheadModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n      exports: [NgbTypeahead, NgbHighlight],\n      imports: [CommonModule],\n      entryComponents: [NgbTypeaheadWindow]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModule, {\n    imports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule, NgbTabsetModule],\n    exports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule, NgbTabsetModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgbModule, [{\n    type: NgModule,\n    args: [{\n      imports: NGB_MODULES,\n      exports: NGB_MODULES\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseModule, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbInputDatepickerConfig, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbNav, NgbNavConfig, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet, NgbNavbar, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTab, NgbTabContent, NgbTabTitle, NgbTabset, NgbTabsetConfig, NgbTabsetModule, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, NGB_CAROUSEL_DIRECTIVES as ɵa, NGB_DATEPICKER_VALUE_ACCESSOR as ɵb, Live as ɵba, NgbCalendarHijri as ɵbb, ContentRef as ɵbc, NGB_DATEPICKER_CALENDAR_FACTORY as ɵc, NgbDatepickerDayView as ɵd, NgbDatepickerNavigation as ɵe, NgbDatepickerNavigationSelect as ɵf, NGB_DATEPICKER_18N_FACTORY as ɵg, NgbDatepickerI18nDefault as ɵh, NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi, NgbDateStructAdapter as ɵj, NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk, NgbDateISOParserFormatter as ɵl, NgbPopoverWindow as ɵm, NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵn, NgbTimeStructAdapter as ɵo, NGB_TIMEPICKER_I18N_FACTORY as ɵp, NgbTimepickerI18nDefault as ɵq, NgbTooltipWindow as ɵr, NgbTypeaheadWindow as ɵs, NgbDatepickerService as ɵt, NgbModalBackdrop as ɵu, NgbModalWindow as ɵv, NgbModalStack as ɵw, ScrollBar as ɵx, ARIA_LIVE_DELAY as ɵy, ARIA_LIVE_DELAY_FACTORY as ɵz };","map":{"version":3,"sources":["@ng-bootstrap/ng-bootstrap/util/util.ts","@ng-bootstrap/ng-bootstrap/accordion/accordion-config.ts","@ng-bootstrap/ng-bootstrap/accordion/accordion.ts","@ng-bootstrap/ng-bootstrap/accordion/accordion.module.ts","@ng-bootstrap/ng-bootstrap/alert/alert-config.ts","@ng-bootstrap/ng-bootstrap/alert/alert.ts","@ng-bootstrap/ng-bootstrap/alert/alert.module.ts","@ng-bootstrap/ng-bootstrap/buttons/label.ts","@ng-bootstrap/ng-bootstrap/buttons/checkbox.ts","@ng-bootstrap/ng-bootstrap/buttons/radio.ts","@ng-bootstrap/ng-bootstrap/buttons/buttons.module.ts","@ng-bootstrap/ng-bootstrap/carousel/carousel-config.ts","@ng-bootstrap/ng-bootstrap/carousel/carousel.ts","@ng-bootstrap/ng-bootstrap/carousel/carousel.module.ts","@ng-bootstrap/ng-bootstrap/collapse/collapse.ts","@ng-bootstrap/ng-bootstrap/collapse/collapse.module.ts","@ng-bootstrap/ng-bootstrap/datepicker/ngb-date.ts","@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-tools.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-service.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-config.ts","@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-adapter.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker.ts","@ng-bootstrap/ng-bootstrap/util/key.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-keyboard-service.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-month.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation.ts","@ng-bootstrap/ng-bootstrap/util/autoclose.ts","@ng-bootstrap/ng-bootstrap/util/focus-trap.ts","@ng-bootstrap/ng-bootstrap/util/positioning.ts","@ng-bootstrap/ng-bootstrap/datepicker/ngb-date-parser-formatter.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input-config.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-input.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-day-view.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select.ts","@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-hijri.ts","@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-civil.ts","@ng-bootstrap/ng-bootstrap/datepicker/hijri/ngb-calendar-islamic-umalqura.ts","@ng-bootstrap/ng-bootstrap/datepicker/jalali/jalali.ts","@ng-bootstrap/ng-bootstrap/datepicker/jalali/ngb-calendar-persian.ts","@ng-bootstrap/ng-bootstrap/datepicker/hebrew/hebrew.ts","@ng-bootstrap/ng-bootstrap/datepicker/hebrew/ngb-calendar-hebrew.ts","@ng-bootstrap/ng-bootstrap/datepicker/hebrew/datepicker-i18n-hebrew.ts","@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.ts","@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-utc-adapter.ts","@ng-bootstrap/ng-bootstrap/datepicker/datepicker.module.ts","@ng-bootstrap/ng-bootstrap/dropdown/dropdown-config.ts","@ng-bootstrap/ng-bootstrap/dropdown/dropdown.ts","@ng-bootstrap/ng-bootstrap/dropdown/dropdown.module.ts","@ng-bootstrap/ng-bootstrap/modal/modal-config.ts","@ng-bootstrap/ng-bootstrap/util/popup.ts","@ng-bootstrap/ng-bootstrap/util/scrollbar.ts","@ng-bootstrap/ng-bootstrap/modal/modal-backdrop.ts","@ng-bootstrap/ng-bootstrap/modal/modal-ref.ts","@ng-bootstrap/ng-bootstrap/modal/modal-dismiss-reasons.ts","@ng-bootstrap/ng-bootstrap/modal/modal-window.ts","@ng-bootstrap/ng-bootstrap/modal/modal-stack.ts","@ng-bootstrap/ng-bootstrap/modal/modal.ts","@ng-bootstrap/ng-bootstrap/modal/modal.module.ts","@ng-bootstrap/ng-bootstrap/nav/nav-config.ts","@ng-bootstrap/ng-bootstrap/nav/nav.ts","@ng-bootstrap/ng-bootstrap/nav/nav-outlet.ts","@ng-bootstrap/ng-bootstrap/nav/nav.module.ts","@ng-bootstrap/ng-bootstrap/pagination/pagination-config.ts","@ng-bootstrap/ng-bootstrap/pagination/pagination.ts","@ng-bootstrap/ng-bootstrap/pagination/pagination.module.ts","@ng-bootstrap/ng-bootstrap/util/triggers.ts","@ng-bootstrap/ng-bootstrap/popover/popover-config.ts","@ng-bootstrap/ng-bootstrap/popover/popover.ts","@ng-bootstrap/ng-bootstrap/popover/popover.module.ts","@ng-bootstrap/ng-bootstrap/progressbar/progressbar-config.ts","@ng-bootstrap/ng-bootstrap/progressbar/progressbar.ts","@ng-bootstrap/ng-bootstrap/progressbar/progressbar.module.ts","@ng-bootstrap/ng-bootstrap/rating/rating-config.ts","@ng-bootstrap/ng-bootstrap/rating/rating.ts","@ng-bootstrap/ng-bootstrap/rating/rating.module.ts","@ng-bootstrap/ng-bootstrap/tabset/tabset-config.ts","@ng-bootstrap/ng-bootstrap/tabset/tabset.ts","@ng-bootstrap/ng-bootstrap/tabset/tabset.module.ts","@ng-bootstrap/ng-bootstrap/timepicker/ngb-time.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker-config.ts","@ng-bootstrap/ng-bootstrap/timepicker/ngb-time-adapter.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker-i18n.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker.ts","@ng-bootstrap/ng-bootstrap/timepicker/timepicker.module.ts","@ng-bootstrap/ng-bootstrap/toast/toast-config.ts","@ng-bootstrap/ng-bootstrap/toast/toast.ts","@ng-bootstrap/ng-bootstrap/toast/toast.module.ts","@ng-bootstrap/ng-bootstrap/tooltip/tooltip-config.ts","@ng-bootstrap/ng-bootstrap/tooltip/tooltip.ts","@ng-bootstrap/ng-bootstrap/tooltip/tooltip.module.ts","@ng-bootstrap/ng-bootstrap/typeahead/highlight.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead-window.ts","@ng-bootstrap/ng-bootstrap/util/accessibility/live.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead-config.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead.ts","@ng-bootstrap/ng-bootstrap/typeahead/typeahead.module.ts","@ng-bootstrap/ng-bootstrap/index.ts","@ng-bootstrap/ng-bootstrap/ng-bootstrap.ts"],"names":["nextId","NGB_DATEPICKER_VALUE_ACCESSOR","mod","GREGORIAN_EPOCH","isGregorianLeapYear","fromGregorian","toGregorian"],"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","sourcesContent":["export function toInteger(value: any): number {\n  return parseInt(`${value}`, 10);\n}\n\nexport function toString(value: any): string {\n  return (value !== undefined && value !== null) ? `${value}` : '';\n}\n\nexport function getValueInRange(value: number, max: number, min = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nexport function isString(value: any): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: any): value is number {\n  return !isNaN(toInteger(value));\n}\n\nexport function isInteger(value: any): value is number {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n\nexport function isDefined(value: any): boolean {\n  return value !== undefined && value !== null;\n}\n\nexport function padNumber(value: number) {\n  if (isNumber(value)) {\n    return `0${value}`.slice(-2);\n  } else {\n    return '';\n  }\n}\n\nexport function regExpEscape(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport function hasClassName(element: any, className: string): boolean {\n  return element && element.className && element.className.split &&\n      element.className.split(/\\s+/).indexOf(className) >= 0;\n}\n\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n  // Polyfill for ie10+\n\n  if (!Element.prototype.matches) {\n    // IE uses the non-standard name: msMatchesSelector\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function(s: string) {\n    let el = this;\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\nexport function closest(element: HTMLElement, selector): HTMLElement {\n  if (!selector) {\n    return null;\n  }\n\n  return element.closest(selector);\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAccordionConfig {\n  closeOthers = false;\n  type: string;\n}\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Host,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {isString} from '../util/util';\n\nimport {NgbAccordionConfig} from './accordion-config';\n\nlet nextId = 0;\n\n/**\n * The context for the [NgbPanelHeader](#/components/accordion/api#NgbPanelHeader) template\n *\n * @since 4.1.0\n */\nexport interface NgbPanelHeaderContext {\n  /**\n   * `True` if current panel is opened\n   */\n  opened: boolean;\n}\n\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPanelHeader]'})\nexport class NgbPanelHeader {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\n@Directive({selector: 'ng-template[ngbPanelTitle]'})\nexport class NgbPanelTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps the accordion panel content.\n */\n@Directive({selector: 'ng-template[ngbPanelContent]'})\nexport class NgbPanelContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\n@Directive({selector: 'ngb-panel'})\nexport class NgbPanel implements AfterContentChecked {\n  /**\n   *  If `true`, the panel is disabled an can't be toggled.\n   */\n  @Input() disabled = false;\n\n  /**\n   *  An optional id for the panel that must be unique on the page.\n   *\n   *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n   */\n  @Input() id = `ngb-panel-${nextId++}`;\n\n  isOpen = false;\n\n  /**\n   *  The panel title.\n   *\n   *  You can alternatively use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to set panel title.\n   */\n  @Input() title: string;\n\n  /**\n   * Type of the current panel.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * An optional class applied to the accordion card element that wraps both panel title and content.\n   *\n   * @since 5.3.0\n   */\n  @Input() cardClass: string;\n\n  titleTpl: NgbPanelTitle | null;\n  headerTpl: NgbPanelHeader | null;\n  contentTpl: NgbPanelContent | null;\n\n  @ContentChildren(NgbPanelTitle, {descendants: false}) titleTpls: QueryList<NgbPanelTitle>;\n  @ContentChildren(NgbPanelHeader, {descendants: false}) headerTpls: QueryList<NgbPanelHeader>;\n  @ContentChildren(NgbPanelContent, {descendants: false}) contentTpls: QueryList<NgbPanelContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.headerTpl = this.headerTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * An event emitted right before toggling an accordion panel.\n */\nexport interface NgbPanelChangeEvent {\n  /**\n   * The id of the accordion panel that is being toggled.\n   */\n  panelId: string;\n\n  /**\n   * The next state of the panel.\n   *\n   * `true` if it will be opened, `false` if closed.\n   */\n  nextState: boolean;\n\n  /**\n   * Calling this function will prevent panel toggling.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\n@Component({\n  selector: 'ngb-accordion',\n  exportAs: 'ngbAccordion',\n  encapsulation: ViewEncapsulation.None,\n  host: {'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels'},\n  template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div [class]=\"'card ' + (panel.cardClass || '')\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbAccordion implements AfterContentChecked {\n  @ContentChildren(NgbPanel) panels: QueryList<NgbPanel>;\n\n  /**\n   * An array or comma separated strings of panel ids that should be opened **initially**.\n   *\n   * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n   * the `(panelChange)` event.\n   */\n  @Input() activeIds: string | readonly string[] = [];\n\n  /**\n   *  If `true`, only one panel could be opened at a time.\n   *\n   *  Opening a new panel will close others.\n   */\n  @Input('closeOthers') closeOtherPanels: boolean;\n\n  /**\n   * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * Type of panels.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n\n  /**\n   * Event emitted right before the panel toggle happens.\n   *\n   * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n   */\n  @Output() panelChange = new EventEmitter<NgbPanelChangeEvent>();\n\n  constructor(config: NgbAccordionConfig) {\n    this.type = config.type;\n    this.closeOtherPanels = config.closeOthers;\n  }\n\n  /**\n   * Checks if a panel with a given id is expanded.\n   */\n  isExpanded(panelId: string): boolean { return this.activeIds.indexOf(panelId) > -1; }\n\n  /**\n   * Expands a panel with a given id.\n   *\n   * Has no effect if the panel is already expanded or disabled.\n   */\n  expand(panelId: string): void { this._changeOpenState(this._findPanelById(panelId), true); }\n\n  /**\n   * Expands all panels, if `[closeOthers]` is `false`.\n   *\n   * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n   */\n  expandAll(): void {\n    if (this.closeOtherPanels) {\n      if (this.activeIds.length === 0 && this.panels.length) {\n        this._changeOpenState(this.panels.first, true);\n      }\n    } else {\n      this.panels.forEach(panel => this._changeOpenState(panel, true));\n    }\n  }\n\n  /**\n   * Collapses a panel with the given id.\n   *\n   * Has no effect if the panel is already collapsed or disabled.\n   */\n  collapse(panelId: string) { this._changeOpenState(this._findPanelById(panelId), false); }\n\n  /**\n   * Collapses all opened panels.\n   */\n  collapseAll() {\n    this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n  }\n\n  /**\n   * Toggles a panel with the given id.\n   *\n   * Has no effect if the panel is disabled.\n   */\n  toggle(panelId: string) {\n    const panel = this._findPanelById(panelId);\n    if (panel) {\n      this._changeOpenState(panel, !panel.isOpen);\n    }\n  }\n\n  ngAfterContentChecked() {\n    // active id updates\n    if (isString(this.activeIds)) {\n      this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n    }\n\n    // update panels open states\n    this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n\n    // closeOthers updates\n    if (this.activeIds.length > 1 && this.closeOtherPanels) {\n      this._closeOthers(this.activeIds[0]);\n      this._updateActiveIds();\n    }\n  }\n\n  private _changeOpenState(panel: NgbPanel, nextState: boolean) {\n    if (panel && !panel.disabled && panel.isOpen !== nextState) {\n      let defaultPrevented = false;\n\n      this.panelChange.emit(\n          {panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        panel.isOpen = nextState;\n\n        if (nextState && this.closeOtherPanels) {\n          this._closeOthers(panel.id);\n        }\n        this._updateActiveIds();\n      }\n    }\n  }\n\n  private _closeOthers(panelId: string) {\n    this.panels.forEach(panel => {\n      if (panel.id !== panelId) {\n        panel.isOpen = false;\n      }\n    });\n  }\n\n  private _findPanelById(panelId: string): NgbPanel | null { return this.panels.find(p => p.id === panelId); }\n\n  private _updateActiveIds() {\n    this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n  }\n}\n\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: 'button[ngbPanelToggle]',\n  host: {\n    'type': 'button',\n    '[disabled]': 'panel.disabled',\n    '[class.collapsed]': '!panel.isOpen',\n    '[attr.aria-expanded]': 'panel.isOpen',\n    '[attr.aria-controls]': 'panel.id',\n    '(click)': 'accordion.toggle(panel.id)'\n  }\n})\nexport class NgbPanelToggle {\n  @Input()\n  set ngbPanelToggle(panel: NgbPanel) {\n    if (panel) {\n      this.panel = panel;\n    }\n  }\n\n  constructor(public accordion: NgbAccordion, @Optional() @Host() public panel: NgbPanel) {}\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle} from './accordion';\n\nexport {\n  NgbAccordion,\n  NgbPanel,\n  NgbPanelTitle,\n  NgbPanelContent,\n  NgbPanelChangeEvent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelToggle\n} from './accordion';\nexport {NgbAccordionConfig} from './accordion-config';\n\nconst NGB_ACCORDION_DIRECTIVES =\n    [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\n\n@NgModule({declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule]})\nexport class NgbAccordionModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbAlertConfig {\n  dismissible = true;\n  type = 'warning';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport {NgbAlertConfig} from './alert-config';\n\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\n@Component({\n  selector: 'ngb-alert',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible'},\n  template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n  styleUrls: ['./alert.scss']\n})\nexport class NgbAlert implements OnInit,\n    OnChanges {\n  /**\n   * If `true`, alert can be dismissed by the user.\n   *\n   * The close button (×) will be displayed and you can be notified\n   * of the event with the `(close)` output.\n   */\n  @Input() dismissible: boolean;\n  /**\n   * Type of the alert.\n   *\n   * Bootstrap provides styles for the following types: `'success'`, `'info'`, `'warning'`, `'danger'`, `'primary'`,\n   * `'secondary'`, `'light'` and `'dark'`.\n   */\n  @Input() type: string;\n  /**\n   * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n   */\n  @Output() close = new EventEmitter<void>();\n\n  constructor(config: NgbAlertConfig, private _renderer: Renderer2, private _element: ElementRef) {\n    this.dismissible = config.dismissible;\n    this.type = config.type;\n  }\n\n  closeHandler() { this.close.emit(null); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange = changes['type'];\n    if (typeChange && !typeChange.firstChange) {\n      this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n      this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n    }\n  }\n\n  ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbAlert} from './alert';\n\nexport {NgbAlert} from './alert';\nexport {NgbAlertConfig} from './alert-config';\n\n@NgModule({declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert]})\nexport class NgbAlertModule {\n}\n","import {Directive} from '@angular/core';\n\n@Directive({\n  selector: '[ngbButtonLabel]',\n  host:\n      {'[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused'}\n})\nexport class NgbButtonLabel {\n  active: boolean;\n  disabled: boolean;\n  focused: boolean;\n}\n","import {ChangeDetectorRef, Directive, forwardRef, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbCheckBox),\n  multi: true\n};\n\n\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({\n  selector: '[ngbButton][type=checkbox]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '(change)': 'onInputChange($event)',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  },\n  providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n})\nexport class NgbCheckBox implements ControlValueAccessor {\n  checked;\n\n  /**\n   * If `true`, the checkbox button will be disabled\n   */\n  @Input() disabled = false;\n\n  /**\n   * The form control value when the checkbox is checked.\n   */\n  @Input() valueChecked = true;\n\n  /**\n   * The form control value when the checkbox is unchecked.\n   */\n  @Input() valueUnChecked = false;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  set focused(isFocused: boolean) {\n    this._label.focused = isFocused;\n    if (!isFocused) {\n      this.onTouched();\n    }\n  }\n\n  constructor(private _label: NgbButtonLabel, private _cd: ChangeDetectorRef) {}\n\n  onInputChange($event) {\n    const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n    this.onChange(modelToPropagate);\n    this.onTouched();\n    this.writeValue(modelToPropagate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._label.disabled = isDisabled;\n  }\n\n  writeValue(value) {\n    this.checked = value === this.valueChecked;\n    this._label.active = this.checked;\n\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    this._cd.markForCheck();\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnDestroy, Renderer2} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {NgbButtonLabel} from './label';\n\nconst NGB_RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRadioGroup),\n  multi: true\n};\n\nlet nextId = 0;\n\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\n@Directive({selector: '[ngbRadioGroup]', host: {'role': 'radiogroup'}, providers: [NGB_RADIO_VALUE_ACCESSOR]})\nexport class NgbRadioGroup implements ControlValueAccessor {\n  private _radios: Set<NgbRadio> = new Set<NgbRadio>();\n  private _value = null;\n  private _disabled: boolean;\n\n  get disabled() { return this._disabled; }\n  set disabled(isDisabled: boolean) { this.setDisabledState(isDisabled); }\n\n  /**\n   * Name of the radio group applied to radio input elements.\n   *\n   * Will be applied to all radio input elements inside the group,\n   * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n   *\n   * If not provided, will be generated in the `ngb-radio-xx` format.\n   */\n  @Input() name = `ngb-radio-${nextId++}`;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  onRadioChange(radio: NgbRadio) {\n    this.writeValue(radio.value);\n    this.onChange(radio.value);\n  }\n\n  onRadioValueUpdate() { this._updateRadiosValue(); }\n\n  register(radio: NgbRadio) { this._radios.add(radio); }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabled = isDisabled;\n    this._updateRadiosDisabled();\n  }\n\n  unregister(radio: NgbRadio) { this._radios.delete(radio); }\n\n  writeValue(value) {\n    this._value = value;\n    this._updateRadiosValue();\n  }\n\n  private _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n  private _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\n\n\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\n@Directive({\n  selector: '[ngbButton][type=radio]',\n  host: {\n    '[checked]': 'checked',\n    '[disabled]': 'disabled',\n    '[name]': 'nameAttr',\n    '(change)': 'onChange()',\n    '(focus)': 'focused = true',\n    '(blur)': 'focused = false'\n  }\n})\nexport class NgbRadio implements OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _value: any = null;\n\n  /**\n   * The value for the 'name' property of the input element.\n   *\n   * All inputs of the radio group should have the same name. If not specified,\n   * the name of the enclosing group is used.\n   */\n  @Input() name: string;\n\n  /**\n   * The form control value when current radio button is checked.\n   */\n  @Input('value')\n  set value(value: any) {\n    this._value = value;\n    const stringValue = value ? value.toString() : '';\n    this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n    this._group.onRadioValueUpdate();\n  }\n\n  /**\n   * If `true`, current radio button will be disabled.\n   */\n  @Input('disabled')\n  set disabled(isDisabled: boolean) {\n    this._disabled = isDisabled !== false;\n    this.updateDisabled();\n  }\n\n  set focused(isFocused: boolean) {\n    if (this._label) {\n      this._label.focused = isFocused;\n    }\n    if (!isFocused) {\n      this._group.onTouched();\n    }\n  }\n\n  get checked() { return this._checked; }\n\n  get disabled() { return this._group.disabled || this._disabled; }\n\n  get value() { return this._value; }\n\n  get nameAttr() { return this.name || this._group.name; }\n\n  constructor(\n      private _group: NgbRadioGroup, private _label: NgbButtonLabel, private _renderer: Renderer2,\n      private _element: ElementRef<HTMLInputElement>, private _cd: ChangeDetectorRef) {\n    this._group.register(this);\n    this.updateDisabled();\n  }\n\n  ngOnDestroy() { this._group.unregister(this); }\n\n  onChange() { this._group.onRadioChange(this); }\n\n  updateValue(value) {\n    // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n    if (this.value !== value) {\n      this._cd.markForCheck();\n    }\n\n    this._checked = this.value === value;\n    this._label.active = this._checked;\n  }\n\n  updateDisabled() { this._label.disabled = this.disabled; }\n}\n","import {NgModule} from '@angular/core';\nimport {NgbButtonLabel} from './label';\nimport {NgbCheckBox} from './checkbox';\nimport {NgbRadio, NgbRadioGroup} from './radio';\n\nexport {NgbButtonLabel} from './label';\nexport {NgbCheckBox} from './checkbox';\nexport {NgbRadio, NgbRadioGroup} from './radio';\n\n\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\n\n@NgModule({declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES})\nexport class NgbButtonsModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbCarouselConfig {\n  interval = 5000;\n  wrap = true;\n  keyboard = true;\n  pauseOnHover = true;\n  showNavigationArrows = true;\n  showNavigationIndicators = true;\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {NgbCarouselConfig} from './carousel-config';\n\nimport {BehaviorSubject, combineLatest, NEVER, Subject, timer} from 'rxjs';\nimport {distinctUntilChanged, map, startWith, switchMap, takeUntil} from 'rxjs/operators';\n\nlet nextId = 0;\n\n/**\n * A directive that wraps the individual carousel slide.\n */\n@Directive({selector: 'ng-template[ngbSlide]'})\nexport class NgbSlide {\n  /**\n   * Slide id that must be unique for the entire document.\n   *\n   * If not provided, will be generated in the `ngb-slide-xx` format.\n   */\n  @Input() id = `ngb-slide-${nextId++}`;\n  constructor(public tplRef: TemplateRef<any>) {}\n}\n\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\n@Component({\n  selector: 'ngb-carousel',\n  exportAs: 'ngbCarousel',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'carousel slide',\n    '[style.display]': '\"block\"',\n    'tabIndex': '0',\n    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n  },\n  template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n})\nexport class NgbCarousel implements AfterContentChecked,\n    AfterContentInit, OnDestroy {\n  @ContentChildren(NgbSlide) slides: QueryList<NgbSlide>;\n\n  public NgbSlideEventSource = NgbSlideEventSource;\n\n  private _destroy$ = new Subject<void>();\n  private _interval$ = new BehaviorSubject(0);\n  private _mouseHover$ = new BehaviorSubject(false);\n  private _pauseOnHover$ = new BehaviorSubject(false);\n  private _pause$ = new BehaviorSubject(false);\n  private _wrap$ = new BehaviorSubject(false);\n\n  /**\n   * The slide id that should be displayed **initially**.\n   *\n   * For subsequent interactions use methods `select()`, `next()`, etc. and the `(slide)` output.\n   */\n  @Input() activeId: string;\n\n  /**\n   * Time in milliseconds before the next slide is shown.\n   */\n  @Input()\n  set interval(value: number) {\n    this._interval$.next(value);\n  }\n\n  get interval() { return this._interval$.value; }\n\n  /**\n   * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n   */\n  @Input()\n  set wrap(value: boolean) {\n    this._wrap$.next(value);\n  }\n\n  get wrap() { return this._wrap$.value; }\n\n  /**\n   * If `true`, allows to interact with carousel using keyboard 'arrow left' and 'arrow right'.\n   */\n  @Input() keyboard: boolean;\n\n  /**\n   * If `true`, will pause slide switching when mouse cursor hovers the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input()\n  set pauseOnHover(value: boolean) {\n    this._pauseOnHover$.next(value);\n  }\n\n  get pauseOnHover() { return this._pauseOnHover$.value; }\n\n  /**\n   * If `true`, 'previous' and 'next' navigation arrows will be visible on the slide.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationArrows: boolean;\n\n  /**\n   * If `true`, navigation indicators at the bottom of the slide will be visible.\n   *\n   * @since 2.2.0\n   */\n  @Input() showNavigationIndicators: boolean;\n\n  /**\n   * An event emitted right after the slide transition is completed.\n   *\n   * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n   */\n  @Output() slide = new EventEmitter<NgbSlideEvent>();\n\n  constructor(\n      config: NgbCarouselConfig, @Inject(PLATFORM_ID) private _platformId, private _ngZone: NgZone,\n      private _cd: ChangeDetectorRef) {\n    this.interval = config.interval;\n    this.wrap = config.wrap;\n    this.keyboard = config.keyboard;\n    this.pauseOnHover = config.pauseOnHover;\n    this.showNavigationArrows = config.showNavigationArrows;\n    this.showNavigationIndicators = config.showNavigationIndicators;\n  }\n\n  @HostListener('mouseenter')\n  mouseEnter() {\n    this._mouseHover$.next(true);\n  }\n\n  @HostListener('mouseleave')\n  mouseLeave() {\n    this._mouseHover$.next(false);\n  }\n\n  ngAfterContentInit() {\n    // setInterval() doesn't play well with SSR and protractor,\n    // so we should run it in the browser and outside Angular\n    if (isPlatformBrowser(this._platformId)) {\n      this._ngZone.runOutsideAngular(() => {\n        const hasNextSlide$ = combineLatest([\n                                this.slide.pipe(map(slideEvent => slideEvent.current), startWith(this.activeId)),\n                                this._wrap$, this.slides.changes.pipe(startWith(<{}>null))\n                              ])\n                                  .pipe(\n                                      map(([currentSlideId, wrap]) => {\n                                        const slideArr = this.slides.toArray();\n                                        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                                        return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                                      }),\n                                      distinctUntilChanged());\n        combineLatest([this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$])\n            .pipe(\n                map(([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) =>\n                        ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval)),\n\n                distinctUntilChanged(), switchMap(interval => interval > 0 ? timer(interval, interval) : NEVER),\n                takeUntil(this._destroy$))\n            .subscribe(() => this._ngZone.run(() => this.next(NgbSlideEventSource.TIMER)));\n      });\n    }\n\n    this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n  }\n\n  ngAfterContentChecked() {\n    let activeSlide = this._getSlideById(this.activeId);\n    this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n  }\n\n  ngOnDestroy() { this._destroy$.next(); }\n\n  /**\n   * Navigates to a slide with the specified identifier.\n   */\n  select(slideId: string, source?: NgbSlideEventSource) {\n    this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n  }\n\n  /**\n   * Navigates to the previous slide.\n   */\n  prev(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n  }\n\n  /**\n   * Navigates to the next slide.\n   */\n  next(source?: NgbSlideEventSource) {\n    this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n  }\n\n  /**\n   * Pauses cycling through the slides.\n   */\n  pause() { this._pause$.next(true); }\n\n  /**\n   * Restarts cycling through the slides from left to right.\n   */\n  cycle() { this._pause$.next(false); }\n\n  private _cycleToSelected(slideIdx: string, direction: NgbSlideEventDirection, source?: NgbSlideEventSource) {\n    let selectedSlide = this._getSlideById(slideIdx);\n    if (selectedSlide && selectedSlide.id !== this.activeId) {\n      this.slide.emit(\n          {prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source});\n      this.activeId = selectedSlide.id;\n    }\n\n    // we get here after the interval fires or any external API call like next(), prev() or select()\n    this._cd.markForCheck();\n  }\n\n  private _getSlideEventDirection(currentActiveSlideId: string, nextActiveSlideId: string): NgbSlideEventDirection {\n    const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n    const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n\n    return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n  }\n\n  private _getSlideById(slideId: string): NgbSlide { return this.slides.find(slide => slide.id === slideId); }\n\n  private _getSlideIdxById(slideId: string): number {\n    return this.slides.toArray().indexOf(this._getSlideById(slideId));\n  }\n\n  private _getNextSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isLastSlide = currentSlideIdx === slideArr.length - 1;\n\n    return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n                         slideArr[currentSlideIdx + 1].id;\n  }\n\n  private _getPrevSlide(currentSlideId: string): string {\n    const slideArr = this.slides.toArray();\n    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n    const isFirstSlide = currentSlideIdx === 0;\n\n    return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n                          slideArr[currentSlideIdx - 1].id;\n  }\n}\n\n/**\n * A slide change event emitted right after the slide transition is completed.\n */\nexport interface NgbSlideEvent {\n  /**\n   * The previous slide id.\n   */\n  prev: string;\n\n  /**\n   * The current slide id.\n   */\n  current: string;\n\n  /**\n   * The slide event direction.\n   *\n   * Possible values are `'left' | 'right'`.\n   */\n  direction: NgbSlideEventDirection;\n\n  /**\n   * Whether the pause() method was called (and no cycle() call was done afterwards).\n   *\n   * @since 5.1.0\n   */\n  paused: boolean;\n\n  /**\n   * Source triggering the slide change event.\n   *\n   * Possible values are `'timer' | 'arrowLeft' | 'arrowRight' | 'indicator'`\n   *\n   * @since 5.1.0\n   */\n  source?: NgbSlideEventSource;\n}\n\n/**\n * Defines the carousel slide transition direction.\n */\nexport enum NgbSlideEventDirection {\n  LEFT = <any>'left',\n  RIGHT = <any>'right'\n}\n\nexport enum NgbSlideEventSource {\n  TIMER = 'timer',\n  ARROW_LEFT = 'arrowLeft',\n  ARROW_RIGHT = 'arrowRight',\n  INDICATOR = 'indicator'\n}\n\nexport const NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NGB_CAROUSEL_DIRECTIVES} from './carousel';\n\nexport {NgbCarousel, NgbSlide, NgbSlideEvent, NgbSlideEventDirection, NgbSlideEventSource} from './carousel';\nexport {NgbCarouselConfig} from './carousel-config';\n\n@NgModule({declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule]})\nexport class NgbCarouselModule {\n}\n","import {Directive, Input} from '@angular/core';\n\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\n@Directive({\n  selector: '[ngbCollapse]',\n  exportAs: 'ngbCollapse',\n  host: {'[class.collapse]': 'true', '[class.show]': '!collapsed'}\n})\nexport class NgbCollapse {\n  /**\n   * If `true`, will collapse the element or show it otherwise.\n   */\n  @Input('ngbCollapse') collapsed = false;\n}\n","import {NgModule} from '@angular/core';\nimport {NgbCollapse} from './collapse';\n\nexport {NgbCollapse} from './collapse';\n\n@NgModule({declarations: [NgbCollapse], exports: [NgbCollapse]})\nexport class NgbCollapseModule {\n}\n","import {NgbDateStruct} from './ngb-date-struct';\nimport {isInteger} from '../util/util';\n\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * @since 3.0.0\n */\nexport class NgbDate implements NgbDateStruct {\n  /**\n   * The year, for example 2016\n   */\n  year: number;\n\n  /**\n   * The month, for example 1=Jan ... 12=Dec as in ISO 8601\n   */\n  month: number;\n\n  /**\n   * The day of month, starting with 1\n   */\n  day: number;\n\n  /**\n   * A **static method** that creates a new date object from the `NgbDateStruct`,\n   *\n   * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n   *\n   * If the `date` is already of `NgbDate` type, the method will return the same object.\n   */\n  static from(date: NgbDateStruct): NgbDate {\n    if (date instanceof NgbDate) {\n      return date;\n    }\n    return date ? new NgbDate(date.year, date.month, date.day) : null;\n  }\n\n  constructor(year: number, month: number, day: number) {\n    this.year = isInteger(year) ? year : null;\n    this.month = isInteger(month) ? month : null;\n    this.day = isInteger(day) ? day : null;\n  }\n\n  /**\n   * Checks if the current date is equal to another date.\n   */\n  equals(other: NgbDateStruct): boolean {\n    return other && this.year === other.year && this.month === other.month && this.day === other.day;\n  }\n\n  /**\n   * Checks if the current date is before another date.\n   */\n  before(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day < other.day;\n      } else {\n        return this.month < other.month;\n      }\n    } else {\n      return this.year < other.year;\n    }\n  }\n\n  /**\n   * Checks if the current date is after another date.\n   */\n  after(other: NgbDateStruct): boolean {\n    if (!other) {\n      return false;\n    }\n    if (this.year === other.year) {\n      if (this.month === other.month) {\n        return this.day === other.day ? false : this.day > other.day;\n      } else {\n        return this.month > other.month;\n      }\n    } else {\n      return this.year > other.year;\n    }\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {Injectable} from '@angular/core';\nimport {isInteger} from '../util/util';\n\nexport function fromJSDate(jsDate: Date) {\n  return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\nexport function toJSDate(date: NgbDate) {\n  const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n  // this is done avoid 30 -> 1930 conversion\n  if (!isNaN(jsDate.getTime())) {\n    jsDate.setFullYear(date.year);\n  }\n  return jsDate;\n}\n\nexport type NgbPeriod = 'y' | 'm' | 'd';\n\nexport function NGB_DATEPICKER_CALENDAR_FACTORY() {\n  return new NgbCalendarGregorian();\n}\n\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY})\nexport abstract class NgbCalendar {\n  /**\n   * Returns the number of days per week.\n   */\n  abstract getDaysPerWeek(): number;\n\n  /**\n   * Returns an array of months per year.\n   *\n   * With default calendar we use ISO 8601 and return [1, 2, ..., 12];\n   */\n  abstract getMonths(year?: number): number[];\n\n  /**\n   * Returns the number of weeks per month.\n   */\n  abstract getWeeksPerMonth(): number;\n\n  /**\n   * Returns the weekday number for a given day.\n   *\n   * With the default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun\n   */\n  abstract getWeekday(date: NgbDate): number;\n\n  /**\n   * Adds a number of years, months or days to a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getNext(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Subtracts a number of years, months or days from a given date.\n   *\n   * * `period` can be `y`, `m` or `d` and defaults to day.\n   * * `number` defaults to 1.\n   *\n   * Always returns a new date.\n   */\n  abstract getPrev(date: NgbDate, period?: NgbPeriod, number?: number): NgbDate;\n\n  /**\n   * Returns the week number for a given week.\n   */\n  abstract getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number): number;\n\n  /**\n   * Returns the today's date.\n   */\n  abstract getToday(): NgbDate;\n\n  /**\n   * Checks if a date is valid in the current calendar.\n   */\n  abstract isValid(date: NgbDate): boolean;\n}\n\n@Injectable()\nexport class NgbCalendarGregorian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    let jsDate = toJSDate(date);\n    let checkMonth = true;\n    let expectedMonth = jsDate.getMonth();\n\n    switch (period) {\n      case 'y':\n        jsDate.setFullYear(jsDate.getFullYear() + number);\n        break;\n      case 'm':\n        expectedMonth += number;\n        jsDate.setMonth(expectedMonth);\n        expectedMonth = expectedMonth % 12;\n        if (expectedMonth < 0) {\n          expectedMonth = expectedMonth + 12;\n        }\n        break;\n      case 'd':\n        jsDate.setDate(jsDate.getDate() + number);\n        checkMonth = false;\n        break;\n      default:\n        return date;\n    }\n\n    if (checkMonth && jsDate.getMonth() !== expectedMonth) {\n      // this means the destination month has less days than the initial month\n      // let's go back to the end of the previous month:\n      jsDate.setDate(0);\n    }\n\n    return fromJSDate(jsDate);\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    let jsDate = toJSDate(date);\n    let day = jsDate.getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    let date = week[thursdayIndex];\n\n    const jsDate = toJSDate(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    jsDate.setMonth(0);  // Compare with Jan 1\n    jsDate.setDate(1);\n    return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromJSDate(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n      return false;\n    }\n\n    // year 0 doesn't exist in Gregorian calendar\n    if (date.year === 0) {\n      return false;\n    }\n\n    const jsDate = toJSDate(date);\n\n    return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n        jsDate.getDate() === date.day;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {DatepickerViewModel, DayViewModel, MonthViewModel} from './datepicker-view-model';\nimport {NgbCalendar} from './ngb-calendar';\nimport {isDefined} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport function isChangedDate(prev: NgbDate, next: NgbDate) {\n  return !dateComparator(prev, next);\n}\n\nexport function isChangedMonth(prev: NgbDate, next: NgbDate) {\n  return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n\nexport function dateComparator(prev: NgbDate, next: NgbDate) {\n  return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n\nexport function checkMinBeforeMax(minDate: NgbDate, maxDate: NgbDate) {\n  if (maxDate && minDate && maxDate.before(minDate)) {\n    throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n  }\n}\n\nexport function checkDateInRange(date: NgbDate, minDate: NgbDate, maxDate: NgbDate): NgbDate {\n  if (date && minDate && date.before(minDate)) {\n    return minDate;\n  }\n  if (date && maxDate && date.after(maxDate)) {\n    return maxDate;\n  }\n\n  return date;\n}\n\nexport function isDateSelectable(date: NgbDate, state: DatepickerViewModel) {\n  const {minDate, maxDate, disabled, markDisabled} = state;\n  // clang-format off\n  return !(\n    !isDefined(date) ||\n    disabled ||\n    (markDisabled && markDisabled(date, {year: date.year, month: date.month})) ||\n    (minDate && date.before(minDate)) ||\n    (maxDate && date.after(maxDate))\n  );\n  // clang-format on\n}\n\nexport function generateSelectBoxMonths(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  let months = calendar.getMonths(date.year);\n\n  if (minDate && date.year === minDate.year) {\n    const index = months.findIndex(month => month === minDate.month);\n    months = months.slice(index);\n  }\n\n  if (maxDate && date.year === maxDate.year) {\n    const index = months.findIndex(month => month === maxDate.month);\n    months = months.slice(0, index + 1);\n  }\n\n  return months;\n}\n\nexport function generateSelectBoxYears(date: NgbDate, minDate: NgbDate, maxDate: NgbDate) {\n  if (!date) {\n    return [];\n  }\n\n  const start = minDate ? Math.max(minDate.year, date.year - 500) : date.year - 10;\n  const end = maxDate ? Math.min(maxDate.year, date.year + 500) : date.year + 10;\n\n  const length = end - start + 1;\n  const numbers = Array(length);\n  for (let i = 0; i < length; i++) {\n    numbers[i] = start + i;\n  }\n\n  return numbers;\n}\n\nexport function nextMonthDisabled(calendar: NgbCalendar, date: NgbDate, maxDate: NgbDate) {\n  const nextDate = Object.assign(calendar.getNext(date, 'm'), {day: 1});\n  return maxDate && nextDate.after(maxDate);\n}\n\nexport function prevMonthDisabled(calendar: NgbCalendar, date: NgbDate, minDate: NgbDate) {\n  const prevDate = Object.assign(calendar.getPrev(date, 'm'), {day: 1});\n  return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n                     prevDate.year < minDate.year && minDate.month === 1);\n}\n\nexport function buildMonths(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    force: boolean): MonthViewModel[] {\n  const {displayMonths, months} = state;\n  // move old months to a temporary array\n  const monthsToReuse = months.splice(0, months.length);\n\n  // generate new first dates, nullify or reuse months\n  const firstDates = Array.from({length: displayMonths}, (_, i) => {\n    const firstDate = Object.assign(calendar.getNext(date, 'm', i), {day: 1});\n    months[i] = null;\n\n    if (!force) {\n      const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n      // move reused month back to months\n      if (reusedIndex !== -1) {\n        months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n      }\n    }\n\n    return firstDate;\n  });\n\n  // rebuild nullified months\n  firstDates.forEach((firstDate, i) => {\n    if (months[i] === null) {\n      months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || {} as MonthViewModel);\n    }\n  });\n\n  return months;\n}\n\nexport function buildMonth(\n    calendar: NgbCalendar, date: NgbDate, state: DatepickerViewModel, i18n: NgbDatepickerI18n,\n    month: MonthViewModel = {} as MonthViewModel): MonthViewModel {\n  const {dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays} = state;\n  const calendarToday = calendar.getToday();\n\n  month.firstDate = null;\n  month.lastDate = null;\n  month.number = date.month;\n  month.year = date.year;\n  month.weeks = month.weeks || [];\n  month.weekdays = month.weekdays || [];\n\n  date = getFirstViewDate(calendar, date, firstDayOfWeek);\n\n  // month has weeks\n  for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n    let weekObject = month.weeks[week];\n    if (!weekObject) {\n      weekObject = month.weeks[week] = {number: 0, days: [], collapsed: true};\n    }\n    const days = weekObject.days;\n\n    // week has days\n    for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n      if (week === 0) {\n        month.weekdays[day] = calendar.getWeekday(date);\n      }\n\n      const newDate = new NgbDate(date.year, date.month, date.day);\n      const nextDate = calendar.getNext(newDate);\n\n      const ariaLabel = i18n.getDayAriaLabel(newDate);\n\n      // marking date as disabled\n      let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n      if (!disabled && markDisabled) {\n        disabled = markDisabled(newDate, {month: month.number, year: month.year});\n      }\n\n      // today\n      let today = newDate.equals(calendarToday);\n\n      // adding user-provided data to the context\n      let contextUserData =\n          dayTemplateData ? dayTemplateData(newDate, {month: month.number, year: month.year}) : undefined;\n\n      // saving first date of the month\n      if (month.firstDate === null && newDate.month === month.number) {\n        month.firstDate = newDate;\n      }\n\n      // saving last date of the month\n      if (newDate.month === month.number && nextDate.month !== month.number) {\n        month.lastDate = newDate;\n      }\n\n      let dayObject = days[day];\n      if (!dayObject) {\n        dayObject = days[day] = {} as DayViewModel;\n      }\n      dayObject.date = newDate;\n      dayObject.context = Object.assign(dayObject.context || {}, {\n        $implicit: newDate,\n        date: newDate,\n        data: contextUserData,\n        currentMonth: month.number,\n        currentYear: month.year, disabled,\n        focused: false,\n        selected: false, today\n      });\n      dayObject.tabindex = -1;\n      dayObject.ariaLabel = ariaLabel;\n      dayObject.hidden = false;\n\n      date = nextDate;\n    }\n\n    weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n\n    // marking week as collapsed\n    weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n        days[days.length - 1].date.month !== month.number;\n  }\n\n  return month;\n}\n\nexport function getFirstViewDate(calendar: NgbCalendar, date: NgbDate, firstDayOfWeek: number): NgbDate {\n  const daysPerWeek = calendar.getDaysPerWeek();\n  const firstMonthDate = new NgbDate(date.year, date.month, 1);\n  const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n  return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate} from '@angular/common';\nimport {NgbDateStruct} from './ngb-date-struct';\n\nexport function NGB_DATEPICKER_18N_FACTORY(locale) {\n  return new NgbDatepickerI18nDefault(locale);\n}\n\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbDatepickerI18n {\n  /**\n   * Returns the short weekday name to display in the heading of the month view.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  abstract getWeekdayShortName(weekday: number): string;\n\n  /**\n   * Returns the short month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthShortName(month: number, year?: number): string;\n\n  /**\n   * Returns the full month name to display in the date picker navigation.\n   *\n   * With default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   */\n  abstract getMonthFullName(month: number, year?: number): string;\n\n  /**\n   * Returns the value of the `aria-label` attribute for a specific date.\n   *\n   * @since 2.0.0\n   */\n  abstract getDayAriaLabel(date: NgbDateStruct): string;\n\n  /**\n   * Returns the textual representation of a day that is rendered in a day cell.\n   *\n   * @since 3.0.0\n   */\n  getDayNumerals(date: NgbDateStruct): string { return `${date.day}`; }\n\n  /**\n   * Returns the textual representation of a week number rendered by datepicker.\n   *\n   * @since 3.0.0\n   */\n  getWeekNumerals(weekNumber: number): string { return `${weekNumber}`; }\n\n  /**\n   * Returns the textual representation of a year that is rendered in the datepicker year select box.\n   *\n   * @since 3.0.0\n   */\n  getYearNumerals(year: number): string { return `${year}`; }\n}\n\n@Injectable()\nexport class NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n  private _weekdaysShort: Array<string>;\n  private _monthsShort: Array<string>;\n  private _monthsFull: Array<string>;\n\n  constructor(@Inject(LOCALE_ID) private _locale: string) {\n    super();\n\n    const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n    this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n\n    this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n    this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n  }\n\n  getWeekdayShortName(weekday: number): string { return this._weekdaysShort[weekday - 1]; }\n\n  getMonthShortName(month: number): string { return this._monthsShort[month - 1]; }\n\n  getMonthFullName(month: number): string { return this._monthsFull[month - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    const jsDate = new Date(date.year, date.month - 1, date.day);\n    return formatDate(jsDate, 'fullDate', this._locale);\n  }\n}\n","import {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DatepickerViewModel, NgbDayTemplateData, NgbMarkDisabled} from './datepicker-view-model';\nimport {Injectable} from '@angular/core';\nimport {isInteger, toInteger} from '../util/util';\nimport {Observable, Subject} from 'rxjs';\nimport {\n  buildMonths,\n  checkDateInRange,\n  checkMinBeforeMax,\n  isChangedDate,\n  isChangedMonth,\n  isDateSelectable,\n  generateSelectBoxYears,\n  generateSelectBoxMonths,\n  prevMonthDisabled,\n  nextMonthDisabled\n} from './datepicker-tools';\n\nimport {filter} from 'rxjs/operators';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\nexport interface DatepickerServiceInputs extends\n    Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' |\n                     'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {}\n\n@Injectable()\nexport class NgbDatepickerService {\n  private _VALIDATORS:\n      {[K in keyof DatepickerServiceInputs]: (v: DatepickerServiceInputs[K]) => Partial<DatepickerViewModel>} = {\n        dayTemplateData: (dayTemplateData: NgbDayTemplateData) => {\n          if (this._state.dayTemplateData !== dayTemplateData) {\n            return {dayTemplateData};\n          }\n        },\n        displayMonths: (displayMonths: number) => {\n          displayMonths = toInteger(displayMonths);\n          if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            return {displayMonths};\n          }\n        },\n        disabled: (disabled: boolean) => {\n          if (this._state.disabled !== disabled) {\n            return {disabled};\n          }\n        },\n        firstDayOfWeek: (firstDayOfWeek: number) => {\n          firstDayOfWeek = toInteger(firstDayOfWeek);\n          if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            return {firstDayOfWeek};\n          }\n        },\n        focusVisible: (focusVisible: boolean) => {\n          if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            return {focusVisible};\n          }\n        },\n        markDisabled: (markDisabled: NgbMarkDisabled) => {\n          if (this._state.markDisabled !== markDisabled) {\n            return {markDisabled};\n          }\n        },\n        maxDate: (date: NgbDate) => {\n          const maxDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.maxDate, maxDate)) {\n            return {maxDate};\n          }\n        },\n        minDate: (date: NgbDate) => {\n          const minDate = this.toValidDate(date, null);\n          if (isChangedDate(this._state.minDate, minDate)) {\n            return {minDate};\n          }\n        },\n        navigation: (navigation: 'select' | 'arrows' | 'none') => {\n          if (this._state.navigation !== navigation) {\n            return {navigation};\n          }\n        },\n        outsideDays: (outsideDays: 'visible' | 'collapsed' | 'hidden') => {\n          if (this._state.outsideDays !== outsideDays) {\n            return {outsideDays};\n          }\n        }\n      };\n\n  private _model$ = new Subject<DatepickerViewModel>();\n\n  private _dateSelect$ = new Subject<NgbDate>();\n\n  private _state: DatepickerViewModel = {\n    disabled: false,\n    displayMonths: 1,\n    firstDayOfWeek: 1,\n    focusVisible: false,\n    months: [],\n    navigation: 'select',\n    outsideDays: 'visible',\n    prevDisabled: false,\n    nextDisabled: false,\n    selectBoxes: {years: [], months: []},\n    selectedDate: null\n  };\n\n  get model$(): Observable<DatepickerViewModel> { return this._model$.pipe(filter(model => model.months.length > 0)); }\n\n  get dateSelect$(): Observable<NgbDate> { return this._dateSelect$.pipe(filter(date => date !== null)); }\n\n  set(options: DatepickerServiceInputs) {\n    let patch = Object.keys(options)\n                    .map(key => this._VALIDATORS[key](options[key]))\n                    .reduce((obj, part) => ({...obj, ...part}), {});\n\n    if (Object.keys(patch).length > 0) {\n      this._nextState(patch);\n    }\n  }\n\n  constructor(private _calendar: NgbCalendar, private _i18n: NgbDatepickerI18n) {}\n\n  focus(date: NgbDate) {\n    if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n      this._nextState({focusDate: date});\n    }\n  }\n\n  focusSelect() {\n    if (isDateSelectable(this._state.focusDate, this._state)) {\n      this.select(this._state.focusDate, {emitEvent: true});\n    }\n  }\n\n  open(date: NgbDate) {\n    const firstDate = this.toValidDate(date, this._calendar.getToday());\n    if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n      this._nextState({firstDate});\n    }\n  }\n\n  select(date: NgbDate, options: {emitEvent?: boolean} = {}) {\n    const selectedDate = this.toValidDate(date, null);\n    if (!this._state.disabled) {\n      if (isChangedDate(this._state.selectedDate, selectedDate)) {\n        this._nextState({selectedDate});\n      }\n\n      if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n        this._dateSelect$.next(selectedDate);\n      }\n    }\n  }\n\n  toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate {\n    const ngbDate = NgbDate.from(date);\n    if (defaultValue === undefined) {\n      defaultValue = this._calendar.getToday();\n    }\n    return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n  }\n\n  getMonth(struct: NgbDateStruct) {\n    for (let month of this._state.months) {\n      if (struct.month === month.number && struct.year === month.year) {\n        return month;\n      }\n    }\n    throw new Error(`month ${struct.month} of year ${struct.year} not found`);\n  }\n\n  private _nextState(patch: Partial<DatepickerViewModel>) {\n    const newState = this._updateState(patch);\n    this._patchContexts(newState);\n    this._state = newState;\n    this._model$.next(this._state);\n  }\n\n  private _patchContexts(state: DatepickerViewModel) {\n    const {months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays} = state;\n    state.months.forEach(month => {\n      month.weeks.forEach(week => {\n        week.days.forEach(day => {\n\n          // patch focus flag\n          if (focusDate) {\n            day.context.focused = focusDate.equals(day.date) && focusVisible;\n          }\n\n          // calculating tabindex\n          day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n\n          // override context disabled\n          if (disabled === true) {\n            day.context.disabled = true;\n          }\n\n          // patch selection flag\n          if (selectedDate !== undefined) {\n            day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n          }\n\n          // visibility\n          if (month.number !== day.date.month) {\n            day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                 day.date.before(months[displayMonths - 1].lastDate));\n          }\n        });\n      });\n    });\n  }\n\n  private _updateState(patch: Partial<DatepickerViewModel>): DatepickerViewModel {\n    // patching fields\n    const state = Object.assign({}, this._state, patch);\n\n    let startDate = state.firstDate;\n\n    // min/max dates changed\n    if ('minDate' in patch || 'maxDate' in patch) {\n      checkMinBeforeMax(state.minDate, state.maxDate);\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n    }\n\n    // disabled\n    if ('disabled' in patch) {\n      state.focusVisible = false;\n    }\n\n    // initial rebuild via 'select()'\n    if ('selectedDate' in patch && this._state.months.length === 0) {\n      startDate = state.selectedDate;\n    }\n\n    // terminate early if only focus visibility was changed\n    if ('focusVisible' in patch) {\n      return state;\n    }\n\n    // focus date changed\n    if ('focusDate' in patch) {\n      state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n      startDate = state.focusDate;\n\n      // nothing to rebuild if only focus changed and it is still visible\n      if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n          !state.focusDate.after(state.lastDate)) {\n        return state;\n      }\n    }\n\n    // first date changed\n    if ('firstDate' in patch) {\n      state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n      startDate = state.firstDate;\n    }\n\n    // rebuilding months\n    if (startDate) {\n      const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n          'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n\n      const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n\n      // updating months and boundary dates\n      state.months = months;\n      state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n      state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n\n      // reset selected date if 'markDisabled' returns true\n      if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n        state.selectedDate = null;\n      }\n\n      // adjusting focus after months were built\n      if ('firstDate' in patch) {\n        if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n            state.focusDate.after(state.lastDate)) {\n          state.focusDate = startDate;\n        }\n      }\n\n      // adjusting months/years for the select box navigation\n      const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n      const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n      if (state.navigation === 'select') {\n        // years ->  boundaries (min/max were changed)\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n          state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n        }\n\n        // months -> when current year or boundaries change\n        if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n          state.selectBoxes.months =\n              generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n        }\n      } else {\n        state.selectBoxes = {years: [], months: []};\n      }\n\n      // updating navigation arrows -> boundaries change (min/max) or month/year changes\n      if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n          (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n        state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n        state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n      }\n    }\n\n    return state;\n  }\n}\n","import {NgbDate} from './ngb-date';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\nexport type NgbMarkDisabled = (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\nexport type NgbDayTemplateData = (date: NgbDateStruct, current: {year: number, month: number}) => any;\n\nexport type DayViewModel = {\n  date: NgbDate,\n  context: DayTemplateContext,\n  tabindex: number,\n  ariaLabel: string,\n  hidden: boolean\n};\n\nexport type WeekViewModel = {\n  number: number,\n  days: DayViewModel[],\n  collapsed: boolean\n};\n\nexport type MonthViewModel = {\n  firstDate: NgbDate,\n  lastDate: NgbDate,\n  number: number,\n  year: number,\n  weeks: WeekViewModel[],\n  weekdays: number[]\n};\n\n// clang-format off\nexport type DatepickerViewModel = {\n  dayTemplateData?: NgbDayTemplateData,\n  disabled: boolean,\n  displayMonths: number,\n  firstDate?: NgbDate,\n  firstDayOfWeek: number,\n  focusDate?: NgbDate,\n  focusVisible: boolean,\n  lastDate?: NgbDate,\n  markDisabled?: NgbMarkDisabled,\n  maxDate?: NgbDate,\n  minDate?: NgbDate,\n  months: MonthViewModel[],\n  navigation: 'select' | 'arrows' | 'none',\n  outsideDays: 'visible' | 'collapsed' | 'hidden',\n  prevDisabled: boolean,\n  nextDisabled: boolean,\n  selectBoxes: {\n    years: number[],\n    months: number[]\n  },\n  selectedDate: NgbDate\n};\n// clang-format on\n\nexport enum NavigationEvent {\n  PREV,\n  NEXT\n}\n","import {Injectable, TemplateRef} from '@angular/core';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerConfig {\n  dayTemplate: TemplateRef<DayTemplateContext>;\n  dayTemplateData: (date: NgbDateStruct, current: {year: number, month: number}) => any;\n  footerTemplate: TemplateRef<any>;\n  displayMonths = 1;\n  firstDayOfWeek = 1;\n  markDisabled: (date: NgbDateStruct, current: {year: number, month: number}) => boolean;\n  minDate: NgbDateStruct;\n  maxDate: NgbDateStruct;\n  navigation: 'select' | 'arrows' | 'none' = 'select';\n  outsideDays: 'visible' | 'collapsed' | 'hidden' = 'visible';\n  showWeekdays = true;\n  showWeekNumbers = false;\n  startDate: {year: number, month: number};\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\nexport function NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n  return new NgbDateStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY})\nexport abstract class NgbDateAdapter<D> {\n  /**\n   * Converts a user-model date of type `D` to an `NgbDateStruct` for internal use.\n   */\n  abstract fromModel(value: D): NgbDateStruct;\n\n  /**\n   * Converts an internal `NgbDateStruct` date to a user-model date of type `D`.\n   */\n  abstract toModel(date: NgbDateStruct): D;\n}\n\n@Injectable()\nexport class NgbDateStructAdapter extends NgbDateAdapter<NgbDateStruct> {\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  fromModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n\n  /**\n   * Converts a NgbDateStruct value into NgbDateStruct value\n   */\n  toModel(date: NgbDateStruct): NgbDateStruct {\n    return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n        {year: date.year, month: date.month, day: date.day} :\n        null;\n  }\n}\n","import {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, take, takeUntil} from 'rxjs/operators';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {DatepickerServiceInputs, NgbDatepickerService} from './datepicker-service';\nimport {DatepickerViewModel, NavigationEvent} from './datepicker-view-model';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {isChangedDate, isChangedMonth} from './datepicker-tools';\nimport {hasClassName} from '../util/util';\n\nexport const NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbDatepicker),\n  multi: true\n};\n\n/**\n * An event emitted right before the navigation happens and the month displayed by the datepicker changes.\n */\nexport interface NgbDatepickerNavigateEvent {\n  /**\n   * The currently displayed month.\n   */\n  current: {year: number, month: number};\n\n  /**\n   * The month we're navigating to.\n   */\n  next: {year: number, month: number};\n\n  /**\n   * Calling this function will prevent navigation from happening.\n   *\n   * @since 4.1.0\n   */\n  preventDefault: () => void;\n}\n\n/**\n * An interface that represents the readonly public state of the datepicker.\n *\n * Accessible via the `datepicker.state` getter\n *\n * @since 5.2.0\n */\nexport interface NgbDatepickerState {\n  /**\n   * The earliest date that can be displayed or selected\n   */\n  readonly minDate: NgbDate;\n\n  /**\n   * The latest date that can be displayed or selected\n   */\n  readonly maxDate: NgbDate;\n\n  /**\n   * The first visible date of currently displayed months\n   */\n  readonly firstDate: NgbDate;\n\n  /**\n   * The last visible date of currently displayed months\n   */\n  readonly lastDate: NgbDate;\n\n  /**\n   * The date currently focused by the datepicker\n   */\n  readonly focusedDate: NgbDate;\n\n  /**\n   * First dates of months currently displayed by the datepicker\n   *\n   * @since 5.3.0\n   */\n  readonly months: NgbDate[];\n}\n\n/**\n * A directive that marks the content template that customizes the way datepicker months are displayed\n *\n * @since 5.3.0\n */\n@Directive({selector: 'ng-template[ngbDatepickerContent]'})\nexport class NgbDatepickerContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\n@Component({\n  exportAs: 'ngbDatepicker',\n  selector: 'ngb-datepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker.scss'],\n  template: `\n    <ng-template #defaultDayTemplate let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\"\n                 let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <ng-template #defaultContentTemplate>\n      <div *ngFor=\"let month of model.months; let i = index;\" class=\"ngb-dp-month\">\n        <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\" class=\"ngb-dp-month-name\">\n          {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n        </div>\n        <ngb-datepicker-month [month]=\"month.firstDate\"></ngb-datepicker-month>\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div class=\"ngb-dp-content\" [class.ngb-dp-months]=\"!contentTemplate\" #content>\n      <ng-template [ngTemplateOutlet]=\"contentTemplate?.templateRef || defaultContentTemplate\"></ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n  providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService]\n})\nexport class NgbDatepicker implements OnDestroy,\n    OnChanges, OnInit, ControlValueAccessor {\n  model: DatepickerViewModel;\n\n  @ViewChild('defaultDayTemplate', {static: true}) private _defaultDayTemplate: TemplateRef<DayTemplateContext>;\n  @ViewChild('content', {static: true}) private _contentEl: ElementRef<HTMLElement>;\n  @ContentChild(NgbDatepickerContent, {static: true}) contentTemplate: NgbDatepickerContent;\n\n  private _controlValue: NgbDate;\n  private _destroyed$ = new Subject<void>();\n  private _publicState: NgbDatepickerState = <any>{};\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The latest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * The earliest date that can be displayed or selected.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * An event emitted right before the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 5.2.0\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @deprecated 6.0.0 Please use 'dateSelect' output instead due to collision with native\n   * 'select' event.\n   */\n  @Output() select = this.dateSelect;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(\n      private _service: NgbDatepickerService, private _calendar: NgbCalendar, public i18n: NgbDatepickerI18n,\n      config: NgbDatepickerConfig, cd: ChangeDetectorRef, private _elementRef: ElementRef<HTMLElement>,\n      private _ngbDateAdapter: NgbDateAdapter<any>, private _ngZone: NgZone) {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n        .forEach(input => this[input] = config[input]);\n\n    _service.dateSelect$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.dateSelect.emit(date); });\n\n    _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n      const newDate = model.firstDate;\n      const oldDate = this.model ? this.model.firstDate : null;\n\n      // update public state\n      this._publicState = {\n        maxDate: model.maxDate,\n        minDate: model.minDate,\n        firstDate: model.firstDate,\n        lastDate: model.lastDate,\n        focusedDate: model.focusDate,\n        months: model.months.map(viewModel => viewModel.firstDate)\n      };\n\n      let navigationPrevented = false;\n      // emitting navigation event if the first month changes\n      if (!newDate.equals(oldDate)) {\n        this.navigate.emit({\n          current: oldDate ? {year: oldDate.year, month: oldDate.month} : null,\n          next: {year: newDate.year, month: newDate.month},\n          preventDefault: () => navigationPrevented = true\n        });\n\n        // can't prevent the very first navigation\n        if (navigationPrevented && oldDate !== null) {\n          this._service.open(oldDate);\n          return;\n        }\n      }\n\n      const newSelectedDate = model.selectedDate;\n      const newFocusedDate = model.focusDate;\n      const oldFocusedDate = this.model ? this.model.focusDate : null;\n\n      this.model = model;\n\n      // handling selection change\n      if (isChangedDate(newSelectedDate, this._controlValue)) {\n        this._controlValue = newSelectedDate;\n        this.onTouched();\n        this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n      }\n\n      // handling focus change\n      if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n        this.focus();\n      }\n\n      cd.markForCheck();\n    });\n  }\n\n  /**\n   *  Returns the readonly public state of the datepicker\n   *\n   * @since 5.2.0\n   */\n  get state(): NgbDatepickerState { return this._publicState; }\n\n  /**\n   *  Returns the calendar service used in the specific datepicker instance.\n   *\n   *  @since 5.3.0\n   */\n  get calendar(): NgbCalendar { return this._calendar; }\n\n  /**\n   *  Focuses on given date.\n   */\n  focusDate(date: NgbDateStruct): void { this._service.focus(NgbDate.from(date)); }\n\n  /**\n   *  Selects focused date.\n   */\n  focusSelect(): void { this._service.focusSelect(); }\n\n  focus() {\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      const elementToFocus =\n          this._elementRef.nativeElement.querySelector<HTMLDivElement>('div.ngb-dp-day[tabindex=\"0\"]');\n      if (elementToFocus) {\n        elementToFocus.focus();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    this._service.open(NgbDate.from(date ? date.day ? date as NgbDateStruct : {...date, day: 1} : null));\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      const focusIns$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusin');\n      const focusOuts$ = fromEvent<FocusEvent>(this._contentEl.nativeElement, 'focusout');\n      const {nativeElement} = this._elementRef;\n\n      // we're changing 'focusVisible' only when entering or leaving months view\n      // and ignoring all focus events where both 'target' and 'related' target are day cells\n      merge(focusIns$, focusOuts$)\n          .pipe(\n              filter(\n                  ({target, relatedTarget}) =>\n                      !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day') &&\n                        nativeElement.contains(target as Node) && nativeElement.contains(relatedTarget as Node))),\n              takeUntil(this._destroyed$))\n          .subscribe(({type}) => this._ngZone.run(() => this._service.set({focusVisible: type === 'focusin'})));\n    });\n  }\n\n  ngOnDestroy() { this._destroyed$.next(); }\n\n  ngOnInit() {\n    if (this.model === undefined) {\n      const inputs: DatepickerServiceInputs = {};\n      ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n       'outsideDays']\n          .forEach(name => inputs[name] = this[name]);\n      this._service.set(inputs);\n\n      this.navigateTo(this.startDate);\n    }\n    if (!this.dayTemplate) {\n      this.dayTemplate = this._defaultDayTemplate;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const inputs: DatepickerServiceInputs = {};\n    ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n     'outsideDays']\n        .filter(name => name in changes)\n        .forEach(name => inputs[name] = this[name]);\n    this._service.set(inputs);\n\n    if ('startDate' in changes) {\n      const {currentValue, previousValue} = changes.startDate;\n      if (isChangedMonth(previousValue, currentValue)) {\n        this.navigateTo(this.startDate);\n      }\n    }\n  }\n\n  onDateSelect(date: NgbDate) {\n    this._service.focus(date);\n    this._service.select(date, {emitEvent: true});\n  }\n\n  onNavigateDateSelect(date: NgbDate) { this._service.open(date); }\n\n  onNavigateEvent(event: NavigationEvent) {\n    switch (event) {\n      case NavigationEvent.PREV:\n        this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n        break;\n      case NavigationEvent.NEXT:\n        this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n        break;\n    }\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(disabled: boolean) { this._service.set({disabled}); }\n\n  writeValue(value) {\n    this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n    this._service.select(this._controlValue);\n  }\n}\n","export enum Key {\n  Tab = 9,\n  Enter = 13,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {Key} from '../util/key';\n\n/**\n * A service that represents the keyboard navigation.\n *\n * Default keyboard shortcuts [are documented in the overview](#/components/datepicker/overview#keyboard-shortcuts)\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDatepickerKeyboardService {\n  /**\n   * Processes a keyboard event.\n   */\n  processKey(event: KeyboardEvent, datepicker: NgbDatepicker) {\n    const {state, calendar} = datepicker;\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.PageUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.PageDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, event.shiftKey ? 'y' : 'm', 1));\n        break;\n      case Key.End:\n        datepicker.focusDate(event.shiftKey ? state.maxDate : state.lastDate);\n        break;\n      case Key.Home:\n        datepicker.focusDate(event.shiftKey ? state.minDate : state.firstDate);\n        break;\n      case Key.ArrowLeft:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowUp:\n        datepicker.focusDate(calendar.getPrev(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.ArrowRight:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', 1));\n        break;\n      case Key.ArrowDown:\n        datepicker.focusDate(calendar.getNext(state.focusedDate, 'd', calendar.getDaysPerWeek()));\n        break;\n      case Key.Enter:\n      case Key.Space:\n        datepicker.focusSelect();\n        break;\n      default:\n        return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDatepicker} from './datepicker';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\nimport {NgbDatepickerService} from './datepicker-service';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDateStruct} from './ngb-date-struct';\n\n/**\n * A component that renders one month including all the days, weekdays and week numbers. Can be used inside\n * the `<ng-template ngbDatepickerMonths></ng-template>` when you want to customize months layout.\n *\n * For a usage example, see [custom month layout demo](#/components/datepicker/examples#custommonth)\n *\n * @since 5.3.0\n */\n@Component({\n  selector: 'ngb-datepicker-month',\n  host: {'role': 'grid', '(keydown)': 'onKeyDown($event)'},\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-month.scss'],\n  template: `\n    <div *ngIf=\"datepicker.showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays\" role=\"row\">\n      <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of viewModel.weekdays\" class=\"ngb-dp-weekday small\" role=\"columnheader\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"viewModel.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"datepicker.showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day); $event.preventDefault()\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"datepicker.dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `\n})\nexport class NgbDatepickerMonth {\n  /**\n   * The first date of month to be rendered.\n   *\n   * This month must one of the months present in the\n   * [datepicker state](#/components/datepicker/api#NgbDatepickerState).\n   */\n  @Input()\n  set month(month: NgbDateStruct) {\n    this.viewModel = this._service.getMonth(month);\n  }\n\n  viewModel: MonthViewModel;\n\n  constructor(\n      public i18n: NgbDatepickerI18n, public datepicker: NgbDatepicker,\n      private _keyboardService: NgbDatepickerKeyboardService, private _service: NgbDatepickerService) {}\n\n  onKeyDown(event: KeyboardEvent) { this._keyboardService.processKey(event, this.datepicker); }\n\n  doSelect(day: DayViewModel) {\n    if (!day.context.disabled && !day.hidden) {\n      this.datepicker.onDateSelect(day.date);\n    }\n  }\n}\n","import {Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport {NavigationEvent, MonthViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation.scss'],\n  template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickPrev($event)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"onClickNext($event)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `\n})\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: MonthViewModel[] = [];\n  @Input() showSelect: boolean;\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() selectBoxes: {years: number[], months: number[]};\n\n  @Output() navigate = new EventEmitter<NavigationEvent>();\n  @Output() select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  onClickPrev(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.PREV);\n  }\n\n  onClickNext(event: MouseEvent) {\n    (event.currentTarget as HTMLElement).focus();\n    this.navigate.emit(this.navigation.NEXT);\n  }\n}\n","import {NgZone} from '@angular/core';\nimport {fromEvent, Observable, race} from 'rxjs';\nimport {delay, filter, map, takeUntil, tap, withLatestFrom} from 'rxjs/operators';\nimport {Key} from './key';\nimport {closest} from './util';\n\nconst isContainedIn = (element: HTMLElement, array?: HTMLElement[]) =>\n    array ? array.some(item => item.contains(element)) : false;\n\nconst matchesSelectorIfAny = (element: HTMLElement, selector?: string) =>\n    !selector || closest(element, selector) != null;\n\n// we have to add a more significant delay to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\nconst isMobile = (() => {\n  const isIOS = () => /iPad|iPhone|iPod/.test(navigator.userAgent) ||\n      (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2);\n  const isAndroid = () => /Android/.test(navigator.userAgent);\n\n  return typeof navigator !== 'undefined' ? !!navigator.userAgent && (isIOS() || isAndroid()) : false;\n})();\n\n// setting 'ngbAutoClose' synchronously on mobile results in immediate popup closing\n// when tapping on the triggering element\nconst wrapAsyncForMobile = fn => isMobile ? () => setTimeout(() => fn(), 100) : fn;\n\nexport function ngbAutoClose(\n    zone: NgZone, document: any, type: boolean | 'inside' | 'outside', close: () => void, closed$: Observable<any>,\n    insideElements: HTMLElement[], ignoreElements?: HTMLElement[], insideSelector?: string) {\n  // closing on ESC and outside clicks\n  if (type) {\n    zone.runOutsideAngular(wrapAsyncForMobile(() => {\n\n      const shouldCloseOnClick = (event: MouseEvent) => {\n        const element = event.target as HTMLElement;\n        if (event.button === 2 || isContainedIn(element, ignoreElements)) {\n          return false;\n        }\n        if (type === 'inside') {\n          return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n        } else if (type === 'outside') {\n          return !isContainedIn(element, insideElements);\n        } else /* if (type === true) */ {\n          return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n        }\n      };\n\n      const escapes$ = fromEvent<KeyboardEvent>(document, 'keydown')\n                           .pipe(\n                               takeUntil(closed$),\n                               // tslint:disable-next-line:deprecation\n                               filter(e => e.which === Key.Escape), tap(e => e.preventDefault()));\n\n\n      // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown',\n      // because on 'mouseup' DOM nodes might be detached\n      const mouseDowns$ =\n          fromEvent<MouseEvent>(document, 'mousedown').pipe(map(shouldCloseOnClick), takeUntil(closed$));\n\n      const closeableClicks$ = fromEvent<MouseEvent>(document, 'mouseup')\n                                   .pipe(\n                                       withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(0),\n                                       takeUntil(closed$)) as Observable<MouseEvent>;\n\n\n      race<Event>([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n    }));\n  }\n}\n","import {NgZone} from '@angular/core';\n\nimport {fromEvent, Observable} from 'rxjs';\nimport {filter, map, takeUntil, withLatestFrom} from 'rxjs/operators';\n\nimport {Key} from './key';\n\n\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n  'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n  'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n */\nexport function getFocusableBoundaryElements(element: HTMLElement): HTMLElement[] {\n  const list: HTMLElement[] =\n      Array.from(element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR) as NodeListOf<HTMLElement>)\n          .filter(el => el.tabIndex !== -1);\n  return [list[0], list[list.length - 1]];\n}\n\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * @param zone Angular zone\n * @param element The element around which focus will be trapped inside\n * @param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * @param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n */\nexport const ngbFocusTrap =\n    (zone: NgZone, element: HTMLElement, stopFocusTrap$: Observable<any>, refocusOnClick = false) => {\n      zone.runOutsideAngular(() => {\n        // last focused element\n        const lastFocusedElement$ =\n            fromEvent<FocusEvent>(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n\n        // 'tab' / 'shift+tab' stream\n        fromEvent<KeyboardEvent>(element, 'keydown')\n            .pipe(\n                takeUntil(stopFocusTrap$),\n                // tslint:disable:deprecation\n                filter(e => e.which === Key.Tab),\n                // tslint:enable:deprecation\n                withLatestFrom(lastFocusedElement$))\n            .subscribe(([tabEvent, focusedElement]) => {\n              const[first, last] = getFocusableBoundaryElements(element);\n\n              if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n                last.focus();\n                tabEvent.preventDefault();\n              }\n\n              if (focusedElement === last && !tabEvent.shiftKey) {\n                first.focus();\n                tabEvent.preventDefault();\n              }\n            });\n\n        // inside click\n        if (refocusOnClick) {\n          fromEvent(element, 'click')\n              .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => arr[1] as HTMLElement))\n              .subscribe(lastFocusedElement => lastFocusedElement.focus());\n        }\n      });\n    };\n","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nexport class Positioning {\n  private getAllStyles(element: HTMLElement) { return window.getComputedStyle(element); }\n\n  private getStyle(element: HTMLElement, prop: string): string { return this.getAllStyles(element)[prop]; }\n\n  private isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getStyle(element, 'position') || 'static') === 'static';\n  }\n\n  private offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n    while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || document.documentElement;\n  }\n\n  position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0};\n\n    if (this.getStyle(element, 'position') === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top: window.pageYOffset - document.documentElement.clientTop,\n      left: window.pageXOffset - document.documentElement.clientLeft\n    };\n\n    let elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport\n  */\n  positionElements(hostElement: HTMLElement, targetElement: HTMLElement, placement: string, appendToBody?: boolean):\n      boolean {\n    const[placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n\n    const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    const marginTop = parseFloat(targetElStyles.marginTop);\n    const marginBottom = parseFloat(targetElStyles.marginBottom);\n    const marginLeft = parseFloat(targetElStyles.marginLeft);\n    const marginRight = parseFloat(targetElStyles.marginRight);\n\n    let topPosition = 0;\n    let leftPosition = 0;\n\n    switch (placementPrimary) {\n      case 'top':\n        topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n        break;\n      case 'bottom':\n        topPosition = (hostElPosition.top + hostElPosition.height);\n        break;\n      case 'left':\n        leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n        break;\n      case 'right':\n        leftPosition = (hostElPosition.left + hostElPosition.width);\n        break;\n    }\n\n    switch (placementSecondary) {\n      case 'top':\n        topPosition = hostElPosition.top;\n        break;\n      case 'bottom':\n        topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n        break;\n      case 'left':\n        leftPosition = hostElPosition.left;\n        break;\n      case 'right':\n        leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n        break;\n      case 'center':\n        if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n          leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n        } else {\n          topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n        }\n        break;\n    }\n\n    /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n    // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n    targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n\n    // Check if the targetElement is inside the viewport\n    const targetElBCR = targetElement.getBoundingClientRect();\n    const html = document.documentElement;\n    const windowHeight = window.innerHeight || html.clientHeight;\n    const windowWidth = window.innerWidth || html.clientWidth;\n\n    return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight;\n  }\n}\n\nconst placementSeparator = /\\s+/;\nexport const positionService = new Positioning();\n\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\nexport function positionElements(\n    hostElement: HTMLElement, targetElement: HTMLElement, placement: string | Placement | PlacementArray,\n    appendToBody?: boolean, baseClass?: string): Placement {\n  let placementVals: Array<Placement> =\n      Array.isArray(placement) ? placement : placement.split(placementSeparator) as Array<Placement>;\n\n  const allowedPlacements = [\n    'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n    'right-top', 'right-bottom'\n  ];\n\n  const classList = targetElement.classList;\n  const addClassesToTarget = (targetPlacement: Placement): Array<string> => {\n    const[primary, secondary] = targetPlacement.split('-');\n    const classes = [];\n    if (baseClass) {\n      classes.push(`${baseClass}-${primary}`);\n      if (secondary) {\n        classes.push(`${baseClass}-${primary}-${secondary}`);\n      }\n\n      classes.forEach((classname) => { classList.add(classname); });\n    }\n    return classes;\n  };\n\n  // Remove old placement classes to avoid issues\n  if (baseClass) {\n    allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n  }\n\n  // replace auto placement with other placements\n  let hasAuto = placementVals.findIndex(val => val === 'auto');\n  if (hasAuto >= 0) {\n    allowedPlacements.forEach(function(obj) {\n      if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n        placementVals.splice(hasAuto++, 1, obj as Placement);\n      }\n    });\n  }\n\n  // coordinates where to position\n\n  // Required for transform:\n  const style = targetElement.style;\n  style.position = 'absolute';\n  style.top = '0';\n  style.left = '0';\n  style['will-change'] = 'transform';\n\n  let testPlacement: Placement;\n  let isInViewport = false;\n  for (testPlacement of placementVals) {\n    let addedClasses = addClassesToTarget(testPlacement);\n\n    if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n      isInViewport = true;\n      break;\n    }\n\n    // Remove the baseClasses for further calculation\n    if (baseClass) {\n      addedClasses.forEach((classname) => { classList.remove(classname); });\n    }\n  }\n\n  if (!isInViewport) {\n    // If nothing match, the first placement is the default one\n    testPlacement = placementVals[0];\n    addClassesToTarget(testPlacement);\n    positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n  }\n\n  return testPlacement;\n}\n\nexport type Placement = 'auto' | 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-right' | 'bottom-left' |\n    'bottom-right' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom';\n\nexport type PlacementArray = Placement | Array<Placement>| string;\n","import {padNumber, toInteger, isNumber} from '../util/util';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {Injectable} from '@angular/core';\n\nexport function NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n  return new NgbDateISOParserFormatter();\n}\n\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY})\nexport abstract class NgbDateParserFormatter {\n  /**\n   * Parses the given `string` to an `NgbDateStruct`.\n   *\n   * Implementations should try their best to provide a result, even\n   * partial. They must return `null` if the value can't be parsed.\n   */\n  abstract parse(value: string): NgbDateStruct;\n\n  /**\n   * Formats the given `NgbDateStruct` to a `string`.\n   *\n   * Implementations should return an empty string if the given date is `null`,\n   * and try their best to provide a partial result if the given date is incomplete or invalid.\n   */\n  abstract format(date: NgbDateStruct): string;\n}\n\n@Injectable()\nexport class NgbDateISOParserFormatter extends NgbDateParserFormatter {\n  parse(value: string): NgbDateStruct {\n    if (value) {\n      const dateParts = value.trim().split('-');\n      if (dateParts.length === 1 && isNumber(dateParts[0])) {\n        return {year: toInteger(dateParts[0]), month: null, day: null};\n      } else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null};\n      } else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n        return {year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2])};\n      }\n    }\n    return null;\n  }\n\n  format(date: NgbDateStruct): string {\n    return date ?\n        `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n        '';\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDatepickerInput`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepicker inputs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbInputDatepickerConfig extends NgbDatepickerConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  container: null | 'body';\n  positionTarget: string | HTMLElement;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  restoreFocus: true | HTMLElement | string = true;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {AbstractControl, ControlValueAccessor, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator} from '@angular/forms';\n\nimport {ngbAutoClose} from '../util/autoclose';\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {PlacementArray, positionElements} from '../util/positioning';\n\nimport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nimport {NgbDatepicker, NgbDatepickerNavigateEvent} from './datepicker';\nimport {DayTemplateContext} from './datepicker-day-template-context';\nimport {NgbCalendar} from './ngb-calendar';\nimport {NgbDate} from './ngb-date';\nimport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nimport {NgbDateStruct} from './ngb-date-struct';\nimport {NgbInputDatepickerConfig} from './datepicker-input-config';\nimport {NgbDatepickerConfig} from './datepicker-config';\nimport {isString} from '../util/util';\n\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\nconst NGB_DATEPICKER_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => NgbInputDatepicker),\n  multi: true\n};\n\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\n@Directive({\n  selector: 'input[ngbDatepicker]',\n  exportAs: 'ngbDatepicker',\n  host: {\n    '(input)': 'manualDateChange($event.target.value)',\n    '(change)': 'manualDateChange($event.target.value, true)',\n    '(focus)': 'onFocus()',\n    '(blur)': 'onBlur()',\n    '[disabled]': 'disabled'\n  },\n  providers: [\n    NGB_DATEPICKER_VALUE_ACCESSOR, NGB_DATEPICKER_VALIDATOR,\n    {provide: NgbDatepickerConfig, useExisting: NgbInputDatepickerConfig}\n  ],\n})\nexport class NgbInputDatepicker implements OnChanges,\n    OnDestroy, ControlValueAccessor, Validator {\n  private _cRef: ComponentRef<NgbDatepicker> = null;\n  private _disabled = false;\n  private _elWithFocus = null;\n  private _model: NgbDate;\n  private _inputValue: string;\n  private _zoneSubscription: any;\n\n  /**\n   * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n   *\n   * * `true` - the popup will close on both date selection and outside click.\n   * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n   * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The reference to a custom template for the day.\n   *\n   * Allows to completely override the way a day 'cell' in the calendar is displayed.\n   *\n   * See [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext) for the data you get inside.\n   */\n  @Input() dayTemplate: TemplateRef<DayTemplateContext>;\n\n  /**\n   * The callback to pass any arbitrary data to the template cell via the\n   * [`DayTemplateContext`](#/components/datepicker/api#DayTemplateContext)'s `data` parameter.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   *\n   * @since 3.3.0\n   */\n  @Input() dayTemplateData: (date: NgbDate, current: {year: number, month: number}) => any;\n\n  /**\n   * The number of months to display.\n   */\n  @Input() displayMonths: number;\n\n  /**\n   * The first day of the week.\n   *\n   * With default calendar we use ISO 8601: 'weekday' is 1=Mon ... 7=Sun.\n   */\n  @Input() firstDayOfWeek: number;\n\n  /**\n   * The reference to the custom template for the datepicker footer.\n   *\n   * @since 3.3.0\n   */\n  @Input() footerTemplate: TemplateRef<any>;\n\n  /**\n   * The callback to mark some dates as disabled.\n   *\n   * It is called for each new date when navigating to a different month.\n   *\n   * `current` is the month that is currently displayed by the datepicker.\n   */\n  @Input() markDisabled: (date: NgbDate, current: {year: number, month: number}) => boolean;\n\n  /**\n   * The earliest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years before the current month.\n   */\n  @Input() minDate: NgbDateStruct;\n\n  /**\n   * The latest date that can be displayed or selected. Also used for form validation.\n   *\n   * If not provided, 'year' select box will display 10 years after the current month.\n   */\n  @Input() maxDate: NgbDateStruct;\n\n  /**\n   * Navigation type.\n   *\n   * * `\"select\"` - select boxes for month and navigation arrows\n   * * `\"arrows\"` - only navigation arrows\n   * * `\"none\"` - no navigation visible at all\n   */\n  @Input() navigation: 'select' | 'arrows' | 'none';\n\n  /**\n   * The way of displaying days that don't belong to the current month.\n   *\n   * * `\"visible\"` - days are visible\n   * * `\"hidden\"` - days are hidden, white space preserved\n   * * `\"collapsed\"` - days are collapsed, so the datepicker height might change between months\n   *\n   * For the 2+ months view, days in between months are never shown.\n   */\n  @Input() outsideDays: 'visible' | 'collapsed' | 'hidden';\n\n  /**\n   * The preferred placement of the datepicker popup.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * If `true`, when closing datepicker will focus element that was focused before datepicker was opened.\n   *\n   * Alternatively you could provide a selector or an `HTMLElement` to focus. If the element doesn't exist or invalid,\n   * we'll fallback to focus document body.\n   *\n   * @since 5.2.0\n   */\n  @Input() restoreFocus: true | string | HTMLElement;\n\n  /**\n   * If `true`, weekdays will be displayed.\n   */\n  @Input() showWeekdays: boolean;\n\n  /**\n   * If `true`, week numbers will be displayed.\n   */\n  @Input() showWeekNumbers: boolean;\n\n  /**\n   * The date to open calendar with.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date is provided, calendar will open with current month.\n   *\n   * You could use `navigateTo(date)` method as an alternative.\n   */\n  @Input() startDate: {year: number, month: number, day?: number};\n\n  /**\n   * A selector specifying the element the datepicker popup should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * A css selector or html element specifying the element the datepicker popup should be positioned against.\n   *\n   * By default the input is used as a target.\n   *\n   * @since 4.2.0\n   */\n  @Input() positionTarget: string | HTMLElement;\n\n  /**\n   * An event emitted when user selects a date using keyboard or mouse.\n   *\n   * The payload of the event is currently selected `NgbDate`.\n   *\n   * @since 1.1.1\n   */\n  @Output() dateSelect = new EventEmitter<NgbDate>();\n\n  /**\n   * Event emitted right after the navigation happens and displayed month changes.\n   *\n   * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n   */\n  @Output() navigate = new EventEmitter<NgbDatepickerNavigateEvent>();\n\n  /**\n   * An event fired after closing datepicker window.\n   *\n   * @since 4.2.0\n   */\n  @Output() closed = new EventEmitter<void>();\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: any) {\n    this._disabled = value === '' || (value && value !== 'false');\n\n    if (this.isOpen()) {\n      this._cRef.instance.setDisabledState(this._disabled);\n    }\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n  private _validatorChange = () => {};\n\n\n  constructor(\n      private _parserFormatter: NgbDateParserFormatter, private _elRef: ElementRef<HTMLInputElement>,\n      private _vcRef: ViewContainerRef, private _renderer: Renderer2, private _cfr: ComponentFactoryResolver,\n      private _ngZone: NgZone, private _calendar: NgbCalendar, private _dateAdapter: NgbDateAdapter<any>,\n      @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      config: NgbInputDatepickerConfig) {\n    ['autoClose', 'container', 'positionTarget', 'placement'].forEach(input => this[input] = config[input]);\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  registerOnValidatorChange(fn: () => void): void { this._validatorChange = fn; }\n\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    const {value} = c;\n\n    if (value === null || value === undefined) {\n      return null;\n    }\n\n    const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n\n    if (!this._calendar.isValid(ngbDate)) {\n      return {'ngbDate': {invalid: value}};\n    }\n\n    if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n      return {'ngbDate': {minDate: {minDate: this.minDate, actual: value}}};\n    }\n\n    if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n      return {'ngbDate': {maxDate: {maxDate: this.maxDate, actual: value}}};\n    }\n  }\n\n  writeValue(value) {\n    this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n    this._writeModelValue(this._model);\n  }\n\n  manualDateChange(value: string, updateView = false) {\n    const inputValueChanged = value !== this._inputValue;\n    if (inputValueChanged) {\n      this._inputValue = value;\n      this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n    }\n    if (inputValueChanged || !updateView) {\n      this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n    }\n    if (updateView && this._model) {\n      this._writeModelValue(this._model);\n    }\n  }\n\n  isOpen() { return !!this._cRef; }\n\n  /**\n   * Opens the datepicker popup.\n   *\n   * If the related form control contains a valid date, the corresponding month will be opened.\n   */\n  open() {\n    if (!this.isOpen()) {\n      const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n      this._cRef = this._vcRef.createComponent(cf);\n\n      this._applyPopupStyling(this._cRef.location.nativeElement);\n      this._applyDatepickerInputs(this._cRef.instance);\n      this._subscribeForDatepickerOutputs(this._cRef.instance);\n      this._cRef.instance.ngOnInit();\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n\n      // date selection event handling\n      this._cRef.instance.registerOnChange((selectedDate) => {\n        this.writeValue(selectedDate);\n        this._onChange(selectedDate);\n        this._onTouched();\n      });\n\n      this._cRef.changeDetectorRef.detectChanges();\n\n      this._cRef.instance.setDisabledState(this.disabled);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n      }\n\n      // focus handling\n      this._elWithFocus = this._document.activeElement;\n      ngbFocusTrap(this._ngZone, this._cRef.location.nativeElement, this.closed, true);\n      this._cRef.instance.focus();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [],\n          [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n    }\n  }\n\n  /**\n   * Closes the datepicker popup.\n   */\n  close() {\n    if (this.isOpen()) {\n      this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n      this._cRef = null;\n      this.closed.emit();\n      this._changeDetector.markForCheck();\n\n      // restore focus\n      let elementToFocus = this._elWithFocus;\n      if (isString(this.restoreFocus)) {\n        elementToFocus = this._document.querySelector(this.restoreFocus);\n      } else if (this.restoreFocus !== undefined) {\n        elementToFocus = this.restoreFocus;\n      }\n\n      // in IE document.activeElement can contain an object without 'focus()' sometimes\n      if (elementToFocus && elementToFocus['focus']) {\n        elementToFocus.focus();\n      } else {\n        this._document.body.focus();\n      }\n    }\n  }\n\n  /**\n   * Toggles the datepicker popup.\n   */\n  toggle() {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Navigates to the provided date.\n   *\n   * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n   * If nothing or invalid date provided calendar will open current month.\n   *\n   * Use the `[startDate]` input as an alternative.\n   */\n  navigateTo(date?: {year: number, month: number, day?: number}) {\n    if (this.isOpen()) {\n      this._cRef.instance.navigateTo(date);\n    }\n  }\n\n  onBlur() { this._onTouched(); }\n\n  onFocus() { this._elWithFocus = this._elRef.nativeElement; }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['minDate'] || changes['maxDate']) {\n      this._validatorChange();\n\n      if (this.isOpen()) {\n        if (changes['minDate']) {\n          this._cRef.instance.minDate = this._dateAdapter.toModel(changes.minDate.currentValue);\n        }\n        if (changes['maxDate']) {\n          this._cRef.instance.maxDate = this._dateAdapter.toModel(changes.maxDate.currentValue);\n        }\n        this._cRef.instance.ngOnChanges(changes);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  private _applyDatepickerInputs(datepickerInstance: NgbDatepicker): void {\n    ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n     'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n        .forEach((optionName: string) => {\n          if (this[optionName] !== undefined) {\n            datepickerInstance[optionName] = this[optionName];\n          }\n        });\n    datepickerInstance.startDate = this.startDate || this._model;\n  }\n\n  private _applyPopupStyling(nativeElement: any) {\n    this._renderer.addClass(nativeElement, 'dropdown-menu');\n    this._renderer.addClass(nativeElement, 'show');\n\n    if (this.container === 'body') {\n      this._renderer.addClass(nativeElement, 'ngb-dp-body');\n    }\n  }\n\n  private _subscribeForDatepickerOutputs(datepickerInstance: NgbDatepicker) {\n    datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n    datepickerInstance.dateSelect.subscribe(date => {\n      this.dateSelect.emit(date);\n      if (this.autoClose === true || this.autoClose === 'inside') {\n        this.close();\n      }\n    });\n  }\n\n  private _writeModelValue(model: NgbDate) {\n    const value = this._parserFormatter.format(model);\n    this._inputValue = value;\n    this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n    if (this.isOpen()) {\n      this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n      this._onTouched();\n    }\n  }\n\n  private _fromDateStruct(date: NgbDateStruct): NgbDate {\n    const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n    return this._calendar.isValid(ngbDate) ? ngbDate : null;\n  }\n\n  private _updatePopupPosition() {\n    if (!this._cRef) {\n      return;\n    }\n\n    let hostElement: HTMLElement;\n    if (isString(this.positionTarget)) {\n      hostElement = this._document.querySelector(this.positionTarget);\n    } else if (this.positionTarget instanceof HTMLElement) {\n      hostElement = this.positionTarget;\n    } else {\n      hostElement = this._elRef.nativeElement;\n    }\n\n    if (this.positionTarget && !hostElement) {\n      throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n    }\n\n    positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: '[ngbDatepickerDayView]',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-day-view.scss'],\n  host: {\n    'class': 'btn-light',\n    '[class.bg-primary]': 'selected',\n    '[class.text-white]': 'selected',\n    '[class.text-muted]': 'isMuted()',\n    '[class.outside]': 'isMuted()',\n    '[class.active]': 'focused'\n  },\n  template: `{{ i18n.getDayNumerals(date) }}`\n})\nexport class NgbDatepickerDayView {\n  @Input() currentMonth: number;\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() focused: boolean;\n  @Input() selected: boolean;\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  AfterViewChecked,\n  ViewChild,\n  ElementRef,\n  Renderer2\n} from '@angular/core';\nimport {NgbDate} from './ngb-date';\nimport {toInteger} from '../util/util';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\n\n@Component({\n  selector: 'ngb-datepicker-navigation-select',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datepicker-navigation-select.scss'],\n  template: `\n    <select #month\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select #year\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `\n})\nexport class NgbDatepickerNavigationSelect implements AfterViewChecked {\n  @Input() date: NgbDate;\n  @Input() disabled: boolean;\n  @Input() months: number[];\n  @Input() years: number[];\n\n  @Output() select = new EventEmitter<NgbDate>();\n\n  @ViewChild('month', {static: true, read: ElementRef}) monthSelect: ElementRef;\n  @ViewChild('year', {static: true, read: ElementRef}) yearSelect: ElementRef;\n\n  private _month = -1;\n  private _year = -1;\n\n  constructor(public i18n: NgbDatepickerI18n, private _renderer: Renderer2) {}\n\n  changeMonth(month: string) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n\n  changeYear(year: string) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n\n  ngAfterViewChecked() {\n    if (this.date) {\n      if (this.date.month !== this._month) {\n        this._month = this.date.month;\n        this._renderer.setProperty(this.monthSelect.nativeElement, 'value', this._month);\n      }\n      if (this.date.year !== this._year) {\n        this._year = this.date.year;\n        this._renderer.setProperty(this.yearSelect.nativeElement, 'value', this._year);\n      }\n    }\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbPeriod, NgbCalendar} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\n\n@Injectable()\nexport abstract class NgbCalendarHijri extends NgbCalendar {\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  abstract getDaysPerMonth(month: number, year: number): number;\n\n  /**\n   * Returns the equivalent Hijri date value for a give input Gregorian date.\n   * `gDate` is s JS Date to be converted to Hijri.\n   */\n  abstract fromGregorian(gDate: Date): NgbDate;\n\n  /**\n   * Converts the current Hijri date to Gregorian.\n   */\n  abstract toGregorian(hDate: NgbDate): Date;\n\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = this._setYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = this._setMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return this._setDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = this.toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = this.toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));  // Compare with Muharram 1\n    return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return this.fromGregorian(new Date()); }\n\n\n  isValid(date: NgbDate): boolean {\n    return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n        !isNaN(this.toGregorian(date).getTime());\n  }\n\n  private _setDay(date: NgbDate, day: number): NgbDate {\n    day = +day;\n    let mDays = this.getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n      while (day <= 0) {\n        date = this._setMonth(date, date.month - 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n        day += mDays;\n      }\n    } else if (day > mDays) {\n      while (day > mDays) {\n        day -= mDays;\n        date = this._setMonth(date, date.month + 1);\n        mDays = this.getDaysPerMonth(date.month, date.year);\n      }\n    }\n    date.day = day;\n    return date;\n  }\n\n  private _setMonth(date: NgbDate, month: number): NgbDate {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n  }\n\n  private _setYear(date: NgbDate, year: number): NgbDate {\n    date.year = +year;\n    return date;\n  }\n}\n","import {NgbCalendarHijri} from './ngb-calendar-hijri';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Checks if islamic year is a leap year\n */\nfunction isIslamicLeapYear(hYear: number): boolean {\n  return (14 + 11 * hYear) % 30 < 11;\n}\n\n/**\n * Checks if gregorian years is a leap year\n */\nfunction isGregorianLeapYear(gDate: Date): boolean {\n  const year = gDate.getFullYear();\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n */\nfunction getIslamicMonthStart(hYear: number, hMonth: number): number {\n  return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n */\nfunction getIslamicYearStart(year: number): number {\n  return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n */\n\nconst GREGORIAN_EPOCH = 1721425.5;\nconst ISLAMIC_EPOCH = 1948439.5;\n\n@Injectable()\nexport class NgbCalendarIslamicCivil extends NgbCalendarHijri {\n  /**\n   * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n   * `gDate` is a JS Date to be converted to Hijri.\n   */\n  fromGregorian(gDate: Date): NgbDate {\n    const gYear = gDate.getFullYear(), gMonth = gDate.getMonth(), gDay = gDate.getDate();\n\n    let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n        -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor(\n            (367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay) + 0.5;\n\n    const days = julianDay - ISLAMIC_EPOCH;\n    const hYear = Math.floor((30 * days + 10646) / 10631.0);\n    let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n    hMonth = Math.min(hMonth, 11);\n    const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n    return new NgbDate(hYear, hMonth + 1, hDay);\n  }\n\n  /**\n   * Returns the equivalent JS date value for a give input islamic(civil) date.\n   * `hDate` is an islamic(civil) date to be converted to Gregorian.\n   */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    const julianDay =\n        hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n\n    const wjd = Math.floor(julianDay - 0.5) + 0.5, depoch = wjd - GREGORIAN_EPOCH,\n          quadricent = Math.floor(depoch / 146097), dqc = mod(depoch, 146097), cent = Math.floor(dqc / 36524),\n          dcent = mod(dqc, 36524), quad = Math.floor(dcent / 1461), dquad = mod(dcent, 1461),\n          yindex = Math.floor(dquad / 365);\n    let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    if (!(cent === 4 || yindex === 4)) {\n      year++;\n    }\n\n    const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400);\n\n    const yearday = wjd - gYearStart;\n\n    const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n\n    const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n\n    const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n        Math.floor((year - 1) / 400) +\n        Math.floor(\n            (367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n            1);\n\n    const day = wjd - tjd2 + 1;\n\n    return new Date(year, month - 1, day);\n  }\n\n  /**\n   * Returns the number of days in a specific Hijri month.\n   * `month` is 1 for Muharram, 2 for Safar, etc.\n   * `year` is any Hijri year.\n   */\n  getDaysPerMonth(month: number, year: number): number {\n    year = year + Math.floor(month / 13);\n    month = ((month - 1) % 12) + 1;\n    let length = 29 + month % 2;\n    if (month === 12 && isIslamicLeapYear(year)) {\n      length++;\n    }\n    return length;\n  }\n}\n","import {NgbCalendarIslamicCivil} from './ngb-calendar-islamic-civil';\nimport {NgbDate} from '../ngb-date';\nimport {Injectable} from '@angular/core';\n\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n */\n\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\nconst HIJRI_BEGIN = 1300;\nconst HIJRI_END = 1600;\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n\nconst MONTH_LENGTH = [\n  // 1300-1304\n  '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n  // 1305-1309\n  '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n  // 1310-1314\n  '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n  // 1315-1319\n  '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n  // 1320-1324\n  '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n  // 1325-1329\n  '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n  // 1330-1334\n  '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n  // 1335-1339\n  '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n  // 1340-1344\n  '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n  // 1345-1349\n  '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n  // 1350-1354\n  '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n  // 1355-1359\n  '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n  // 1360-1364\n  '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n  // 1365-1369\n  '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n  // 1370-1374\n  '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n  // 1375-1379\n  '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n  // 1380-1384\n  '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n  // 1385-1389\n  '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n  // 1390-1394\n  '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n  // 1395-1399\n  '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n  // 1400-1404\n  '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n  // 1405-1409\n  '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n  // 1410-1414\n  '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n  // 1415-1419\n  '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n  // 1420-1424\n  '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n  // 1425-1429\n  '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n  // 1430-1434\n  '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n  // 1435-1439\n  '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n  // 1440-1444\n  '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n  // 1445-1449\n  '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n  // 1450-1454\n  '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n  // 1455-1459\n  '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n  // 1460-1464\n  '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n  // 1465-1469\n  '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n  // 1470-1474\n  '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n  // 1475-1479\n  '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n  // 1480-1484\n  '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n  // 1485-1489\n  '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n  // 1490-1494\n  '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n  // 1495-1499\n  '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n  // 1500-1504\n  '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n  // 1505-1509\n  '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n  // 1510-1514\n  '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n  // 1515-1519\n  '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n  // 1520-1524\n  '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n  // 1525-1529\n  '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n  // 1530-1534\n  '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n  // 1535-1539\n  '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n  // 1540-1544\n  '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n  // 1545-1549\n  '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n  // 1550-1554\n  '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n  // 1555-1559\n  '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n  // 1560-1564\n  '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n  // 1565-1569\n  '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n  // 1570-1574\n  '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n  // 1575-1579\n  '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n  // 1580-1584\n  '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n  // 1585-1589\n  '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n  // 1590-1594\n  '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n  // 1595-1599\n  '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n  // 1600\n  '001010011101'\n];\n\nfunction getDaysDiff(date1: Date, date2: Date): number {\n  // Ignores the time part in date1 and date2:\n  const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n  const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  const diff = Math.abs(time1 - time2);\n  return Math.round(diff / ONE_DAY);\n}\n\n@Injectable()\nexport class NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n  /**\n  * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n  * `gdate` is s JS Date to be converted to Hijri.\n  */\n  fromGregorian(gDate: Date): NgbDate {\n    let hDay = 1, hMonth = 0, hYear = 1300;\n    let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n    if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n      let year = 1300;\n      for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n        for (let j = 0; j < 12; j++) {\n          let numOfDays = +MONTH_LENGTH[i][j] + 29;\n          if (daysDiff <= numOfDays) {\n            hDay = daysDiff + 1;\n            if (hDay > numOfDays) {\n              hDay = 1;\n              j++;\n            }\n            if (j > 11) {\n              j = 0;\n              year++;\n            }\n            hMonth = j;\n            hYear = year;\n            return new NgbDate(hYear, hMonth + 1, hDay);\n          }\n          daysDiff = daysDiff - numOfDays;\n        }\n      }\n    } else {\n      return super.fromGregorian(gDate);\n    }\n  }\n  /**\n  * Converts the current Hijri date to Gregorian.\n  */\n  toGregorian(hDate: NgbDate): Date {\n    const hYear = hDate.year;\n    const hMonth = hDate.month - 1;\n    const hDay = hDate.day;\n    let gDate = new Date(GREGORIAN_FIRST_DATE);\n    let dayDiff = hDay - 1;\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n        for (let m = 0; m < 12; m++) {\n          dayDiff += +MONTH_LENGTH[y][m] + 29;\n        }\n      }\n      for (let m = 0; m < hMonth; m++) {\n        dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n      }\n      gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n    } else {\n      gDate = super.toGregorian(hDate);\n    }\n    return gDate;\n  }\n  /**\n  * Returns the number of days in a specific Hijri hMonth.\n  * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n  * `hYear` is any Hijri hYear.\n  */\n  getDaysPerMonth(hMonth: number, hYear: number): number {\n    if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n      const pos = hYear - HIJRI_BEGIN;\n      return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n    }\n    return super.getDaysPerMonth(hMonth, hYear);\n  }\n}\n","import {NgbDate} from '../ngb-date';\n\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n */\nexport function toGregorian(jalaliDate: NgbDate): Date {\n  let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n  let date = julianToGregorian(jdn);\n  date.setHours(6, 30, 3, 200);\n  return date;\n}\n\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n  return julianToJalali(g2d);\n}\n\nexport function setJalaliYear(date: NgbDate, yearValue: number): NgbDate {\n  date.year = +yearValue;\n  return date;\n}\n\nexport function setJalaliMonth(date: NgbDate, month: number): NgbDate {\n  month = +month;\n  date.year = date.year + Math.floor((month - 1) / 12);\n  date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n  return date;\n}\n\nexport function setJalaliDay(date: NgbDate, day: number): NgbDate {\n  let mDays = getDaysPerMonth(date.month, date.year);\n  if (day <= 0) {\n    while (day <= 0) {\n      date = setJalaliMonth(date, date.month - 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n      day += mDays;\n    }\n  } else if (day > mDays) {\n    while (day > mDays) {\n      day -= mDays;\n      date = setJalaliMonth(date, date.month + 1);\n      mDays = getDaysPerMonth(date.month, date.year);\n    }\n  }\n  date.day = day;\n  return date;\n}\n\nfunction mod(a: number, b: number): number {\n  return a - b * Math.floor(a / b);\n}\n\nfunction div(a: number, b: number) {\n  return Math.trunc(a / b);\n}\n\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\nfunction jalCal(jalaliYear: number) {\n  // Jalali years starting the 33-year rule.\n  let breaks =\n      [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n  const breaksLength = breaks.length;\n  const gYear = jalaliYear + 621;\n  let leapJ = -14;\n  let jp = breaks[0];\n\n  if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n    throw new Error('Invalid Jalali year ' + jalaliYear);\n  }\n\n  // Find the limiting years for the Jalali year jalaliYear.\n  let jump;\n  for (let i = 1; i < breaksLength; i += 1) {\n    const jm = breaks[i];\n    jump = jm - jp;\n    if (jalaliYear < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  let n = jalaliYear - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gYear).\n  const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  const march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  let leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n\n  return {leap: leap, gy: gYear, march: march};\n}\n\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\nfunction julianToGregorian(julianDayNumber: number) {\n  let j = 4 * julianDayNumber + 139361631;\n  j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n  const i = div(mod(j, 1461), 4) * 5 + 308;\n  const gDay = div(mod(i, 153), 5) + 1;\n  const gMonth = mod(div(i, 153), 12) + 1;\n  const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction gregorianToJulian(gy: number, gm: number, gd: number) {\n  let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\nfunction julianToJalali(julianDayNumber: number) {\n  let gy = julianToGregorian(julianDayNumber).getFullYear()  // Calculate Gregorian year (gy).\n      ,\n      jalaliYear = gy - 621, r = jalCal(jalaliYear), gregorianDay = gregorianToJulian(gy, 3, r.march), jalaliDay,\n      jalaliMonth, numberOfDays;\n\n  // Find number of days that passed since 1 Farvardin.\n  numberOfDays = julianDayNumber - gregorianDay;\n  if (numberOfDays >= 0) {\n    if (numberOfDays <= 185) {\n      // The first 6 months.\n      jalaliMonth = 1 + div(numberOfDays, 31);\n      jalaliDay = mod(numberOfDays, 31) + 1;\n      return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n    } else {\n      // The remaining months.\n      numberOfDays -= 186;\n    }\n  } else {\n    // Previous Jalali year.\n    jalaliYear -= 1;\n    numberOfDays += 179;\n    if (r.leap === 1) {\n      numberOfDays += 1;\n    }\n  }\n  jalaliMonth = 7 + div(numberOfDays, 30);\n  jalaliDay = mod(numberOfDays, 30) + 1;\n\n  return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\nfunction jalaliToJulian(jYear: number, jMonth: number, jDay: number) {\n  let r = jalCal(jYear);\n  return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n\n/**\n * Returns the number of days in a specific jalali month.\n */\nfunction getDaysPerMonth(month: number, year: number): number {\n  if (month <= 6) {\n    return 31;\n  }\n  if (month <= 11) {\n    return 30;\n  }\n  if (jalCal(year).leap === 0) {\n    return 30;\n  }\n  return 29;\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDate} from '../ngb-date';\nimport {NgbCalendar, NgbPeriod} from '../ngb-calendar';\nimport {isInteger} from '../../util/util';\n\nimport {fromGregorian, setJalaliDay, setJalaliMonth, setJalaliYear, toGregorian} from './jalali';\n\n@Injectable()\nexport class NgbCalendarPersian extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n\n  getWeeksPerMonth() { return 6; }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date = setJalaliYear(date, date.year + number);\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setJalaliMonth(date, date.month + number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setJalaliDay(date, date.day + number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    if (firstDayOfWeek === 7) {\n      firstDayOfWeek = 0;\n    }\n\n    const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n    const date = week[thursdayIndex];\n\n    const jsDate = toGregorian(date);\n    jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7));  // Thursday\n    const time = jsDate.getTime();\n    const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n    return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  isValid(date: NgbDate): boolean {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n        !isNaN(toGregorian(date).getTime());\n  }\n}\n","import {NgbDate} from '../ngb-date';\nimport {NgbDateStruct} from '../ngb-date-struct';\n\nconst PARTS_PER_HOUR = 1080;\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\nconst GREGORIAN_EPOCH = 1721425.5;\n\nfunction isGregorianLeapYear(year: number): boolean {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n\nfunction numberOfFirstDayInYear(year: number): number {\n  let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n  let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n  let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n  let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n\n  let dayOfWeek = dayNumber % 7;  // 0 == Monday\n\n  if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n    dayNumber++;\n    dayOfWeek = dayNumber % 7;\n  }\n  if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n    dayNumber += 2;\n  } else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n    dayNumber++;\n  }\n  return dayNumber;\n}\n\nfunction getDaysInGregorianMonth(month: number, year: number): number {\n  let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  if (isGregorianLeapYear(year)) {\n    days[1]++;\n  }\n  return days[month - 1];\n}\n\nfunction getHebrewMonths(year: number): number {\n  return isHebrewLeapYear(year) ? 13 : 12;\n}\n\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n */\nfunction getDaysInHebrewYear(year: number): number {\n  return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n\nexport function isHebrewLeapYear(year: number): boolean {\n  let b = (year * 12 + 17) % 19;\n  return b >= ((b < 0) ? -7 : 12);\n}\n\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n */\nexport function getDaysInHebrewMonth(month: number, year: number): number {\n  let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n  let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n  let leapYear = isHebrewLeapYear(year);\n  let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n                               [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n  if (yearType > 0) {\n    daysInMonth[2]++;  // Kislev gets an extra day in normal or complete years.\n  }\n  if (yearType > 1) {\n    daysInMonth[1]++;  // Heshvan gets an extra day in complete years only.\n  }\n  return daysInMonth[month - 1];\n}\n\nexport function getDayNumberInHebrewYear(date: NgbDate): number {\n  let numberOfDay = 0;\n  for (let i = 1; i < date.month; i++) {\n    numberOfDay += getDaysInHebrewMonth(i, date.year);\n  }\n  return numberOfDay + date.day;\n}\n\nexport function setHebrewMonth(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getHebrewMonths(date.year) - date.month) {\n        val -= getHebrewMonths(date.year) - date.month + 1;\n        date.year++;\n        date.month = 1;\n      } else {\n        date.month += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.month) {\n        date.year--;\n        val -= date.month;\n        date.month = getHebrewMonths(date.year);\n      } else {\n        date.month -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\nexport function setHebrewDay(date: NgbDate, val: number): NgbDate {\n  let after = val >= 0;\n  if (!after) {\n    val = -val;\n  }\n  while (val > 0) {\n    if (after) {\n      if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n        val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n        date.year++;\n        date.month = 1;\n        date.day = 1;\n      } else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n        val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n        date.month++;\n        date.day = 1;\n      } else {\n        date.day += val;\n        val = 0;\n      }\n    } else {\n      if (val >= date.day) {\n        val -= date.day;\n        date.month--;\n        if (date.month === 0) {\n          date.year--;\n          date.month = getHebrewMonths(date.year);\n        }\n        date.day = getDaysInHebrewMonth(date.month, date.year);\n      } else {\n        date.day -= val;\n        val = 0;\n      }\n    }\n  }\n  return date;\n}\n\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n */\nexport function fromGregorian(gdate: Date): NgbDate {\n  const date = new Date(gdate);\n  const gYear = date.getFullYear(), gMonth = date.getMonth(), gDay = date.getDate();\n  let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n      Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n      Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gYear) ? -1 : -2) + gDay);\n  julianDay = Math.floor(julianDay + 0.5);\n  let daysSinceHebEpoch = julianDay - 347997;\n  let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n  let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n  let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n  let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  while (dayOfYear < 1) {\n    hYear--;\n    firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n  }\n  let hMonth = 1;\n  let hDay = dayOfYear;\n  while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n    hDay -= getDaysInHebrewMonth(hMonth, hYear);\n    hMonth++;\n  }\n  return new NgbDate(hYear, hMonth, hDay);\n}\n\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n */\nexport function toGregorian(hebrewDate: NgbDateStruct | NgbDate): Date {\n  const hYear = hebrewDate.year;\n  const hMonth = hebrewDate.month;\n  const hDay = hebrewDate.day;\n  let days = numberOfFirstDayInYear(hYear);\n  for (let i = 1; i < hMonth; i++) {\n    days += getDaysInHebrewMonth(i, hYear);\n  }\n  days += hDay;\n  let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n  let after = diffDays >= 0;\n  if (!after) {\n    diffDays = -diffDays;\n  }\n  let gYear = 1970;\n  let gMonth = 1;\n  let gDay = 1;\n  while (diffDays > 0) {\n    if (after) {\n      if (diffDays >= (isGregorianLeapYear(gYear) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear) ? 366 : 365;\n        gYear++;\n      } else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n        diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        gMonth++;\n      } else {\n        gDay += diffDays;\n        diffDays = 0;\n      }\n    } else {\n      if (diffDays >= (isGregorianLeapYear(gYear - 1) ? 366 : 365)) {\n        diffDays -= isGregorianLeapYear(gYear - 1) ? 366 : 365;\n        gYear--;\n      } else {\n        if (gMonth > 1) {\n          gMonth--;\n        } else {\n          gMonth = 12;\n          gYear--;\n        }\n        if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n          diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n        } else {\n          gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n          diffDays = 0;\n        }\n      }\n    }\n  }\n  return new Date(gYear, gMonth - 1, gDay);\n}\n\nexport function hebrewNumerals(numerals: number): string {\n  if (!numerals) {\n    return '';\n  }\n  const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n  const hArray10_19 = [\n    '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n    '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n  ];\n  const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n  const hArray100_900 = [\n    '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n    '\\u05ea\\u05ea\\u05e7'\n  ];\n  const hArray1000_9000 = [\n    '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n    '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n  ];\n  const geresh = '\\u05f3', gershaim = '\\u05f4';\n  let mem = 0;\n  let result = [];\n  let step = 0;\n  while (numerals > 0) {\n    let m = numerals % 10;\n    if (step === 0) {\n      mem = m;\n    } else if (step === 1) {\n      if (m !== 1) {\n        result.unshift(hArray20_90[m], hArray0_9[mem]);\n      } else {\n        result.unshift(hArray10_19[mem]);\n      }\n    } else if (step === 2) {\n      result.unshift(hArray100_900[m]);\n    } else {\n      if (m !== 5) {\n        result.unshift(hArray1000_9000[m], geresh, ' ');\n      }\n      break;\n    }\n    numerals = Math.floor(numerals / 10);\n    if (step === 0 && numerals === 0) {\n      result.unshift(hArray0_9[m]);\n    }\n    step++;\n  }\n  result = result.join('').split('');\n  if (result.length === 1) {\n    result.push(geresh);\n  } else if (result.length > 1) {\n    result.splice(result.length - 1, 0, gershaim);\n  }\n  return result.join('');\n}\n","import {NgbDate} from '../ngb-date';\nimport {fromJSDate, NgbCalendar, NgbPeriod, toJSDate} from '../ngb-calendar';\nimport {Injectable} from '@angular/core';\nimport {isNumber} from '../../util/util';\nimport {\n  fromGregorian,\n  getDayNumberInHebrewYear,\n  getDaysInHebrewMonth,\n  isHebrewLeapYear,\n  toGregorian,\n  setHebrewDay,\n  setHebrewMonth\n} from './hebrew';\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbCalendarHebrew extends NgbCalendar {\n  getDaysPerWeek() { return 7; }\n\n  getMonths(year?: number) {\n    if (year && isHebrewLeapYear(year)) {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n    } else {\n      return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    }\n  }\n\n  getWeeksPerMonth() { return 6; }\n\n  isValid(date: NgbDate): boolean {\n    let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n    b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n    b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n    return b && !isNaN(toGregorian(date).getTime());\n  }\n\n  getNext(date: NgbDate, period: NgbPeriod = 'd', number = 1) {\n    date = new NgbDate(date.year, date.month, date.day);\n\n    switch (period) {\n      case 'y':\n        date.year += number;\n        date.month = 1;\n        date.day = 1;\n        return date;\n      case 'm':\n        date = setHebrewMonth(date, number);\n        date.day = 1;\n        return date;\n      case 'd':\n        return setHebrewDay(date, number);\n      default:\n        return date;\n    }\n  }\n\n  getPrev(date: NgbDate, period: NgbPeriod = 'd', number = 1) { return this.getNext(date, period, -number); }\n\n  getWeekday(date: NgbDate) {\n    const day = toGregorian(date).getDay();\n    // in JS Date Sun=0, in ISO 8601 Sun=7\n    return day === 0 ? 7 : day;\n  }\n\n  getWeekNumber(week: readonly NgbDate[], firstDayOfWeek: number) {\n    const date = week[week.length - 1];\n    return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n  }\n\n  getToday(): NgbDate { return fromGregorian(new Date()); }\n\n  /**\n   * @since 3.4.0\n   */\n  toGregorian(date: NgbDate): NgbDate { return fromJSDate(toGregorian(date)); }\n\n  /**\n   * @since 3.4.0\n   */\n  fromGregorian(date: NgbDate): NgbDate { return fromGregorian(toJSDate(date)); }\n}\n","import {NgbDatepickerI18n} from '../datepicker-i18n';\nimport {NgbDateStruct} from '../../index';\nimport {hebrewNumerals, isHebrewLeapYear} from './hebrew';\nimport {Injectable} from '@angular/core';\n\n\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\nconst MONTHS_LEAP =\n    ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n\n/**\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n  getMonthShortName(month: number, year?: number): string { return this.getMonthFullName(month, year); }\n\n  getMonthFullName(month: number, year?: number): string {\n    return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n  }\n\n  getWeekdayShortName(weekday: number): string { return WEEKDAYS[weekday - 1]; }\n\n  getDayAriaLabel(date: NgbDateStruct): string {\n    return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n  }\n\n  getDayNumerals(date: NgbDateStruct): string { return hebrewNumerals(date.day); }\n\n  getWeekNumerals(weekNumber: number): string { return hebrewNumerals(weekNumber); }\n\n  getYearNumerals(year: number): string { return hebrewNumerals(year); }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateAdapter} from './ngb-date-adapter';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {isInteger} from '../../util/util';\n\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\n@Injectable()\nexport class NgbDateNativeAdapter extends NgbDateAdapter<Date> {\n  /**\n   * Converts a native `Date` to a `NgbDateStruct`.\n   */\n  fromModel(date: Date): NgbDateStruct {\n    return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n  }\n\n  /**\n   * Converts a `NgbDateStruct` to a native `Date`.\n   */\n  toModel(date: NgbDateStruct): Date {\n    return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n                                                                                          null;\n  }\n\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // avoid 30 -> 1930 conversion\n    jsDate.setFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NgbDateStruct} from '../ngb-date-struct';\nimport {NgbDateNativeAdapter} from './ngb-date-native-adapter';\n\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * @since 3.2.0\n */\n@Injectable()\nexport class NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n  protected _fromNativeDate(date: Date): NgbDateStruct {\n    return {year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate()};\n  }\n\n  protected _toNativeDate(date: NgbDateStruct): Date {\n    const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n    // avoid 30 -> 1930 conversion\n    jsDate.setUTCFullYear(date.year);\n    return jsDate;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDatepicker, NgbDatepickerContent} from './datepicker';\nimport {NgbDatepickerMonth} from './datepicker-month';\nimport {NgbDatepickerNavigation} from './datepicker-navigation';\nimport {NgbInputDatepicker} from './datepicker-input';\nimport {NgbDatepickerDayView} from './datepicker-day-view';\nimport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\n\nexport {NgbDatepicker, NgbDatepickerContent, NgbDatepickerNavigateEvent, NgbDatepickerState} from './datepicker';\nexport {NgbInputDatepicker} from './datepicker-input';\nexport {NgbCalendar, NgbPeriod, NgbCalendarGregorian} from './ngb-calendar';\nexport {NgbCalendarIslamicCivil} from './hijri/ngb-calendar-islamic-civil';\nexport {NgbCalendarIslamicUmalqura} from './hijri/ngb-calendar-islamic-umalqura';\nexport {NgbCalendarPersian} from './jalali/ngb-calendar-persian';\nexport {NgbCalendarHebrew} from './hebrew/ngb-calendar-hebrew';\nexport {NgbDatepickerI18nHebrew} from './hebrew/datepicker-i18n-hebrew';\nexport {NgbDatepickerMonth} from './datepicker-month';\nexport {NgbDatepickerDayView} from './datepicker-day-view';\nexport {NgbDatepickerNavigation} from './datepicker-navigation';\nexport {NgbDatepickerNavigationSelect} from './datepicker-navigation-select';\nexport {NgbDatepickerConfig} from './datepicker-config';\nexport {NgbInputDatepickerConfig} from './datepicker-input-config';\nexport {NgbDatepickerI18n} from './datepicker-i18n';\nexport {NgbDateStruct} from './ngb-date-struct';\nexport {NgbDate} from './ngb-date';\nexport {NgbDateAdapter} from './adapters/ngb-date-adapter';\nexport {NgbDateNativeAdapter} from './adapters/ngb-date-native-adapter';\nexport {NgbDateNativeUTCAdapter} from './adapters/ngb-date-native-utc-adapter';\nexport {NgbDateParserFormatter} from './ngb-date-parser-formatter';\nexport {NgbDatepickerKeyboardService} from './datepicker-keyboard-service';\n\n@NgModule({\n  declarations: [\n    NgbDatepicker, NgbDatepickerContent, NgbDatepickerMonth, NgbDatepickerNavigation, NgbDatepickerNavigationSelect,\n    NgbDatepickerDayView, NgbInputDatepicker\n  ],\n  exports: [NgbDatepicker, NgbDatepickerContent, NgbInputDatepicker, NgbDatepickerMonth],\n  imports: [CommonModule, FormsModule],\n  entryComponents: [NgbDatepicker]\n})\nexport class NgbDatepickerModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbDropdownConfig {\n  autoClose: boolean | 'outside' | 'inside' = true;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n  container: null | 'body';\n}\n","import {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, Subject, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {Placement, PlacementArray, positionElements} from '../util/positioning';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\n\nimport {NgbDropdownConfig} from './dropdown-config';\n\n@Directive({selector: '.navbar'})\nexport class NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({selector: '[ngbDropdownItem]', host: {'class': 'dropdown-item', '[class.disabled]': 'disabled'}})\nexport class NgbDropdownItem {\n  private _disabled = false;\n\n  @Input()\n  set disabled(value: boolean) {\n    this._disabled = <any>value === '' || value === true;  // accept an empty attribute as true\n  }\n\n  get disabled(): boolean { return this._disabled; }\n\n  constructor(public elementRef: ElementRef<HTMLElement>) {}\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[ngbDropdownMenu]',\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[class.show]': 'dropdown.isOpen()',\n    '[attr.x-placement]': 'placement',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)',\n    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n  }\n})\nexport class NgbDropdownMenu {\n  placement: Placement = 'bottom';\n  isOpen = false;\n\n  @ContentChildren(NgbDropdownItem) menuItems: QueryList<NgbDropdownItem>;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown) {}\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive({\n  selector: '[ngbDropdownAnchor]',\n  host: {'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()'}\n})\nexport class NgbDropdownAnchor {\n  anchorEl;\n\n  constructor(@Inject(forwardRef(() => NgbDropdown)) public dropdown, private _elementRef: ElementRef<HTMLElement>) {\n    this.anchorEl = _elementRef.nativeElement;\n  }\n\n  getNativeElement() { return this._elementRef.nativeElement; }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[ngbDropdownToggle]',\n  host: {\n    'class': 'dropdown-toggle',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'dropdown.isOpen()',\n    '(click)': 'dropdown.toggle()',\n    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n    '(keydown.End)': 'dropdown.onKeyDown($event)'\n  },\n  providers: [{provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle)}]\n})\nexport class NgbDropdownToggle extends NgbDropdownAnchor {\n  constructor(@Inject(forwardRef(() => NgbDropdown)) dropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: {'[class.show]': 'isOpen()'}})\nexport class NgbDropdown implements AfterContentInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _zoneSubscription: Subscription;\n  private _bodyContainer: HTMLElement;\n\n  @ContentChild(NgbDropdownMenu, {static: false}) private _menu: NgbDropdownMenu;\n  @ContentChild(NgbDropdownMenu, {read: ElementRef, static: false}) private _menuElement: ElementRef;\n  @ContentChild(NgbDropdownAnchor, {static: false}) private _anchor: NgbDropdownAnchor;\n\n  /**\n   * Indicates whether the dropdown should be closed when clicking one of dropdown items or pressing ESC.\n   *\n   * * `true` - the dropdown will close on both outside and inside (menu) clicks.\n   * * `false` - the dropdown can only be closed manually via `close()` or `toggle()` methods.\n   * * `\"inside\"` - the dropdown will close on inside menu clicks, but not outside clicks.\n   * * `\"outside\"` - the dropdown will close only on the outside clicks and not on menu clicks.\n   */\n  @Input() autoClose: boolean | 'outside' | 'inside';\n\n  /**\n   * Defines whether or not the dropdown menu is opened initially.\n   */\n  @Input('open') _open = false;\n\n  /**\n   * The preferred placement of the dropdown.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n  * A selector specifying the element the dropdown should be appended to.\n  * Currently only supports \"body\".\n  *\n  * @since 4.1.0\n  */\n  @Input() container: null | 'body';\n\n  /**\n   * Enable or disable the dynamic positioning. The default value is dynamic unless the dropdown is used\n   * inside a Bootstrap navbar. If you need custom placement for a dropdown in a navbar, set it to\n   * dynamic explicitly. See the [positioning of dropdown](#/positioning#dropdown)\n   * and the [navbar demo](/#/components/dropdown/examples#navbar) for more details.\n   *\n   * @since 4.2.0\n   */\n  @Input() display: 'dynamic' | 'static';\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      private _changeDetector: ChangeDetectorRef, config: NgbDropdownConfig, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2,\n      @Optional() ngbNavbar: NgbNavbar) {\n    this.placement = config.placement;\n    this.container = config.container;\n    this.autoClose = config.autoClose;\n\n    this.display = ngbNavbar ? 'static' : 'dynamic';\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n  }\n\n  ngAfterContentInit() {\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._applyPlacementClasses();\n      if (this._open) {\n        this._setCloseHandlers();\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.container && this._open) {\n      this._applyContainer(this.container);\n    }\n\n    if (changes.placement && !changes.placement.isFirstChange) {\n      this._applyPlacementClasses();\n    }\n  }\n\n  /**\n   * Checks if the dropdown menu is open.\n   */\n  isOpen(): boolean { return this._open; }\n\n  /**\n   * Opens the dropdown menu.\n   */\n  open(): void {\n    if (!this._open) {\n      this._open = true;\n      this._applyContainer(this.container);\n      this.openChange.emit(true);\n      this._setCloseHandlers();\n    }\n  }\n\n  private _setCloseHandlers() {\n    const anchor = this._anchor;\n    ngbAutoClose(\n        this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$,\n        this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [],\n        '.dropdown-item,.dropdown-divider');\n  }\n\n  /**\n   * Closes the dropdown menu.\n   */\n  close(): void {\n    if (this._open) {\n      this._open = false;\n      this._resetContainer();\n      this._closed$.next();\n      this.openChange.emit(false);\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the dropdown menu.\n   */\n  toggle(): void {\n    if (this.isOpen()) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  ngOnDestroy() {\n    this._resetContainer();\n\n    this._closed$.next();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    const key = event.which;\n    const itemElements = this._getMenuElements();\n\n    let position = -1;\n    let isEventFromItems = false;\n    let itemElement: HTMLElement = null;\n    const isEventFromToggle = this._isEventFromToggle(event);\n\n    if (!isEventFromToggle && itemElements.length) {\n      itemElements.forEach((item, index) => {\n        if (item.contains(event.target as HTMLElement)) {\n          isEventFromItems = true;\n          itemElement = item;\n        }\n        if (item === this._document.activeElement) {\n          position = index;\n        }\n      });\n    }\n\n    // closing on Enter / Space\n    if (key === Key.Space || key === Key.Enter) {\n      if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n        // Item is either a button or a link, so click will be triggered by the browser on Enter or Space.\n        // So we have to register a one-time click handler that will fire after any user defined click handlers\n        // to close the dropdown\n        fromEvent(itemElement, 'click').pipe(take(1)).subscribe(() => this.close());\n      }\n      return;\n    }\n\n    // opening / navigating\n    if (isEventFromToggle || isEventFromItems) {\n      this.open();\n\n      if (itemElements.length) {\n        switch (key) {\n          case Key.ArrowDown:\n            position = Math.min(position + 1, itemElements.length - 1);\n            break;\n          case Key.ArrowUp:\n            if (this._isDropup() && position === -1) {\n              position = itemElements.length - 1;\n              break;\n            }\n            position = Math.max(position - 1, 0);\n            break;\n          case Key.Home:\n            position = 0;\n            break;\n          case Key.End:\n            position = itemElements.length - 1;\n            break;\n        }\n        itemElements[position].focus();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private _isDropup(): boolean { return this._elementRef.nativeElement.classList.contains('dropup'); }\n\n  private _isEventFromToggle(event: KeyboardEvent) {\n    return this._anchor.getNativeElement().contains(event.target as HTMLElement);\n  }\n\n  private _getMenuElements(): HTMLElement[] {\n    const menu = this._menu;\n    if (menu == null) {\n      return [];\n    }\n    return menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n  }\n\n  private _positionMenu() {\n    const menu = this._menu;\n    if (this.isOpen() && menu) {\n      this._applyPlacementClasses(\n          this.display === 'dynamic' ?\n              positionElements(\n                  this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement,\n                  this.container === 'body') :\n              this._getFirstPlacement(this.placement));\n    }\n  }\n\n  private _getFirstPlacement(placement: PlacementArray): Placement {\n    return Array.isArray(placement) ? placement[0] : placement.split(' ')[0] as Placement;\n  }\n\n  private _resetContainer() {\n    const renderer = this._renderer;\n    const menuElement = this._menuElement;\n    if (menuElement) {\n      const dropdownElement = this._elementRef.nativeElement;\n      const dropdownMenuElement = menuElement.nativeElement;\n\n      renderer.appendChild(dropdownElement, dropdownMenuElement);\n      renderer.removeStyle(dropdownMenuElement, 'position');\n      renderer.removeStyle(dropdownMenuElement, 'transform');\n    }\n    if (this._bodyContainer) {\n      renderer.removeChild(this._document.body, this._bodyContainer);\n      this._bodyContainer = null;\n    }\n  }\n\n  private _applyContainer(container: null | 'body' = null) {\n    this._resetContainer();\n    if (container === 'body') {\n      const renderer = this._renderer;\n      const dropdownMenuElement = this._menuElement.nativeElement;\n      const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n\n      // Override some styles to have the positionning working\n      renderer.setStyle(bodyContainer, 'position', 'absolute');\n      renderer.setStyle(dropdownMenuElement, 'position', 'static');\n      renderer.setStyle(bodyContainer, 'z-index', '1050');\n\n      renderer.appendChild(bodyContainer, dropdownMenuElement);\n      renderer.appendChild(this._document.body, bodyContainer);\n    }\n  }\n\n  private _applyPlacementClasses(placement?: Placement) {\n    const menu = this._menu;\n    if (menu) {\n      if (!placement) {\n        placement = this._getFirstPlacement(this.placement);\n      }\n\n      const renderer = this._renderer;\n      const dropdownElement = this._elementRef.nativeElement;\n\n      // remove the current placement classes\n      renderer.removeClass(dropdownElement, 'dropup');\n      renderer.removeClass(dropdownElement, 'dropdown');\n      menu.placement = this.display === 'static' ? null : placement;\n\n      /*\n      * apply the new placement\n      * in case of top use up-arrow or down-arrow otherwise\n      */\n      const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n      renderer.addClass(dropdownElement, dropdownClass);\n\n      const bodyContainer = this._bodyContainer;\n      if (bodyContainer) {\n        renderer.removeClass(bodyContainer, 'dropup');\n        renderer.removeClass(bodyContainer, 'dropdown');\n        renderer.addClass(bodyContainer, dropdownClass);\n      }\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\n\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownToggle,\n  NgbDropdownMenu,\n  NgbDropdownItem,\n  NgbNavbar\n} from './dropdown';\nexport {NgbDropdownConfig} from './dropdown-config';\n\nconst NGB_DROPDOWN_DIRECTIVES =\n    [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\n\n@NgModule({declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES})\nexport class NgbDropdownModule {\n}\n","import {Injectable, Injector} from '@angular/core';\n\n/**\n * Options available when opening new modal windows with `NgbModal.open()` method.\n */\nexport interface NgbModalOptions {\n  /**\n   * `aria-labelledby` attribute value to set on the modal window.\n   *\n   * @since 2.2.0\n   */\n  ariaLabelledBy?: string;\n\n  /**\n   * If `true`, the backdrop element will be created for a given modal.\n   *\n   * Alternatively, specify `'static'` for a backdrop which doesn't close the modal on click.\n   *\n   * Default value is `true`.\n   */\n  backdrop?: boolean | 'static';\n\n  /**\n   * Callback right before the modal will be dismissed.\n   *\n   * If this function returns:\n   * * `false`\n   * * a promise resolved with `false`\n   * * a promise that is rejected\n   *\n   * then the modal won't be dismissed.\n   */\n  beforeDismiss?: () => boolean | Promise<boolean>;\n\n  /**\n   * If `true`, the modal will be centered vertically.\n   *\n   * Default value is `false`.\n   *\n   * @since 1.1.0\n   */\n  centered?: boolean;\n\n  /**\n   * A selector specifying the element all new modal windows should be appended to.\n   * Since v5.3.0 it is also possible to pass the reference to an `HTMLElement`.\n   *\n   * If not specified, will be `body`.\n   */\n  container?: string | HTMLElement;\n\n  /**\n   * The `Injector` to use for modal content.\n   */\n  injector?: Injector;\n\n  /**\n   * If `true`, the modal will be closed when `Escape` key is pressed\n   *\n   * Default value is `true`.\n   */\n  keyboard?: boolean;\n\n  /**\n   * Scrollable modal content (false by default).\n   *\n   * @since 5.0.0\n   */\n  scrollable?: boolean;\n\n  /**\n   * Size of a new modal window.\n   */\n  size?: 'sm' | 'lg' | 'xl' | string;\n\n  /**\n   * A custom class to append to the modal window.\n   */\n  windowClass?: string;\n\n  /**\n   * A custom class to append to the modal backdrop.\n   *\n   * @since 1.1.0\n   */\n  backdropClass?: string;\n}\n\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n*\n* @since 3.1.0\n*/\n@Injectable({providedIn: 'root'})\nexport class NgbModalConfig implements Required<NgbModalOptions> {\n  ariaLabelledBy: string;\n  backdrop: boolean | 'static' = true;\n  beforeDismiss: () => boolean | Promise<boolean>;\n  centered: boolean;\n  container: string;\n  injector: Injector;\n  keyboard = true;\n  scrollable: boolean;\n  size: 'sm' | 'lg' | 'xl' | string;\n  windowClass: string;\n  backdropClass: string;\n}\n","import {\n  Injector,\n  TemplateRef,\n  ViewRef,\n  ViewContainerRef,\n  Renderer2,\n  ComponentRef,\n  ComponentFactoryResolver,\n  ApplicationRef\n} from '@angular/core';\n\nexport class ContentRef {\n  constructor(public nodes: any[], public viewRef?: ViewRef, public componentRef?: ComponentRef<any>) {}\n}\n\nexport class PopupService<T> {\n  private _windowRef: ComponentRef<T>;\n  private _contentRef: ContentRef;\n\n  constructor(\n      private _type: any, private _injector: Injector, private _viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, private _componentFactoryResolver: ComponentFactoryResolver,\n      private _applicationRef: ApplicationRef) {}\n\n  open(content?: string | TemplateRef<any>, context?: any): ComponentRef<T> {\n    if (!this._windowRef) {\n      this._contentRef = this._getContentRef(content, context);\n      this._windowRef = this._viewContainerRef.createComponent(\n          this._componentFactoryResolver.resolveComponentFactory<T>(this._type), this._viewContainerRef.length,\n          this._injector, this._contentRef.nodes);\n    }\n\n    return this._windowRef;\n  }\n\n  close() {\n    if (this._windowRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n      this._windowRef = null;\n\n      if (this._contentRef.viewRef) {\n        this._applicationRef.detachView(this._contentRef.viewRef);\n        this._contentRef.viewRef.destroy();\n        this._contentRef = null;\n      }\n    }\n  }\n\n  private _getContentRef(content: string | TemplateRef<any>, context?: any): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      const viewRef = content.createEmbeddedView(context);\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    } else {\n      return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n  }\n}\n","import {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\nconst noop = () => {};\n\n\n\n/** Type for the callback used to revert the scrollbar compensation. */\nexport type CompensationReverter = () => void;\n\n\n\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollBar {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  /**\n   * To be called right before a potential vertical scrollbar would be removed:\n   *\n   * - if there was a scrollbar, adds some compensation padding to the body\n   * to keep the same layout as when the scrollbar is there\n   * - if there was none, there is nothing to do\n   *\n   * @return a callback used to revert the compensation (noop if there was none,\n   * otherwise a function removing the padding)\n   */\n  compensate(): CompensationReverter {\n    const width = this._getWidth();\n    return !this._isPresent(width) ? noop : this._adjustBody(width);\n  }\n\n  /**\n   * Adds a padding of the given width on the right of the body.\n   *\n   * @return a callback used to revert the padding to its previous value\n   */\n  private _adjustBody(scrollbarWidth: number): CompensationReverter {\n    const body = this._document.body;\n    const userSetPaddingStyle = body.style.paddingRight;\n    const actualPadding = parseFloat(window.getComputedStyle(body)['padding-right']);\n    body.style['padding-right'] = `${actualPadding + scrollbarWidth}px`;\n    return () => body.style['padding-right'] = userSetPaddingStyle;\n  }\n\n  /**\n   * Tells whether a scrollbar is currently present on the body.\n   *\n   * @return true if scrollbar is present, false otherwise\n   */\n  private _isPresent(scrollbarWidth: number): boolean {\n    const rect = this._document.body.getBoundingClientRect();\n    const bodyToViewportGap = window.innerWidth - (rect.left + rect.right);\n    const uncertainty = 0.1 * scrollbarWidth;\n    return bodyToViewportGap >= scrollbarWidth - uncertainty;\n  }\n\n  /**\n   * Calculates and returns the width of a scrollbar.\n   *\n   * @return the width of a scrollbar on this page\n   */\n  private _getWidth(): number {\n    const measurer = this._document.createElement('div');\n    measurer.className = 'modal-scrollbar-measure';\n\n    const body = this._document.body;\n    body.appendChild(measurer);\n    const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n    body.removeChild(measurer);\n\n    return width;\n  }\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'ngb-modal-backdrop',\n  encapsulation: ViewEncapsulation.None,\n  template: '',\n  host:\n      {'[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050'}\n})\nexport class NgbModalBackdrop {\n  @Input() backdropClass: string;\n}\n","import {ComponentRef} from '@angular/core';\n\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nimport {ContentRef} from '../util/popup';\n\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nexport class NgbActiveModal {\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {}\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {}\n}\n\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nexport class NgbModalRef {\n  private _resolve: (result?: any) => void;\n  private _reject: (reason?: any) => void;\n\n  /**\n   * The instance of a component used for the modal content.\n   *\n   * When a `TemplateRef` is used as the content or when the modal is closed, will return `undefined`.\n   */\n  get componentInstance(): any {\n    if (this._contentRef && this._contentRef.componentRef) {\n      return this._contentRef.componentRef.instance;\n    }\n  }\n\n  /**\n   * The promise that is resolved when the modal is closed and rejected when the modal is dismissed.\n   */\n  result: Promise<any>;\n\n  constructor(\n      private _windowCmptRef: ComponentRef<NgbModalWindow>, private _contentRef: ContentRef,\n      private _backdropCmptRef?: ComponentRef<NgbModalBackdrop>, private _beforeDismiss?: Function) {\n    _windowCmptRef.instance.dismissEvent.subscribe((reason: any) => { this.dismiss(reason); });\n\n    this.result = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    this.result.then(null, () => {});\n  }\n\n  /**\n   * Closes the modal with an optional `result` value.\n   *\n   * The `NgbMobalRef.result` promise will be resolved with the provided value.\n   */\n  close(result?: any): void {\n    if (this._windowCmptRef) {\n      this._resolve(result);\n      this._removeModalElements();\n    }\n  }\n\n  private _dismiss(reason?: any) {\n    this._reject(reason);\n    this._removeModalElements();\n  }\n\n  /**\n   * Dismisses the modal with an optional `reason` value.\n   *\n   * The `NgbModalRef.result` promise will be rejected with the provided value.\n   */\n  dismiss(reason?: any): void {\n    if (this._windowCmptRef) {\n      if (!this._beforeDismiss) {\n        this._dismiss(reason);\n      } else {\n        const dismiss = this._beforeDismiss();\n        if (dismiss && dismiss.then) {\n          dismiss.then(\n              result => {\n                if (result !== false) {\n                  this._dismiss(reason);\n                }\n              },\n              () => {});\n        } else if (dismiss !== false) {\n          this._dismiss(reason);\n        }\n      }\n    }\n  }\n\n  private _removeModalElements() {\n    const windowNativeEl = this._windowCmptRef.location.nativeElement;\n    windowNativeEl.parentNode.removeChild(windowNativeEl);\n    this._windowCmptRef.destroy();\n\n    if (this._backdropCmptRef) {\n      const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n      backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n      this._backdropCmptRef.destroy();\n    }\n\n    if (this._contentRef && this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n\n    this._windowCmptRef = null;\n    this._backdropCmptRef = null;\n    this._contentRef = null;\n  }\n}\n","export enum ModalDismissReasons {\n  BACKDROP_CLICK,\n  ESC\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, switchMap, take, takeUntil, tap} from 'rxjs/operators';\n\nimport {getFocusableBoundaryElements} from '../util/focus-trap';\nimport {Key} from '../util/key';\nimport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@Component({\n  selector: 'ngb-modal-window',\n  host: {\n    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n    'role': 'dialog',\n    'tabindex': '-1',\n    '[attr.aria-modal]': 'true',\n    '[attr.aria-labelledby]': 'ariaLabelledBy',\n  },\n  template: `\n    <div #dialog [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./modal.scss']\n})\nexport class NgbModalWindow implements OnInit,\n    AfterViewInit, OnDestroy {\n  private _closed$ = new Subject<void>();\n  private _elWithFocus: Element;  // element that is focused prior to modal opening\n\n  @ViewChild('dialog', {static: true}) private _dialogEl: ElementRef<HTMLElement>;\n\n  @Input() ariaLabelledBy: string;\n  @Input() backdrop: boolean | string = true;\n  @Input() centered: string;\n  @Input() keyboard = true;\n  @Input() scrollable: string;\n  @Input() size: string;\n  @Input() windowClass: string;\n\n  @Output('dismiss') dismissEvent = new EventEmitter();\n\n  constructor(\n      @Inject(DOCUMENT) private _document: any, private _elRef: ElementRef<HTMLElement>, private _zone: NgZone) {}\n\n  dismiss(reason): void { this.dismissEvent.emit(reason); }\n\n  ngOnInit() { this._elWithFocus = this._document.activeElement; }\n\n  ngAfterViewInit() {\n    const {nativeElement} = this._elRef;\n    this._zone.runOutsideAngular(() => {\n\n      fromEvent<KeyboardEvent>(nativeElement, 'keydown')\n          .pipe(\n              takeUntil(this._closed$),\n              // tslint:disable-next-line:deprecation\n              filter(e => e.which === Key.Escape && this.keyboard))\n          .subscribe(event => requestAnimationFrame(() => {\n                       if (!event.defaultPrevented) {\n                         this._zone.run(() => this.dismiss(ModalDismissReasons.ESC));\n                       }\n                     }));\n\n      // We're listening to 'mousedown' and 'mouseup' to prevent modal from closing when pressing the mouse\n      // inside the modal dialog and releasing it outside\n      let preventClose = false;\n      fromEvent<MouseEvent>(this._dialogEl.nativeElement, 'mousedown')\n          .pipe(\n              takeUntil(this._closed$), tap(() => preventClose = false),\n              switchMap(() => fromEvent<MouseEvent>(nativeElement, 'mouseup').pipe(takeUntil(this._closed$), take(1))),\n              filter(({target}) => nativeElement === target))\n          .subscribe(() => { preventClose = true; });\n\n      // We're listening to 'click' to dismiss modal on modal window click, except when:\n      // 1. clicking on modal dialog itself\n      // 2. closing was prevented by mousedown/up handlers\n      // 3. clicking on scrollbar when the viewport is too small and modal doesn't fit (click is not triggered at all)\n      fromEvent<MouseEvent>(nativeElement, 'click').pipe(takeUntil(this._closed$)).subscribe(({target}) => {\n        if (this.backdrop === true && nativeElement === target && !preventClose) {\n          this._zone.run(() => this.dismiss(ModalDismissReasons.BACKDROP_CLICK));\n        }\n        preventClose = false;\n      });\n    });\n\n    if (!nativeElement.contains(document.activeElement)) {\n      const autoFocusable = nativeElement.querySelector(`[ngbAutofocus]`) as HTMLElement;\n      const firstFocusable = getFocusableBoundaryElements(nativeElement)[0];\n\n      const elementToFocus = autoFocusable || firstFocusable || nativeElement;\n      elementToFocus.focus();\n    }\n  }\n\n  ngOnDestroy() {\n    const body = this._document.body;\n    const elWithFocus = this._elWithFocus;\n\n    let elementToFocus;\n    if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n      elementToFocus = elWithFocus;\n    } else {\n      elementToFocus = body;\n    }\n    this._zone.runOutsideAngular(() => {\n      setTimeout(() => elementToFocus.focus());\n      this._elWithFocus = null;\n    });\n\n    this._closed$.next();\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  NgZone,\n  RendererFactory2,\n  TemplateRef\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\nimport {ngbFocusTrap} from '../util/focus-trap';\nimport {ContentRef} from '../util/popup';\nimport {ScrollBar} from '../util/scrollbar';\nimport {isDefined, isString} from '../util/util';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalOptions} from './modal-config';\nimport {NgbActiveModal, NgbModalRef} from './modal-ref';\nimport {NgbModalWindow} from './modal-window';\n\n@Injectable({providedIn: 'root'})\nexport class NgbModalStack {\n  private _activeWindowCmptHasChanged = new Subject();\n  private _ariaHiddenValues: Map<Element, string> = new Map();\n  private _backdropAttributes = ['backdropClass'];\n  private _modalRefs: NgbModalRef[] = [];\n  private _windowAttributes =\n      ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n  private _windowCmpts: ComponentRef<NgbModalWindow>[] = [];\n\n  constructor(\n      private _applicationRef: ApplicationRef, private _injector: Injector, @Inject(DOCUMENT) private _document: any,\n      private _scrollBar: ScrollBar, private _rendererFactory: RendererFactory2, private _ngZone: NgZone) {\n    // Trap focus on active WindowCmpt\n    this._activeWindowCmptHasChanged.subscribe(() => {\n      if (this._windowCmpts.length) {\n        const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n        ngbFocusTrap(this._ngZone, activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n        this._revertAriaHidden();\n        this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n      }\n    });\n  }\n\n  open(moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, options): NgbModalRef {\n    const containerEl = options.container instanceof HTMLElement ? options.container : isDefined(options.container) ?\n                                                                   this._document.querySelector(options.container) :\n                                                                   this._document.body;\n    const renderer = this._rendererFactory.createRenderer(null, null);\n\n    const revertPaddingForScrollBar = this._scrollBar.compensate();\n    const removeBodyClass = () => {\n      if (!this._modalRefs.length) {\n        renderer.removeClass(this._document.body, 'modal-open');\n        this._revertAriaHidden();\n      }\n    };\n\n    if (!containerEl) {\n      throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n    }\n\n    const activeModal = new NgbActiveModal();\n    const contentRef =\n        this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n\n    let backdropCmptRef: ComponentRef<NgbModalBackdrop> =\n        options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n    let windowCmptRef: ComponentRef<NgbModalWindow> = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n    let ngbModalRef: NgbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n\n    this._registerModalRef(ngbModalRef);\n    this._registerWindowCmpt(windowCmptRef);\n    ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n    ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n    activeModal.close = (result: any) => { ngbModalRef.close(result); };\n    activeModal.dismiss = (reason: any) => { ngbModalRef.dismiss(reason); };\n\n    this._applyWindowOptions(windowCmptRef.instance, options);\n    if (this._modalRefs.length === 1) {\n      renderer.addClass(this._document.body, 'modal-open');\n    }\n\n    if (backdropCmptRef && backdropCmptRef.instance) {\n      this._applyBackdropOptions(backdropCmptRef.instance, options);\n    }\n    return ngbModalRef;\n  }\n\n  dismissAll(reason?: any) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n\n  hasOpenModals(): boolean { return this._modalRefs.length > 0; }\n\n  private _attachBackdrop(moduleCFR: ComponentFactoryResolver, containerEl: any): ComponentRef<NgbModalBackdrop> {\n    let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n    let backdropCmptRef = backdropFactory.create(this._injector);\n    this._applicationRef.attachView(backdropCmptRef.hostView);\n    containerEl.appendChild(backdropCmptRef.location.nativeElement);\n    return backdropCmptRef;\n  }\n\n  private _attachWindowComponent(moduleCFR: ComponentFactoryResolver, containerEl: any, contentRef: any):\n      ComponentRef<NgbModalWindow> {\n    let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n    let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n    this._applicationRef.attachView(windowCmptRef.hostView);\n    containerEl.appendChild(windowCmptRef.location.nativeElement);\n    return windowCmptRef;\n  }\n\n  private _applyWindowOptions(windowInstance: NgbModalWindow, options: Object): void {\n    this._windowAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        windowInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _applyBackdropOptions(backdropInstance: NgbModalBackdrop, options: Object): void {\n    this._backdropAttributes.forEach((optionName: string) => {\n      if (isDefined(options[optionName])) {\n        backdropInstance[optionName] = options[optionName];\n      }\n    });\n  }\n\n  private _getContentRef(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, activeModal: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    if (!content) {\n      return new ContentRef([]);\n    } else if (content instanceof TemplateRef) {\n      return this._createFromTemplateRef(content, activeModal);\n    } else if (isString(content)) {\n      return this._createFromString(content);\n    } else {\n      return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n    }\n  }\n\n  private _createFromTemplateRef(content: TemplateRef<any>, activeModal: NgbActiveModal): ContentRef {\n    const context = {\n      $implicit: activeModal,\n      close(result) { activeModal.close(result); },\n      dismiss(reason) { activeModal.dismiss(reason); }\n    };\n    const viewRef = content.createEmbeddedView(context);\n    this._applicationRef.attachView(viewRef);\n    return new ContentRef([viewRef.rootNodes], viewRef);\n  }\n\n  private _createFromString(content: string): ContentRef {\n    const component = this._document.createTextNode(`${content}`);\n    return new ContentRef([[component]]);\n  }\n\n  private _createFromComponent(\n      moduleCFR: ComponentFactoryResolver, contentInjector: Injector, content: any, context: NgbActiveModal,\n      options: NgbModalOptions): ContentRef {\n    const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n    const modalContentInjector =\n        Injector.create({providers: [{provide: NgbActiveModal, useValue: context}], parent: contentInjector});\n    const componentRef = contentCmptFactory.create(modalContentInjector);\n    const componentNativeEl = componentRef.location.nativeElement;\n    if (options.scrollable) {\n      (componentNativeEl as HTMLElement).classList.add('component-host-scrollable');\n    }\n    this._applicationRef.attachView(componentRef.hostView);\n    // FIXME: we should here get rid of the component nativeElement\n    // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n    return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n  }\n\n  private _setAriaHidden(element: Element) {\n    const parent = element.parentElement;\n    if (parent && element !== this._document.body) {\n      Array.from(parent.children).forEach(sibling => {\n        if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n          this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      });\n\n      this._setAriaHidden(parent);\n    }\n  }\n\n  private _revertAriaHidden() {\n    this._ariaHiddenValues.forEach((value, element) => {\n      if (value) {\n        element.setAttribute('aria-hidden', value);\n      } else {\n        element.removeAttribute('aria-hidden');\n      }\n    });\n    this._ariaHiddenValues.clear();\n  }\n\n  private _registerModalRef(ngbModalRef: NgbModalRef) {\n    const unregisterModalRef = () => {\n      const index = this._modalRefs.indexOf(ngbModalRef);\n      if (index > -1) {\n        this._modalRefs.splice(index, 1);\n      }\n    };\n    this._modalRefs.push(ngbModalRef);\n    ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n  }\n\n  private _registerWindowCmpt(ngbWindowCmpt: ComponentRef<NgbModalWindow>) {\n    this._windowCmpts.push(ngbWindowCmpt);\n    this._activeWindowCmptHasChanged.next();\n\n    ngbWindowCmpt.onDestroy(() => {\n      const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n      if (index > -1) {\n        this._windowCmpts.splice(index, 1);\n        this._activeWindowCmptHasChanged.next();\n      }\n    });\n  }\n}\n","import {Injectable, Injector, ComponentFactoryResolver} from '@angular/core';\n\nimport {NgbModalOptions, NgbModalConfig} from './modal-config';\nimport {NgbModalRef} from './modal-ref';\nimport {NgbModalStack} from './modal-stack';\n\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbModal {\n  constructor(\n      private _moduleCFR: ComponentFactoryResolver, private _injector: Injector, private _modalStack: NgbModalStack,\n      private _config: NgbModalConfig) {}\n\n  /**\n   * Opens a new modal window with the specified content and supplied options.\n   *\n   * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n   * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n   * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n   *\n   * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n   */\n  open(content: any, options: NgbModalOptions = {}): NgbModalRef {\n    const combinedOptions = Object.assign({}, this._config, options);\n    return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n  }\n\n  /**\n   * Dismisses all currently displayed modal windows with the supplied reason.\n   *\n   * @since 3.1.0\n   */\n  dismissAll(reason?: any) { this._modalStack.dismissAll(reason); }\n\n  /**\n   * Indicates if there are currently any open modal windows in the application.\n   *\n   * @since 3.3.0\n   */\n  hasOpenModals(): boolean { return this._modalStack.hasOpenModals(); }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbModal} from './modal';\nimport {NgbModalBackdrop} from './modal-backdrop';\nimport {NgbModalWindow} from './modal-window';\n\nexport {NgbModal} from './modal';\nexport {NgbModalConfig, NgbModalOptions} from './modal-config';\nexport {NgbModalRef, NgbActiveModal} from './modal-ref';\nexport {ModalDismissReasons} from './modal-dismiss-reasons';\n\n@NgModule({\n  declarations: [NgbModalBackdrop, NgbModalWindow],\n  entryComponents: [NgbModalBackdrop, NgbModalWindow],\n  providers: [NgbModal]\n})\nexport class NgbModalModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the navs used in the application.\n *\n * @since 5.2.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbNavConfig {\n  destroyOnHide = true;\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  roles: 'tablist' | false = 'tablist';\n}\n","import {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef\n} from '@angular/core';\nimport {isDefined} from '../util/util';\nimport {NgbNavConfig} from './nav-config';\n\nconst isValidNavId = (id: any) => isDefined(id) && id !== '';\n\nlet navCounter = 0;\n\n/**\n * Context passed to the nav content template.\n *\n * See [this demo](#/components/nav/examples#keep-content) as the example.\n *\n * @since 5.2.0\n */\nexport interface NgbNavContentContext {\n  /**\n   * If `true`, current nav content is visible and active\n   */\n  $implicit: boolean;\n}\n\n\n/**\n * This directive must be used to wrap content to be displayed in the nav.\n *\n * @since 5.2.0\n */\n@Directive({selector: 'ng-template[ngbNavContent]'})\nexport class NgbNavContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n\n/**\n * The directive used to group nav link and related nav content. As well as set nav identifier and some options.\n *\n * @since 5.2.0\n */\n@Directive({selector: '[ngbNavItem]', exportAs: 'ngbNavItem', host: {'[class.nav-item]': 'true'}})\nexport class NgbNavItem implements AfterContentChecked, OnInit {\n  private _nav: NgbNav;\n\n  /**\n   * If `true`, non-active current nav item content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * If `true`, the current nav item is disabled and can't be toggled by user.\n   *\n   * Nevertheless disabled nav can be selected programmatically via the `.select()` method and the `[activeId]` binding.\n   */\n  @Input() disabled = false;\n\n  /**\n   * The id used for the DOM elements.\n   * Must be unique inside the document in case you have multiple `ngbNav`s on the page.\n   *\n   * Autogenerated as `ngb-nav-XXX` if not provided.\n   */\n  @Input() domId: string;\n\n  /**\n   * The id used as a model for active nav.\n   * It can be anything, but must be unique inside one `ngbNav`.\n   *\n   * The only limitation is that it is not possible to have the `''` (empty string) as id,\n   * because ` ngbNavItem `, `ngbNavItem=''` and `[ngbNavItem]=\"''\"` are indistinguishable\n   */\n  @Input('ngbNavItem') _id: any;\n\n  contentTpl: NgbNavContent | null;\n\n  @ContentChildren(NgbNavContent, {descendants: false}) contentTpls: QueryList<NgbNavContent>;\n\n  constructor(@Inject(forwardRef(() => NgbNav)) nav, public elementRef: ElementRef<any>) {\n    // TODO: cf https://github.com/angular/angular/issues/30106\n    this._nav = nav;\n  }\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.contentTpl = this.contentTpls.first;\n  }\n\n  ngOnInit() {\n    if (!isDefined(this.domId)) {\n      this.domId = `ngb-nav-${navCounter++}`;\n    }\n  }\n\n  get active() { return this._nav.activeId === this.id; }\n\n  get id() { return isValidNavId(this._id) ? this._id : this.domId; }\n\n  get panelDomId() { return `${this.domId}-panel`; }\n\n  isPanelInDom() {\n    return (isDefined(this.destroyOnHide) ? !this.destroyOnHide : !this._nav.destroyOnHide) || this.active;\n  }\n}\n\n\n/**\n * A nav directive that helps with implementing tabbed navigation components.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: '[ngbNav]',\n  exportAs: 'ngbNav',\n  host: {\n    '[class.nav]': 'true',\n    '[class.flex-column]': `orientation === 'vertical'`,\n    '[attr.aria-orientation]': `orientation === 'vertical' && roles === 'tablist' ? 'vertical' : undefined`,\n    '[attr.role]': `role ? role : roles ? 'tablist' : undefined`,\n  }\n})\nexport class NgbNav implements AfterContentInit {\n  /**\n   * The id of the nav that should be active\n   *\n   * You could also use the `.select()` method and the `(navChange)` event\n   */\n  @Input() activeId: any;\n\n  /**\n   * The event emitted after the active nav changes\n   * The payload of the event is the newly active nav id\n   *\n   * If you want to prevent nav change, you should use `(navChange)` event\n   */\n  @Output() activeIdChange = new EventEmitter<any>();\n\n  /**\n   * If `true`, non-active nav content will be removed from DOM\n   * Otherwise it will just be hidden\n   */\n  @Input() destroyOnHide;\n\n  /**\n   * The orientation of navs.\n   *\n   * Using `vertical` will also add the `aria-orientation` attribute\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Role attribute generating strategy:\n   * - `false` - no role attributes will be generated\n   * - `'tablist'` - 'tablist', 'tab' and 'tabpanel' will be generated (default)\n   */\n  @Input() roles: 'tablist' | false;\n\n  @ContentChildren(NgbNavItem) items: QueryList<NgbNavItem>;\n\n  constructor(@Attribute('role') public role: string, config: NgbNavConfig, private _cd: ChangeDetectorRef) {\n    this.destroyOnHide = config.destroyOnHide;\n    this.orientation = config.orientation;\n    this.roles = config.roles;\n  }\n\n  /**\n   * The nav change event emitted right before the nav change happens on user click.\n   *\n   * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n   *\n   * See [`NgbNavChangeEvent`](#/components/nav/api#NgbNavChangeEvent) for payload details.\n   */\n  @Output() navChange = new EventEmitter<NgbNavChangeEvent>();\n\n  click(item: NgbNavItem) {\n    if (!item.disabled) {\n      this._updateActiveId(item.id);\n    }\n  }\n\n  /**\n   * Selects the nav with the given id and shows its associated pane.\n   * Any other nav that was previously selected becomes unselected and its associated pane is hidden.\n   */\n  select(id: any) { this._updateActiveId(id, false); }\n\n  ngAfterContentInit() {\n    if (!isDefined(this.activeId)) {\n      const nextId = this.items.first ? this.items.first.id : null;\n      if (isValidNavId(nextId)) {\n        this._updateActiveId(nextId, false);\n        this._cd.detectChanges();\n      }\n    }\n  }\n\n  private _updateActiveId(nextId: any, emitNavChange = true) {\n    if (this.activeId !== nextId) {\n      let defaultPrevented = false;\n\n      if (emitNavChange) {\n        this.navChange.emit({activeId: this.activeId, nextId, preventDefault: () => { defaultPrevented = true; }});\n      }\n\n      if (!defaultPrevented) {\n        this.activeId = nextId;\n        this.activeIdChange.emit(nextId);\n      }\n    }\n  }\n}\n\n\n/**\n * A directive to put on the nav link.\n *\n * @since 5.2.0\n */\n@Directive({\n  selector: 'a[ngbNavLink]',\n  host: {\n    '[id]': 'navItem.domId',\n    '[class.nav-link]': 'true',\n    '[class.nav-item]': 'hasNavItemClass()',\n    '[attr.role]': `role ? role : nav.roles ? 'tab' : undefined`,\n    'href': '',\n    '[class.active]': 'navItem.active',\n    '[class.disabled]': 'navItem.disabled',\n    '[attr.tabindex]': 'navItem.disabled ? -1 : undefined',\n    '[attr.aria-controls]': 'navItem.isPanelInDom() ? navItem.panelDomId : null',\n    '[attr.aria-selected]': 'navItem.active',\n    '[attr.aria-disabled]': 'navItem.disabled',\n    '(click)': 'nav.click(navItem); $event.preventDefault()'\n  }\n})\nexport class NgbNavLink {\n  constructor(@Attribute('role') public role: string, public navItem: NgbNavItem, public nav: NgbNav) {}\n\n  hasNavItemClass() {\n    // with alternative markup we have to add `.nav-item` class, because `ngbNavItem` is on the ng-container\n    return this.navItem.elementRef.nativeElement.nodeType === Node.COMMENT_NODE;\n  }\n}\n\n\n/**\n * The payload of the change event emitted right before the nav change happens on user click.\n *\n * This event won't be emitted if nav is changed programmatically via `[activeId]` or `.select()`.\n *\n * @since 5.2.0\n */\nexport interface NgbNavChangeEvent {\n  /**\n   * Id of the currently active nav.\n   */\n  activeId: any;\n\n  /**\n   * Id of the newly selected nav.\n   */\n  nextId: any;\n\n  /**\n   * Function that will prevent nav change if called.\n   */\n  preventDefault: () => void;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {NgbNav} from './nav';\n\n/**\n * The outlet where currently active nav content will be displayed.\n *\n * @since 5.2.0\n */\n@Component({\n  selector: '[ngbNavOutlet]',\n  host: {'[class.tab-content]': 'true'},\n  encapsulation: ViewEncapsulation.None,\n  template: `\n      <ng-template ngFor let-item [ngForOf]=\"nav.items\">\n          <div class=\"tab-pane\"\n               *ngIf=\"item.isPanelInDom()\"\n               [id]=\"item.panelDomId\"\n               [class.active]=\"item.active\"\n               [attr.role]=\"paneRole ? paneRole : nav.roles ? 'tabpanel' : undefined\"\n               [attr.aria-labelledby]=\"item.domId\">\n              <ng-template [ngTemplateOutlet]=\"item.contentTpl?.templateRef\"\n                           [ngTemplateOutletContext]=\"{$implicit: item.active}\"></ng-template>\n          </div>\n      </ng-template>\n  `\n})\nexport class NgbNavOutlet {\n  /**\n   * A role to set on the nav pane\n   */\n  @Input() paneRole;\n\n  /**\n   * Reference to the `NgbNav`\n   */\n  @Input('ngbNavOutlet') nav: NgbNav;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbNav, NgbNavContent, NgbNavItem, NgbNavLink} from './nav';\nimport {NgbNavOutlet} from './nav-outlet';\n\nexport {NgbNav, NgbNavContent, NgbNavContentContext, NgbNavItem, NgbNavLink, NgbNavChangeEvent} from './nav';\nexport {NgbNavOutlet} from './nav-outlet';\nexport {NgbNavConfig} from './nav-config';\n\nconst NGB_NAV_DIRECTIVES = [NgbNavContent, NgbNav, NgbNavItem, NgbNavLink, NgbNavOutlet];\n\n@NgModule({declarations: NGB_NAV_DIRECTIVES, exports: NGB_NAV_DIRECTIVES, imports: [CommonModule]})\nexport class NgbNavModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPaginationConfig {\n  disabled = false;\n  boundaryLinks = false;\n  directionLinks = true;\n  ellipses = true;\n  maxSize = 0;\n  pageSize = 10;\n  rotate = false;\n  size: 'sm' | 'lg';\n}\n","import {\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbPaginationConfig} from './pagination-config';\n\n/**\n * A context for the\n * * `NgbPaginationFirst`\n * * `NgbPaginationPrevious`\n * * `NgbPaginationNext`\n * * `NgbPaginationLast`\n * * `NgbPaginationEllipsis`\n *\n * link templates in case you want to override one.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationLinkContext {\n  /**\n   * The currently selected page number\n   */\n  currentPage: number;\n\n  /**\n   * If `true`, the current link is disabled\n   */\n  disabled: boolean;\n}\n\n/**\n * A context for the `NgbPaginationNumber` link template in case you want to override one.\n *\n * Extends `NgbPaginationLinkContext`.\n *\n * @since 4.1.0\n */\nexport interface NgbPaginationNumberContext extends NgbPaginationLinkContext {\n  /**\n   * The page number, displayed by the current page link.\n   */\n  $implicit: number;\n}\n\n/**\n * A directive to match the 'ellipsis' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationEllipsis]'})\nexport class NgbPaginationEllipsis {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'first' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationFirst]'})\nexport class NgbPaginationFirst {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'last' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationLast]'})\nexport class NgbPaginationLast {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the 'next' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNext]'})\nexport class NgbPaginationNext {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A directive to match the page 'number' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationNumber]'})\nexport class NgbPaginationNumber {\n  constructor(public templateRef: TemplateRef<NgbPaginationNumberContext>) {}\n}\n\n/**\n * A directive to match the 'previous' link template\n *\n * @since 4.1.0\n */\n@Directive({selector: 'ng-template[ngbPaginationPrevious]'})\nexport class NgbPaginationPrevious {\n  constructor(public templateRef: TemplateRef<NgbPaginationLinkContext>) {}\n}\n\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\n@Component({\n  selector: 'ngb-pagination',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'role': 'navigation'},\n  template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"previousDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"previousDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\" [attr.aria-current]=\"(pageNumber === page ? 'page' : null)\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\" tabindex=\"-1\" aria-disabled=\"true\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\"\n          [attr.tabindex]=\"disabled ? '-1' : null\" [attr.aria-disabled]=\"disabled ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"nextDisabled() ? '-1' : null\"\n          [attr.aria-disabled]=\"nextDisabled() ? 'true' : null\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n})\nexport class NgbPagination implements OnChanges {\n  pageCount = 0;\n  pages: number[] = [];\n\n  @ContentChild(NgbPaginationEllipsis, {static: false}) tplEllipsis: NgbPaginationEllipsis;\n  @ContentChild(NgbPaginationFirst, {static: false}) tplFirst: NgbPaginationFirst;\n  @ContentChild(NgbPaginationLast, {static: false}) tplLast: NgbPaginationLast;\n  @ContentChild(NgbPaginationNext, {static: false}) tplNext: NgbPaginationNext;\n  @ContentChild(NgbPaginationNumber, {static: false}) tplNumber: NgbPaginationNumber;\n  @ContentChild(NgbPaginationPrevious, {static: false}) tplPrevious: NgbPaginationPrevious;\n\n  /**\n   * If `true`, pagination links will be disabled.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * If `true`, the \"First\" and \"Last\" page links are shown.\n   */\n  @Input() boundaryLinks: boolean;\n\n  /**\n   * If `true`, the \"Next\" and \"Previous\" page links are shown.\n   */\n  @Input() directionLinks: boolean;\n\n  /**\n   * If `true`, the ellipsis symbols and first/last page numbers will be shown when `maxSize` > number of pages.\n   */\n  @Input() ellipses: boolean;\n\n  /**\n   * Whether to rotate pages when `maxSize` > number of pages.\n   *\n   * The current page always stays in the middle if `true`.\n   */\n  @Input() rotate: boolean;\n\n  /**\n   *  The number of items in your paginated collection.\n   *\n   *  Note, that this is not the number of pages. Page numbers are calculated dynamically based on\n   *  `collectionSize` and `pageSize`. Ex. if you have 100 items in your collection and displaying 20 items per page,\n   *  you'll end up with 5 pages.\n   */\n  @Input() collectionSize: number;\n\n  /**\n   *  The maximum number of pages to display.\n   */\n  @Input() maxSize: number;\n\n  /**\n   *  The current page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Input() page = 1;\n\n  /**\n   *  The number of items per page.\n   */\n  @Input() pageSize: number;\n\n  /**\n   *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n   *\n   *  Event payload is the number of the newly selected page.\n   *\n   *  Page numbers start with `1`.\n   */\n  @Output() pageChange = new EventEmitter<number>(true);\n\n  /**\n   * The pagination display size.\n   *\n   * Bootstrap currently supports small and large sizes.\n   */\n  @Input() size: 'sm' | 'lg';\n\n  constructor(config: NgbPaginationConfig) {\n    this.disabled = config.disabled;\n    this.boundaryLinks = config.boundaryLinks;\n    this.directionLinks = config.directionLinks;\n    this.ellipses = config.ellipses;\n    this.maxSize = config.maxSize;\n    this.pageSize = config.pageSize;\n    this.rotate = config.rotate;\n    this.size = config.size;\n  }\n\n  hasPrevious(): boolean { return this.page > 1; }\n\n  hasNext(): boolean { return this.page < this.pageCount; }\n\n  nextDisabled(): boolean { return !this.hasNext() || this.disabled; }\n\n  previousDisabled(): boolean { return !this.hasPrevious() || this.disabled; }\n\n  selectPage(pageNumber: number): void { this._updatePages(pageNumber); }\n\n  ngOnChanges(changes: SimpleChanges): void { this._updatePages(this.page); }\n\n  isEllipsis(pageNumber): boolean { return pageNumber === -1; }\n\n  /**\n   * Appends ellipses and first/last page number to the displayed pages\n   */\n  private _applyEllipses(start: number, end: number) {\n    if (this.ellipses) {\n      if (start > 0) {\n        // The first page will always be included. If the displayed range\n        // starts after the third page, then add ellipsis. But if the range\n        // starts on the third page, then add the second page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (start > 2) {\n          this.pages.unshift(-1);\n        } else if (start === 2) {\n          this.pages.unshift(2);\n        }\n        this.pages.unshift(1);\n      }\n      if (end < this.pageCount) {\n        // The last page will always be included. If the displayed range\n        // ends before the third-last page, then add ellipsis. But if the range\n        // ends on third-last page, then add the second-last page instead of\n        // an ellipsis, because the ellipsis would only hide a single page.\n        if (end < (this.pageCount - 2)) {\n          this.pages.push(-1);\n        } else if (end === (this.pageCount - 2)) {\n          this.pages.push(this.pageCount - 1);\n        }\n        this.pages.push(this.pageCount);\n      }\n    }\n  }\n\n  /**\n   * Rotates page numbers based on maxSize items visible.\n   * Currently selected page stays in the middle:\n   *\n   * Ex. for selected page = 6:\n   * [5,*6*,7] for maxSize = 3\n   * [4,5,*6*,7] for maxSize = 4\n   */\n  private _applyRotation(): [number, number] {\n    let start = 0;\n    let end = this.pageCount;\n    let leftOffset = Math.floor(this.maxSize / 2);\n    let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n    if (this.page <= leftOffset) {\n      // very beginning, no rotation -> [0..maxSize]\n      end = this.maxSize;\n    } else if (this.pageCount - this.page < leftOffset) {\n      // very end, no rotation -> [len-maxSize..len]\n      start = this.pageCount - this.maxSize;\n    } else {\n      // rotate\n      start = this.page - leftOffset - 1;\n      end = this.page + rightOffset;\n    }\n\n    return [start, end];\n  }\n\n  /**\n   * Paginates page numbers based on maxSize items per page.\n   */\n  private _applyPagination(): [number, number] {\n    let page = Math.ceil(this.page / this.maxSize) - 1;\n    let start = page * this.maxSize;\n    let end = start + this.maxSize;\n\n    return [start, end];\n  }\n\n  private _setPageInRange(newPageNo) {\n    const prevPageNo = this.page;\n    this.page = getValueInRange(newPageNo, this.pageCount, 1);\n\n    if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  private _updatePages(newPage: number) {\n    this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n\n    if (!isNumber(this.pageCount)) {\n      this.pageCount = 0;\n    }\n\n    // fill-in model needed to render pages\n    this.pages.length = 0;\n    for (let i = 1; i <= this.pageCount; i++) {\n      this.pages.push(i);\n    }\n\n    // set page within 1..max range\n    this._setPageInRange(newPage);\n\n    // apply maxSize if necessary\n    if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n      let start = 0;\n      let end = this.pageCount;\n\n      // either paginating or rotating page numbers\n      if (this.rotate) {\n        [start, end] = this._applyRotation();\n      } else {\n        [start, end] = this._applyPagination();\n      }\n\n      this.pages = this.pages.slice(start, end);\n\n      // adding ellipses\n      this._applyEllipses(start, end);\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\n\nexport {\n  NgbPagination,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination';\nexport {NgbPaginationConfig} from './pagination-config';\n\nconst DIRECTIVES = [\n  NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n  NgbPaginationPrevious\n];\n\n@NgModule({declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule]})\nexport class NgbPaginationModule {\n}\n","import {Observable, merge} from 'rxjs';\nimport {share, filter, delay, map} from 'rxjs/operators';\n\nexport class Trigger {\n  constructor(public open: string, public close?: string) {\n    if (!close) {\n      this.close = open;\n    }\n  }\n\n  isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n\nconst DEFAULT_ALIASES = {\n  'hover': ['mouseenter', 'mouseleave'],\n  'focus': ['focusin', 'focusout'],\n};\n\nexport function parseTriggers(triggers: string, aliases = DEFAULT_ALIASES): Trigger[] {\n  const trimmedTriggers = (triggers || '').trim();\n\n  if (trimmedTriggers.length === 0) {\n    return [];\n  }\n\n  const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n    let alias = aliases[triggerPair[0]] || triggerPair;\n    return new Trigger(alias[0], alias[1]);\n  });\n\n  const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n\n  if (manualTriggers.length > 1) {\n    throw 'Triggers parse error: only one manual trigger is allowed';\n  }\n\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n  }\n\n  return parsedTriggers;\n}\n\nexport function observeTriggers(renderer: any, nativeElement: any, triggers: Trigger[], isOpenedFn: () => boolean) {\n  return new Observable<boolean>(subscriber => {\n    const listeners = [];\n    const openFn = () => subscriber.next(true);\n    const closeFn = () => subscriber.next(false);\n    const toggleFn = () => subscriber.next(!isOpenedFn());\n\n    triggers.forEach((trigger: Trigger) => {\n      if (trigger.open === trigger.close) {\n        listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n      } else {\n        listeners.push(\n            renderer.listen(nativeElement, trigger.open, openFn),\n            renderer.listen(nativeElement, trigger.close, closeFn));\n      }\n    });\n\n    return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n  });\n}\n\nconst delayOrNoop = <T>(time: number) => time > 0 ? delay<T>(time) : (a: Observable<T>) => a;\n\nexport function triggerDelay(openDelay: number, closeDelay: number, isOpenedFn: () => boolean) {\n  return (input$: Observable<boolean>) => {\n    let pending = null;\n    const filteredInput$ = input$.pipe(\n        map(open => ({open})), filter(event => {\n          const currentlyOpen = isOpenedFn();\n          if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n            pending = event;\n            return true;\n          }\n          if (pending && pending.open !== event.open) {\n            pending = null;\n          }\n          return false;\n        }),\n        share());\n    const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n    const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n    return merge(delayedOpen$, delayedClose$)\n        .pipe(\n            filter(event => {\n              if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n              }\n              return false;\n            }),\n            map(event => event.open));\n  };\n}\n\nexport function listenToTriggers(\n    renderer: any, nativeElement: any, triggers: string, isOpenedFn: () => boolean, openFn, closeFn, openDelay = 0,\n    closeDelay = 0) {\n  const parsedTriggers = parseTriggers(triggers);\n\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n    return () => {};\n  }\n\n  const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n                           .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n                           .subscribe(open => (open ? openFn() : closeFn()));\n\n  return () => subscription.unsubscribe();\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbPopoverConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'click';\n  container: string;\n  disablePopover = false;\n  popoverClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbPopoverConfig} from './popover-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-popover-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n  styleUrls: ['./popover.scss']\n})\nexport class NgbPopoverWindow {\n  @Input() title: undefined | string | TemplateRef<any>;\n  @Input() id: string;\n  @Input() popoverClass: string;\n  @Input() context: any;\n\n  isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\n\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[ngbPopover]', exportAs: 'ngbPopover'})\nexport class NgbPopover implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the popover should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() ngbPopover: string | TemplateRef<any>;\n\n  /**\n   * The title of the popover.\n   *\n   * If the title and the content are empty, the popover won't open.\n   */\n  @Input() popoverTitle: string | TemplateRef<any>;\n\n  /**\n   * The preferred placement of the popover.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/popover/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the popover should be appended to.\n   *\n   * Currently only supports `body`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, popover is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disablePopover: boolean;\n\n  /**\n   * An optional class applied to the popover window element.\n   *\n   * @since 2.2.0\n   */\n  @Input() popoverClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the popover is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter<void>();\n\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter<void>();\n\n  private _ngbPopoverWindowId = `ngb-popover-${nextId++}`;\n  private _popupService: PopupService<NgbPopoverWindow>;\n  private _windowRef: ComponentRef<NgbPopoverWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n  private _isDisabled(): boolean {\n    if (this.disablePopover) {\n      return true;\n    }\n    if (!this.ngbPopover && !this.popoverTitle) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbPopoverConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disablePopover = config.disablePopover;\n    this.popoverClass = config.popoverClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbPopoverWindow>(\n        NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-popover');\n      }\n    });\n  }\n\n  /**\n   * Opens the popover.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the popover template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && !this._isDisabled()) {\n      this._windowRef = this._popupService.open(this.ngbPopover, context);\n      this._windowRef.instance.title = this.popoverTitle;\n      this._windowRef.instance.context = context;\n      this._windowRef.instance.popoverClass = this.popoverClass;\n      this._windowRef.instance.id = this._ngbPopoverWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening popover from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because popover won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the popover from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  close(): void {\n    if (this._windowRef) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the popover.\n   *\n   * This is considered to be a \"manual\" triggering of the popover.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({ngbPopover, popoverTitle, disablePopover, popoverClass}: SimpleChanges) {\n    if (popoverClass && this.isOpen()) {\n      this._windowRef.instance.popoverClass = popoverClass.currentValue;\n    }\n    // close popover if title and content become empty, or disablePopover set to true\n    if ((ngbPopover || popoverTitle || disablePopover) && this._isDisabled()) {\n      this.close();\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbPopover, NgbPopoverWindow} from './popover';\nimport {CommonModule} from '@angular/common';\n\nexport {NgbPopover} from './popover';\nexport {NgbPopoverConfig} from './popover-config';\nexport {Placement} from '../util/positioning';\n\n@NgModule({\n  declarations: [NgbPopover, NgbPopoverWindow],\n  exports: [NgbPopover],\n  imports: [CommonModule],\n  entryComponents: [NgbPopoverWindow]\n})\nexport class NgbPopoverModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbProgressbarConfig {\n  max = 100;\n  animated = false;\n  striped = false;\n  textType: string;\n  type: string;\n  showValue = false;\n  height: string;\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {getValueInRange, isNumber} from '../util/util';\nimport {NgbProgressbarConfig} from './progressbar-config';\n\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\n@Component({\n  selector: 'ngb-progressbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{textType ? ' text-' + textType : ''}}\n      {{animated ? ' progress-bar-animated' : ''}}{{striped ? ' progress-bar-striped' : ''}}\"\n      role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n      [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n})\nexport class NgbProgressbar {\n  private _max: number;\n\n  /**\n   * The maximal value to be displayed in the progress bar.\n   *\n   * Should be a positive number. Will default to 100 otherwise.\n   */\n  @Input()\n  set max(max: number) {\n    this._max = !isNumber(max) || max <= 0 ? 100 : max;\n  }\n\n  get max(): number { return this._max; }\n\n  /**\n   * If `true`, the stripes on the progress bar are animated.\n   *\n   * Takes effect only for browsers supporting CSS3 animations, and if `striped` is `true`.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * If `true`, the progress bars will be displayed as striped.\n   */\n  @Input() striped: boolean;\n\n  /**\n   * If `true`, the current percentage will be shown in the `xx%` format.\n   */\n  @Input() showValue: boolean;\n\n  /**\n   * Optional text variant type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   *\n   * @since 5.2.0\n   */\n  @Input() textType: string;\n\n  /**\n   * The type of the progress bar.\n   *\n   * Supports types based on Bootstrap background color variants, like:\n   *  `\"success\"`, `\"info\"`, `\"warning\"`, `\"danger\"`, `\"primary\"`, `\"secondary\"`, `\"dark\"` and so on.\n   */\n  @Input() type: string;\n\n  /**\n   * The current value for the progress bar.\n   *\n   * Should be in the `[0, max]` range.\n   */\n  @Input() value = 0;\n\n  /**\n   * The height of the progress bar.\n   *\n   * Accepts any valid CSS height values, ex. `\"2rem\"`\n   */\n  @Input() height: string;\n\n  constructor(config: NgbProgressbarConfig) {\n    this.max = config.max;\n    this.animated = config.animated;\n    this.striped = config.striped;\n    this.textType = config.textType;\n    this.type = config.type;\n    this.showValue = config.showValue;\n    this.height = config.height;\n  }\n\n  getValue() { return getValueInRange(this.value, this.max); }\n\n  getPercentValue() { return 100 * this.getValue() / this.max; }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbProgressbar} from './progressbar';\n\nexport {NgbProgressbar} from './progressbar';\nexport {NgbProgressbarConfig} from './progressbar-config';\n\n@NgModule({declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule]})\nexport class NgbProgressbarModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbRatingConfig {\n  max = 10;\n  readonly = false;\n  resettable = false;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbRatingConfig} from './rating-config';\nimport {getValueInRange} from '../util/util';\nimport {Key} from '../util/key';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * The context for the custom star display template defined in the `starTemplate`.\n */\nexport interface StarTemplateContext {\n  /**\n   * The star fill percentage, an integer in the `[0, 100]` range.\n   */\n  fill: number;\n\n  /**\n   * Index of the star, starts with `0`.\n   */\n  index: number;\n}\n\nconst NGB_RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbRating),\n  multi: true\n};\n\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\n@Component({\n  selector: 'ngb-rating',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'd-inline-flex',\n    '[tabindex]': 'disabled ? -1 : 0',\n    'role': 'slider',\n    'aria-valuemin': '0',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuenow]': 'nextRate',\n    '[attr.aria-valuetext]': 'ariaValueText()',\n    '[attr.aria-disabled]': 'readonly ? true : null',\n    '(blur)': 'handleBlur()',\n    '(keydown)': 'handleKeyDown($event)',\n    '(mouseleave)': 'reset()'\n  },\n  template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n  providers: [NGB_RATING_VALUE_ACCESSOR]\n})\nexport class NgbRating implements ControlValueAccessor,\n    OnInit, OnChanges {\n  contexts: StarTemplateContext[] = [];\n  disabled = false;\n  nextRate: number;\n\n\n  /**\n   * The maximal rating that can be given.\n   */\n  @Input() max: number;\n\n  /**\n   * The current rating. Could be a decimal value like `3.75`.\n   */\n  @Input() rate: number;\n\n  /**\n   * If `true`, the rating can't be changed.\n   */\n  @Input() readonly: boolean;\n\n  /**\n   * If `true`, the rating can be reset to `0` by mouse clicking currently set rating.\n   */\n  @Input() resettable: boolean;\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<ngb-rating>` element\n   */\n  @Input() starTemplate: TemplateRef<StarTemplateContext>;\n  @ContentChild(TemplateRef, {static: false}) starTemplateFromContent: TemplateRef<StarTemplateContext>;\n\n  /**\n   * An event emitted when the user is hovering over a given rating.\n   *\n   * Event payload equals to the rating being hovered over.\n   */\n  @Output() hover = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user stops hovering over a given rating.\n   *\n   * Event payload equals to the rating of the last item being hovered over.\n   */\n  @Output() leave = new EventEmitter<number>();\n\n  /**\n   * An event emitted when the user selects a new rating.\n   *\n   * Event payload equals to the newly selected rating.\n   */\n  @Output() rateChange = new EventEmitter<number>(true);\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(config: NgbRatingConfig, private _changeDetectorRef: ChangeDetectorRef) {\n    this.max = config.max;\n    this.readonly = config.readonly;\n  }\n\n  ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n\n  enter(value: number): void {\n    if (!this.readonly && !this.disabled) {\n      this._updateState(value);\n    }\n    this.hover.emit(value);\n  }\n\n  handleBlur() { this.onTouched(); }\n\n  handleClick(value: number) {\n    if (!this.readonly && !this.disabled) {\n      this.update(this.resettable && this.rate === value ? 0 : value);\n    }\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        this.update(this.rate - 1);\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        this.update(this.rate + 1);\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.max);\n        break;\n      default:\n        return;\n    }\n\n    // note 'return' in default case\n    event.preventDefault();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit(): void {\n    this.contexts = Array.from({length: this.max}, (v, k) => ({fill: 0, index: k}));\n    this._updateState(this.rate);\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  reset(): void {\n    this.leave.emit(this.nextRate);\n    this._updateState(this.rate);\n  }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  update(value: number, internalChange = true): void {\n    const newRate = getValueInRange(value, this.max, 0);\n    if (!this.readonly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this._updateState(this.rate);\n  }\n\n  writeValue(value) {\n    this.update(value, false);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _getFillValue(index: number): number {\n    const diff = this.nextRate - index;\n\n    if (diff >= 1) {\n      return 100;\n    }\n    if (diff < 1 && diff > 0) {\n      return parseInt((diff * 100).toFixed(2), 10);\n    }\n\n    return 0;\n  }\n\n  private _updateState(nextValue: number) {\n    this.nextRate = nextValue;\n    this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbRating} from './rating';\n\nexport {NgbRating} from './rating';\nexport {NgbRatingConfig} from './rating-config';\n\n@NgModule({declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule]})\nexport class NgbRatingModule {\n}\n","// tslint:disable:deprecation\nimport {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTabsetConfig {\n  justify: 'start' | 'center' | 'end' | 'fill' | 'justified' = 'start';\n  orientation: 'horizontal' | 'vertical' = 'horizontal';\n  type: 'tabs' | 'pills' = 'tabs';\n}\n","// tslint:disable:deprecation\nimport {\n  AfterContentChecked,\n  Component,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgbTabsetConfig} from './tabset-config';\n\nlet nextId = 0;\n\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ng-template[ngbTabTitle]'})\nexport class NgbTabTitle {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive to wrap content to be displayed in a tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ng-template[ngbTabContent]'})\nexport class NgbTabContent {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * A directive representing an individual tab.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Directive({selector: 'ngb-tab'})\nexport class NgbTab implements AfterContentChecked {\n  /**\n   * The tab identifier.\n   *\n   * Must be unique for the entire document for proper accessibility support.\n   */\n  @Input() id = `ngb-tab-${nextId++}`;\n\n  /**\n   * The tab title.\n   *\n   * Use the [`NgbTabTitle`](#/components/tabset/api#NgbTabTitle) directive for non-string titles.\n   */\n  @Input() title: string;\n\n  /**\n   * If `true`, the current tab is disabled and can't be toggled.\n   */\n  @Input() disabled = false;\n\n  titleTpl: NgbTabTitle | null;\n  contentTpl: NgbTabContent | null;\n\n  @ContentChildren(NgbTabTitle, {descendants: false}) titleTpls: QueryList<NgbTabTitle>;\n  @ContentChildren(NgbTabContent, {descendants: false}) contentTpls: QueryList<NgbTabContent>;\n\n  ngAfterContentChecked() {\n    // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n    // only @ContentChildren allows us to specify the {descendants: false} option.\n    // Without {descendants: false} we are hitting bugs described in:\n    // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n    this.titleTpl = this.titleTpls.first;\n    this.contentTpl = this.contentTpls.first;\n  }\n}\n\n/**\n * The payload of the change event fired right before the tab change.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\nexport interface NgbTabChangeEvent {\n  /**\n   * The id of the currently active tab.\n   */\n  activeId: string;\n\n  /**\n   * The id of the newly selected tab.\n   */\n  nextId: string;\n\n  /**\n   * Calling this function will prevent tab switching.\n   */\n  preventDefault: () => void;\n}\n\n/**\n * A component that makes it easy to create tabbed interface.\n *\n * @deprecated 6.0.0 Please use NgbNav instead\n */\n@Component({\n  selector: 'ngb-tabset',\n  exportAs: 'ngbTabset',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class NgbTabset implements AfterContentChecked {\n  justifyClass: string;\n\n  @ContentChildren(NgbTab) tabs: QueryList<NgbTab>;\n\n  /**\n   * The identifier of the tab that should be opened **initially**.\n   *\n   * For subsequent tab switches use the `.select()` method and the `(tabChange)` event.\n   */\n  @Input() activeId: string;\n\n  /**\n   * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n   */\n  @Input() destroyOnHide = true;\n\n  /**\n   * The horizontal alignment of the tabs with flexbox utilities.\n   */\n  @Input()\n  set justify(className: 'start' | 'center' | 'end' | 'fill' | 'justified') {\n    if (className === 'fill' || className === 'justified') {\n      this.justifyClass = `nav-${className}`;\n    } else {\n      this.justifyClass = `justify-content-${className}`;\n    }\n  }\n\n  /**\n   * The orientation of the tabset.\n   */\n  @Input() orientation: 'horizontal' | 'vertical';\n\n  /**\n   * Type of navigation to be used for tabs.\n   *\n   * Currently Bootstrap supports only `\"tabs\"` and `\"pills\"`.\n   *\n   * Since `3.0.0` can also be an arbitrary string (ex. for custom themes).\n   */\n  @Input() type: 'tabs' | 'pills' | string;\n\n  /**\n   * A tab change event emitted right before the tab change happens.\n   *\n   * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n   */\n  @Output() tabChange = new EventEmitter<NgbTabChangeEvent>();\n\n  constructor(config: NgbTabsetConfig) {\n    this.type = config.type;\n    this.justify = config.justify;\n    this.orientation = config.orientation;\n  }\n\n  /**\n   * Selects the tab with the given id and shows its associated content panel.\n   *\n   * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n   * hidden depending on the `destroyOnHide` value.\n   */\n  select(tabId: string) {\n    let selectedTab = this._getTabById(tabId);\n    if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n      let defaultPrevented = false;\n\n      this.tabChange.emit(\n          {activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; }});\n\n      if (!defaultPrevented) {\n        this.activeId = selectedTab.id;\n      }\n    }\n  }\n\n  ngAfterContentChecked() {\n    // auto-correct activeId that might have been set incorrectly as input\n    let activeTab = this._getTabById(this.activeId);\n    this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n  }\n\n  private _getTabById(id: string): NgbTab {\n    let tabsWithId: NgbTab[] = this.tabs.filter(tab => tab.id === id);\n    return tabsWithId.length ? tabsWithId[0] : null;\n  }\n}\n","// tslint:disable:deprecation\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle} from './tabset';\n\nexport {NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTabChangeEvent} from './tabset';\nexport {NgbTabsetConfig} from './tabset-config';\n\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\n\n/**\n * @deprecated 6.0.0 Please use NgbNavModule instead\n */\n@NgModule({declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule]})\nexport class NgbTabsetModule {\n}\n","import {isNumber, toInteger} from '../util/util';\n\nexport class NgbTime {\n  hour: number;\n  minute: number;\n  second: number;\n\n  constructor(hour?: number, minute?: number, second?: number) {\n    this.hour = toInteger(hour);\n    this.minute = toInteger(minute);\n    this.second = toInteger(second);\n  }\n\n  changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n\n  updateHour(hour: number) {\n    if (isNumber(hour)) {\n      this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n    } else {\n      this.hour = NaN;\n    }\n  }\n\n  changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n\n  updateMinute(minute: number) {\n    if (isNumber(minute)) {\n      this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n      this.changeHour(Math.floor(minute / 60));\n    } else {\n      this.minute = NaN;\n    }\n  }\n\n  changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n\n  updateSecond(second: number) {\n    if (isNumber(second)) {\n      this.second = second < 0 ? 60 + second % 60 : second % 60;\n      this.changeMinute(Math.floor(second / 60));\n    } else {\n      this.second = NaN;\n    }\n  }\n\n  isValid(checkSecs = true) {\n    return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n  }\n\n  toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTimepickerConfig {\n  meridian = false;\n  spinners = true;\n  seconds = false;\n  hourStep = 1;\n  minuteStep = 1;\n  secondStep = 1;\n  disabled = false;\n  readonlyInputs = false;\n  size: 'small' | 'medium' | 'large' = 'medium';\n}\n","import {Injectable} from '@angular/core';\nimport {NgbTimeStruct} from './ngb-time-struct';\nimport {isInteger} from '../util/util';\n\nexport function NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n  return new NgbTimeStructAdapter();\n}\n\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * @since 2.2.0\n */\n@Injectable({providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY})\nexport abstract class NgbTimeAdapter<T> {\n  /**\n   * Converts a user-model time of type `T` to an `NgbTimeStruct` for internal use.\n   */\n  abstract fromModel(value: T): NgbTimeStruct;\n\n  /**\n   * Converts an internal `NgbTimeStruct` time to a user-model time of type `T`.\n   */\n  abstract toModel(time: NgbTimeStruct): T;\n}\n\n@Injectable()\nexport class NgbTimeStructAdapter extends NgbTimeAdapter<NgbTimeStruct> {\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  fromModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n\n  /**\n   * Converts a NgbTimeStruct value into NgbTimeStruct value\n   */\n  toModel(time: NgbTimeStruct): NgbTimeStruct {\n    return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n        {hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null} :\n        null;\n  }\n}\n","import {Inject, Injectable, LOCALE_ID} from '@angular/core';\nimport {FormStyle, getLocaleDayPeriods, TranslationWidth} from '@angular/common';\n\nexport function NGB_TIMEPICKER_I18N_FACTORY(locale) {\n  return new NgbTimepickerI18nDefault(locale);\n}\n\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n */\n@Injectable({providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID]})\nexport abstract class NgbTimepickerI18n {\n  /**\n   * Returns the name for the period before midday.\n   */\n  abstract getMorningPeriod(): string;\n\n  /**\n   * Returns the name for the period after midday.\n   */\n  abstract getAfternoonPeriod(): string;\n}\n\n@Injectable()\nexport class NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n  private _periods: [string, string];\n\n  constructor(@Inject(LOCALE_ID) locale: string) {\n    super();\n\n    this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n  }\n\n  getMorningPeriod(): string { return this._periods[0]; }\n\n  getAfternoonPeriod(): string { return this._periods[1]; }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  forwardRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nimport {isInteger, isNumber, padNumber, toInteger} from '../util/util';\nimport {NgbTime} from './ngb-time';\nimport {NgbTimepickerConfig} from './timepicker-config';\nimport {NgbTimeAdapter} from './ngb-time-adapter';\nimport {NgbTimepickerI18n} from './timepicker-i18n';\n\nconst FILTER_REGEX = /[^0-9]/g;\n\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTimepicker),\n  multi: true\n};\n\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\n@Component({\n  selector: 'ngb-timepicker',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./timepicker.scss'],\n  template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\"\n            [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" inputmode=\"numeric\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (input)=\"formatInput($event.target)\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n  providers: [NGB_TIMEPICKER_VALUE_ACCESSOR]\n})\nexport class NgbTimepicker implements ControlValueAccessor,\n    OnChanges {\n  disabled: boolean;\n  model: NgbTime;\n\n  private _hourStep: number;\n  private _minuteStep: number;\n  private _secondStep: number;\n\n  /**\n   * Whether to display 12H or 24H mode.\n   */\n  @Input() meridian: boolean;\n\n  /**\n   * If `true`, the spinners above and below inputs are visible.\n   */\n  @Input() spinners: boolean;\n\n  /**\n   * If `true`, it is possible to select seconds.\n   */\n  @Input() seconds: boolean;\n\n  /**\n   * The number of hours to add/subtract when clicking hour spinners.\n   */\n  @Input()\n  set hourStep(step: number) {\n    this._hourStep = isInteger(step) ? step : this._config.hourStep;\n  }\n\n  get hourStep(): number { return this._hourStep; }\n\n  /**\n   * The number of minutes to add/subtract when clicking minute spinners.\n   */\n  @Input()\n  set minuteStep(step: number) {\n    this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n  }\n\n  get minuteStep(): number { return this._minuteStep; }\n\n  /**\n   * The number of seconds to add/subtract when clicking second spinners.\n   */\n  @Input()\n  set secondStep(step: number) {\n    this._secondStep = isInteger(step) ? step : this._config.secondStep;\n  }\n\n  get secondStep(): number { return this._secondStep; }\n\n  /**\n   * If `true`, the timepicker is readonly and can't be changed.\n   */\n  @Input() readonlyInputs: boolean;\n\n  /**\n   * The size of inputs and buttons.\n   */\n  @Input() size: 'small' | 'medium' | 'large';\n\n  constructor(\n      private readonly _config: NgbTimepickerConfig, private _ngbTimeAdapter: NgbTimeAdapter<any>,\n      private _cd: ChangeDetectorRef, public i18n: NgbTimepickerI18n) {\n    this.meridian = _config.meridian;\n    this.spinners = _config.spinners;\n    this.seconds = _config.seconds;\n    this.hourStep = _config.hourStep;\n    this.minuteStep = _config.minuteStep;\n    this.secondStep = _config.secondStep;\n    this.disabled = _config.disabled;\n    this.readonlyInputs = _config.readonlyInputs;\n    this.size = _config.size;\n  }\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value) {\n    const structValue = this._ngbTimeAdapter.fromModel(value);\n    this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n    if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n      this.model.second = 0;\n    }\n    this._cd.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this.onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this.onTouched = fn; }\n\n  setDisabledState(isDisabled: boolean) { this.disabled = isDisabled; }\n\n  changeHour(step: number) {\n    this.model.changeHour(step);\n    this.propagateModelChange();\n  }\n\n  changeMinute(step: number) {\n    this.model.changeMinute(step);\n    this.propagateModelChange();\n  }\n\n  changeSecond(step: number) {\n    this.model.changeSecond(step);\n    this.propagateModelChange();\n  }\n\n  updateHour(newVal: string) {\n    const isPM = this.model.hour >= 12;\n    const enteredHour = toInteger(newVal);\n    if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n      this.model.updateHour(enteredHour + 12);\n    } else {\n      this.model.updateHour(enteredHour);\n    }\n    this.propagateModelChange();\n  }\n\n  updateMinute(newVal: string) {\n    this.model.updateMinute(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  updateSecond(newVal: string) {\n    this.model.updateSecond(toInteger(newVal));\n    this.propagateModelChange();\n  }\n\n  toggleMeridian() {\n    if (this.meridian) {\n      this.changeHour(12);\n    }\n  }\n\n  formatInput(input: HTMLInputElement) { input.value = input.value.replace(FILTER_REGEX, ''); }\n\n  formatHour(value: number) {\n    if (isNumber(value)) {\n      if (this.meridian) {\n        return padNumber(value % 12 === 0 ? 12 : value % 12);\n      } else {\n        return padNumber(value % 24);\n      }\n    } else {\n      return padNumber(NaN);\n    }\n  }\n\n  formatMinSec(value: number) { return padNumber(value); }\n\n  get isSmallSize(): boolean { return this.size === 'small'; }\n\n  get isLargeSize(): boolean { return this.size === 'large'; }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n      this.model.second = 0;\n      this.propagateModelChange(false);\n    }\n  }\n\n  private propagateModelChange(touched = true) {\n    if (touched) {\n      this.onTouched();\n    }\n    if (this.model.isValid(this.seconds)) {\n      this.onChange(\n          this._ngbTimeAdapter.toModel({hour: this.model.hour, minute: this.model.minute, second: this.model.second}));\n    } else {\n      this.onChange(this._ngbTimeAdapter.toModel(null));\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbTimepicker} from './timepicker';\n\nexport {NgbTimepicker} from './timepicker';\nexport {NgbTimepickerConfig} from './timepicker-config';\nexport {NgbTimeStruct} from './ngb-time-struct';\nexport {NgbTimeAdapter} from './ngb-time-adapter';\nexport {NgbTimepickerI18n} from './timepicker-i18n';\n\n@NgModule({declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule]})\nexport class NgbTimepickerModule {\n}\n","import {Injectable} from '@angular/core';\n\n/**\n * Interface used to type all toast config options. See `NgbToastConfig`.\n *\n * @since 5.0.0\n */\nexport interface NgbToastOptions {\n  /**\n   * Specify if the toast component should emit the `hide()` output\n   * after a certain `delay` in ms.\n   */\n  autohide?: boolean;\n\n  /**\n   * Delay in ms after which the `hide()` output should be emitted.\n   */\n  delay?: number;\n\n  /**\n   * Type of aria-live attribute to be used.\n   *\n   * Could be one of these 2 values (as string):\n   * - `polite` (default)\n   * - `alert`\n   */\n  ariaLive?: 'polite' | 'alert';\n}\n\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * @since 5.0.0\n */\n@Injectable({providedIn: 'root'})\nexport class NgbToastConfig implements NgbToastOptions {\n  autohide = true;\n  delay = 500;\n  ariaLive: 'polite' | 'alert' = 'polite';\n}\n","import {\n  AfterContentInit,\n  Attribute,\n  Component,\n  ContentChild,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\nimport {NgbToastConfig} from './toast-config';\n\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * @since 5.0.0\n */\n@Directive({selector: '[ngbToastHeader]'})\nexport class NgbToastHeader {\n}\n\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * @since 5.0.0\n */\n@Component({\n  selector: 'ngb-toast',\n  exportAs: 'ngbToast',\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    '[attr.aria-live]': 'ariaLive',\n    'aria-atomic': 'true',\n    '[class.toast]': 'true',\n    '[class.show]': 'true',\n  },\n  template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  styleUrls: ['./toast.scss']\n})\nexport class NgbToast implements AfterContentInit,\n    OnChanges {\n  private _timeoutID;\n\n  /**\n   * Delay after which the toast will hide (ms).\n   * default: `500` (ms) (inherited from NgbToastConfig)\n   */\n  @Input() delay: number;\n\n  /**\n   * Auto hide the toast after a delay in ms.\n   * default: `true` (inherited from NgbToastConfig)\n   */\n  @Input() autohide: boolean;\n\n  /**\n   * Text to be used as toast's header.\n   * Ignored if a ContentChild template is specified at the same time.\n   */\n  @Input() header: string;\n\n  /**\n   * A template like `<ng-template ngbToastHeader></ng-template>` can be\n   * used in the projected content to allow markup usage.\n   */\n  @ContentChild(NgbToastHeader, {read: TemplateRef, static: true}) contentHeaderTpl: TemplateRef<any>| null = null;\n\n  /**\n   * An event fired immediately when toast's `hide()` method has been called.\n   * It can only occur in 2 different scenarios:\n   * - `autohide` timeout fires\n   * - user clicks on a closing cross (&times)\n   *\n   * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n   * that.\n   */\n  @Output('hide') hideOutput = new EventEmitter<void>();\n\n  constructor(@Attribute('aria-live') public ariaLive: string, config: NgbToastConfig) {\n    if (this.ariaLive == null) {\n      this.ariaLive = config.ariaLive;\n    }\n    this.delay = config.delay;\n    this.autohide = config.autohide;\n  }\n\n  ngAfterContentInit() { this._init(); }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('autohide' in changes) {\n      this._clearTimeout();\n      this._init();\n    }\n  }\n\n  hide() {\n    this._clearTimeout();\n    this.hideOutput.emit();\n  }\n\n  private _init() {\n    if (this.autohide && !this._timeoutID) {\n      this._timeoutID = setTimeout(() => this.hide(), this.delay);\n    }\n  }\n\n  private _clearTimeout() {\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgbToast, NgbToastHeader} from './toast';\n\nexport {NgbToast, NgbToastHeader} from './toast';\nexport {NgbToastConfig, NgbToastOptions} from './toast-config';\n\n@NgModule({declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader]})\nexport class NgbToastModule {\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTooltipConfig {\n  autoClose: boolean | 'inside' | 'outside' = true;\n  placement: PlacementArray = 'auto';\n  triggers = 'hover focus';\n  container: string;\n  disableTooltip = false;\n  tooltipClass: string;\n  openDelay = 0;\n  closeDelay = 0;\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy,\n  Inject,\n  Injector,\n  Renderer2,\n  ComponentRef,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ApplicationRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {listenToTriggers} from '../util/triggers';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {positionElements, PlacementArray} from '../util/positioning';\nimport {PopupService} from '../util/popup';\n\nimport {NgbTooltipConfig} from './tooltip-config';\n\nlet nextId = 0;\n\n@Component({\n  selector: 'ngb-tooltip-window',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {'[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id'},\n  template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n  styleUrls: ['./tooltip.scss']\n})\nexport class NgbTooltipWindow {\n  @Input() id: string;\n  @Input() tooltipClass: string;\n}\n\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\n@Directive({selector: '[ngbTooltip]', exportAs: 'ngbTooltip'})\nexport class NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * Indicates whether the tooltip should be closed on `Escape` key and inside/outside clicks:\n   *\n   * * `true` - closes on both outside and inside clicks as well as `Escape` presses\n   * * `false` - disables the autoClose feature (NB: triggers still apply)\n   * * `\"inside\"` - closes on inside clicks as well as Escape presses\n   * * `\"outside\"` - closes on outside clicks (sometimes also achievable through triggers)\n   * as well as `Escape` presses\n   *\n   * @since 3.0.0\n   */\n  @Input() autoClose: boolean | 'inside' | 'outside';\n\n  /**\n   * The preferred placement of the tooltip.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"auto\"` (same as the sequence above).\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray;\n\n  /**\n   * Specifies events that should trigger the tooltip.\n   *\n   * Supports a space separated list of event names.\n   * For more details see the [triggers demo](#/components/tooltip/examples#triggers).\n   */\n  @Input() triggers: string;\n\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, tooltip is disabled and won't be displayed.\n   *\n   * @since 1.1.0\n   */\n  @Input() disableTooltip: boolean;\n\n  /**\n   * An optional class applied to the tooltip window element.\n   *\n   * @since 3.2.0\n   */\n  @Input() tooltipClass: string;\n\n  /**\n   * The opening delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() openDelay: number;\n\n  /**\n   * The closing delay in ms. Works only for \"non-manual\" opening triggers defined by the `triggers` input.\n   *\n   * @since 4.1.0\n   */\n  @Input() closeDelay: number;\n\n  /**\n   * An event emitted when the tooltip is shown. Contains no payload.\n   */\n  @Output() shown = new EventEmitter();\n  /**\n   * An event emitted when the popover is hidden. Contains no payload.\n   */\n  @Output() hidden = new EventEmitter();\n\n  private _ngbTooltip: string | TemplateRef<any>;\n  private _ngbTooltipWindowId = `ngb-tooltip-${nextId++}`;\n  private _popupService: PopupService<NgbTooltipWindow>;\n  private _windowRef: ComponentRef<NgbTooltipWindow>;\n  private _unregisterListenersFn;\n  private _zoneSubscription: any;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLElement>, private _renderer: Renderer2, injector: Injector,\n      componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, config: NgbTooltipConfig,\n      private _ngZone: NgZone, @Inject(DOCUMENT) private _document: any, private _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n    this.autoClose = config.autoClose;\n    this.placement = config.placement;\n    this.triggers = config.triggers;\n    this.container = config.container;\n    this.disableTooltip = config.disableTooltip;\n    this.tooltipClass = config.tooltipClass;\n    this.openDelay = config.openDelay;\n    this.closeDelay = config.closeDelay;\n    this._popupService = new PopupService<NgbTooltipWindow>(\n        NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n      if (this._windowRef) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body', 'bs-tooltip');\n      }\n    });\n  }\n\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n   *\n   * If the content if falsy, the tooltip won't open.\n   */\n  @Input()\n  set ngbTooltip(value: string | TemplateRef<any>) {\n    this._ngbTooltip = value;\n    if (!value && this._windowRef) {\n      this.close();\n    }\n  }\n\n  get ngbTooltip() { return this._ngbTooltip; }\n\n  /**\n   * Opens the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering.\n   * The `context` is an optional value to be injected into the tooltip template when it is created.\n   */\n  open(context?: any) {\n    if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n      this._windowRef = this._popupService.open(this._ngbTooltip, context);\n      this._windowRef.instance.tooltipClass = this.tooltipClass;\n      this._windowRef.instance.id = this._ngbTooltipWindowId;\n\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n\n      if (this.container === 'body') {\n        this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      // We need to detect changes, because we don't know where .open() might be called from.\n      // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n      // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n      this._windowRef.changeDetectorRef.detectChanges();\n\n      // We need to mark for check, because tooltip won't work inside the OnPush component.\n      // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n      // inside the template of an OnPush component and we change the tooltip from\n      // open -> closed, the expression in question won't be updated unless we explicitly\n      // mark the parent component to be checked.\n      this._windowRef.changeDetectorRef.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden,\n          [this._windowRef.location.nativeElement]);\n\n      this.shown.emit();\n    }\n  }\n\n  /**\n   * Closes the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  close(): void {\n    if (this._windowRef != null) {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      this._popupService.close();\n      this._windowRef = null;\n      this.hidden.emit();\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Toggles the tooltip.\n   *\n   * This is considered to be a \"manual\" triggering of the tooltip.\n   */\n  toggle(): void {\n    if (this._windowRef) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Returns `true`, if the popover is currently shown.\n   */\n  isOpen(): boolean { return this._windowRef != null; }\n\n  ngOnInit() {\n    this._unregisterListenersFn = listenToTriggers(\n        this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this),\n        this.close.bind(this), +this.openDelay, +this.closeDelay);\n  }\n\n  ngOnChanges({tooltipClass}: SimpleChanges) {\n    if (tooltipClass && this.isOpen()) {\n      this._windowRef.instance.tooltipClass = tooltipClass.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n    // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n    this._zoneSubscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbTooltip, NgbTooltipWindow} from './tooltip';\n\nexport {NgbTooltipConfig} from './tooltip-config';\nexport {NgbTooltip} from './tooltip';\nexport {Placement} from '../util/positioning';\n\n@NgModule({declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow]})\nexport class NgbTooltipModule {\n}\n","import {Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation} from '@angular/core';\nimport {regExpEscape, toString} from '../util/util';\n\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\n@Component({\n  selector: 'ngb-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n      `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n      `</ng-template>`,  // template needs to be formatted in a certain way so we don't add empty text nodes\n  styleUrls: ['./highlight.scss']\n})\nexport class NgbHighlight implements OnChanges {\n  parts: string[];\n\n  /**\n   * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n   */\n  @Input() highlightClass = 'ngb-highlight';\n\n  /**\n   * The text highlighting is added to.\n   *\n   * If the `term` is found inside this text, it will be highlighted.\n   * If the `term` contains array then all the items from it will be highlighted inside the text.\n   */\n  @Input() result: string;\n\n  /**\n   * The term or array of terms to be highlighted.\n   * Since version `v4.2.0` term could be a `string[]`\n   */\n  @Input() term: string | readonly string[];\n\n  ngOnChanges(changes: SimpleChanges) {\n    const result = toString(this.result);\n\n    const terms = Array.isArray(this.term) ? this.term : [this.term];\n    const escapedTerms = terms.map(term => regExpEscape(toString(term))).filter(term => term);\n\n    this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewEncapsulation} from '@angular/core';\n\nimport {toString} from '../util/util';\n\n/**\n * The context for the typeahead result template in case you want to override the default one.\n */\nexport interface ResultTemplateContext {\n  /**\n   * Your typeahead result item.\n   */\n  result: any;\n\n  /**\n   * Search term from the `<input>` used to get current result.\n   */\n  term: string;\n}\n\n@Component({\n  selector: 'ngb-typeahead-window',\n  exportAs: 'ngbTypeaheadWindow',\n  encapsulation: ViewEncapsulation.None,\n  host: {'(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id'},\n  template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n})\nexport class NgbTypeaheadWindow implements OnInit {\n  activeIdx = 0;\n\n  /**\n   *  The id for the typeahead window. The id should be unique and the same\n   *  as the associated typeahead's id.\n   */\n  @Input() id: string;\n\n  /**\n   * Flag indicating if the first row should be active initially\n   */\n  @Input() focusFirst = true;\n\n  /**\n   * Typeahead match results to be displayed\n   */\n  @Input() results;\n\n  /**\n   * Search term used to get current results\n   */\n  @Input() term: string;\n\n  /**\n   * A function used to format a given result before display. This function should return a formatted string without any\n   * HTML markup\n   */\n  @Input() formatter = toString;\n\n  /**\n   * A template to override a matching result default display\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * Event raised when user selects a particular result row\n   */\n  @Output('select') selectEvent = new EventEmitter();\n\n  @Output('activeChange') activeChangeEvent = new EventEmitter();\n\n  hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n\n  getActive() { return this.results[this.activeIdx]; }\n\n  markActive(activeIdx: number) {\n    this.activeIdx = activeIdx;\n    this._activeChanged();\n  }\n\n  next() {\n    if (this.activeIdx === this.results.length - 1) {\n      this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n    } else {\n      this.activeIdx++;\n    }\n    this._activeChanged();\n  }\n\n  prev() {\n    if (this.activeIdx < 0) {\n      this.activeIdx = this.results.length - 1;\n    } else if (this.activeIdx === 0) {\n      this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n    } else {\n      this.activeIdx--;\n    }\n    this._activeChanged();\n  }\n\n  resetActive() {\n    this.activeIdx = this.focusFirst ? 0 : -1;\n    this._activeChanged();\n  }\n\n  select(item) { this.selectEvent.emit(item); }\n\n  ngOnInit() { this.resetActive(); }\n\n  private _activeChanged() {\n    this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n  }\n}\n","import {Injectable, Inject, InjectionToken, OnDestroy} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\n\n\n// usefulness (and default value) of delay documented in Material's CDK\n// https://github.com/angular/material2/blob/6405da9b8e8532a7e5c854c920ee1815c275d734/src/cdk/a11y/live-announcer/live-announcer.ts#L50\nexport type ARIA_LIVE_DELAY_TYPE = number | null;\nexport const ARIA_LIVE_DELAY = new InjectionToken<ARIA_LIVE_DELAY_TYPE>(\n    'live announcer delay', {providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY});\nexport function ARIA_LIVE_DELAY_FACTORY(): number {\n  return 100;\n}\n\n\nfunction getLiveElement(document: any, lazyCreate = false): HTMLElement | null {\n  let element = document.body.querySelector('#ngb-live') as HTMLElement;\n\n  if (element == null && lazyCreate) {\n    element = document.createElement('div');\n\n    element.setAttribute('id', 'ngb-live');\n    element.setAttribute('aria-live', 'polite');\n    element.setAttribute('aria-atomic', 'true');\n\n    element.classList.add('sr-only');\n\n    document.body.appendChild(element);\n  }\n\n  return element;\n}\n\n\n\n@Injectable({providedIn: 'root'})\nexport class Live implements OnDestroy {\n  constructor(@Inject(DOCUMENT) private _document: any, @Inject(ARIA_LIVE_DELAY) private _delay: any) {}\n\n  ngOnDestroy() {\n    const element = getLiveElement(this._document);\n    if (element) {\n      element.parentElement.removeChild(element);\n    }\n  }\n\n  say(message: string) {\n    const element = getLiveElement(this._document, true);\n    const delay = this._delay;\n\n    element.textContent = '';\n    const setText = () => element.textContent = message;\n    if (delay === null) {\n      setText();\n    } else {\n      setTimeout(setText, delay);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PlacementArray} from '../util/positioning';\n\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\n@Injectable({providedIn: 'root'})\nexport class NgbTypeaheadConfig {\n  container;\n  editable = true;\n  focusFirst = true;\n  showHint = false;\n  placement: PlacementArray = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  ApplicationRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/common';\nimport {BehaviorSubject, fromEvent, Observable, Subject, Subscription} from 'rxjs';\nimport {map, switchMap, tap} from 'rxjs/operators';\n\nimport {Live} from '../util/accessibility/live';\nimport {ngbAutoClose} from '../util/autoclose';\nimport {Key} from '../util/key';\nimport {PopupService} from '../util/popup';\nimport {PlacementArray, positionElements} from '../util/positioning';\nimport {isDefined, toString} from '../util/util';\n\nimport {NgbTypeaheadConfig} from './typeahead-config';\nimport {NgbTypeaheadWindow, ResultTemplateContext} from './typeahead-window';\n\n\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgbTypeahead),\n  multi: true\n};\n\n/**\n * An event emitted right before an item is selected from the result list.\n */\nexport interface NgbTypeaheadSelectItemEvent {\n  /**\n   * The item from the result list about to be selected.\n   */\n  item: any;\n\n  /**\n   * Calling this function will prevent item selection from happening.\n   */\n  preventDefault: () => void;\n}\n\nlet nextWindowId = 0;\n\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\n@Directive({\n  selector: 'input[ngbTypeahead]',\n  exportAs: 'ngbTypeahead',\n  host: {\n    '(blur)': 'handleBlur()',\n    '[class.open]': 'isPopupOpen()',\n    '(keydown)': 'handleKeyDown($event)',\n    '[autocomplete]': 'autocomplete',\n    'autocapitalize': 'off',\n    'autocorrect': 'off',\n    'role': 'combobox',\n    'aria-multiline': 'false',\n    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n    '[attr.aria-activedescendant]': 'activeDescendant',\n    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n    '[attr.aria-expanded]': 'isPopupOpen()'\n  },\n  providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n})\nexport class NgbTypeahead implements ControlValueAccessor,\n    OnInit, OnDestroy {\n  private _popupService: PopupService<NgbTypeaheadWindow>;\n  private _subscription: Subscription;\n  private _closed$ = new Subject();\n  private _inputValueBackup: string;\n  private _valueChanges: Observable<string>;\n  private _resubscribeTypeahead: BehaviorSubject<any>;\n  private _windowRef: ComponentRef<NgbTypeaheadWindow>;\n  private _zoneSubscription: any;\n\n  /**\n   * The value for the `autocomplete` attribute for the `<input>` element.\n   *\n   * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n   *\n   * @since 2.1.0\n   */\n  @Input() autocomplete = 'off';\n\n  /**\n   * A selector specifying the element the typeahead popup will be appended to.\n   *\n   * Currently only supports `\"body\"`.\n   */\n  @Input() container: string;\n\n  /**\n   * If `true`, model values will not be restricted only to items selected from the popup.\n   */\n  @Input() editable: boolean;\n\n  /**\n   * If `true`, the first item in the result list will always stay focused while typing.\n   */\n  @Input() focusFirst: boolean;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the `<input>` field.\n   *\n   * It is called when the user selects something in the popup or the model value changes, so the input needs to\n   * be updated.\n   */\n  @Input() inputFormatter: (item: any) => string;\n\n  /**\n   * The function that converts a stream of text values from the `<input>` element to the stream of the array of items\n   * to display in the typeahead popup.\n   *\n   * If the resulting observable emits a non-empty array - the popup will be shown. If it emits an empty array - the\n   * popup will be closed.\n   *\n   * See the [basic example](#/components/typeahead/examples#basic) for more details.\n   *\n   * Note that the `this` argument is `undefined` so you need to explicitly bind it to a desired \"this\" target.\n   */\n  @Input() ngbTypeahead: (text: Observable<string>) => Observable<readonly any[]>;\n\n  /**\n   * The function that converts an item from the result list to a `string` to display in the popup.\n   *\n   * Must be provided, if your `ngbTypeahead` returns something other than `Observable<string[]>`.\n   *\n   * Alternatively for more complex markup in the popup you should use `resultTemplate`.\n   */\n  @Input() resultFormatter: (item: any) => string;\n\n  /**\n   * The template to override the way resulting items are displayed in the popup.\n   *\n   * See the [ResultTemplateContext](#/components/typeahead/api#ResultTemplateContext) for the template context.\n   *\n   * Also see the [template for results demo](#/components/typeahead/examples#template) for more details.\n   */\n  @Input() resultTemplate: TemplateRef<ResultTemplateContext>;\n\n  /**\n   * If `true`, will show the hint in the `<input>` when an item in the result list matches.\n   */\n  @Input() showHint: boolean;\n\n  /**\n   * The preferred placement of the typeahead.\n   *\n   * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n   * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n   * `\"right-bottom\"`\n   *\n   * Accepts an array of strings or a string with space separated possible values.\n   *\n   * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n   *\n   * Please see the [positioning overview](#/positioning) for more details.\n   */\n  @Input() placement: PlacementArray = 'bottom-left';\n\n  /**\n   * An event emitted right before an item is selected from the result list.\n   *\n   * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n   */\n  @Output() selectItem = new EventEmitter<NgbTypeaheadSelectItemEvent>();\n\n  activeDescendant: string;\n  popupId = `ngb-typeahead-${nextWindowId++}`;\n\n  private _onTouched = () => {};\n  private _onChange = (_: any) => {};\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>, viewContainerRef: ViewContainerRef,\n      private _renderer: Renderer2, injector: Injector, componentFactoryResolver: ComponentFactoryResolver,\n      config: NgbTypeaheadConfig, ngZone: NgZone, private _live: Live, @Inject(DOCUMENT) private _document: any,\n      private _ngZone: NgZone, private _changeDetector: ChangeDetectorRef, applicationRef: ApplicationRef) {\n    this.container = config.container;\n    this.editable = config.editable;\n    this.focusFirst = config.focusFirst;\n    this.showHint = config.showHint;\n    this.placement = config.placement;\n\n    this._valueChanges = fromEvent<Event>(_elementRef.nativeElement, 'input')\n                             .pipe(map($event => ($event.target as HTMLInputElement).value));\n\n    this._resubscribeTypeahead = new BehaviorSubject(null);\n\n    this._popupService = new PopupService<NgbTypeaheadWindow>(\n        NgbTypeaheadWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, applicationRef);\n\n    this._zoneSubscription = ngZone.onStable.subscribe(() => {\n      if (this.isPopupOpen()) {\n        positionElements(\n            this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement,\n            this.container === 'body');\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    const inputValues$ = this._valueChanges.pipe(tap(value => {\n      this._inputValueBackup = this.showHint ? value : null;\n      this._onChange(this.editable ? value : undefined);\n    }));\n    const results$ = inputValues$.pipe(this.ngbTypeahead);\n    const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => results$));\n    this._subscription = this._subscribeToUserInput(userInput$);\n  }\n\n  ngOnDestroy(): void {\n    this._closePopup();\n    this._unsubscribeFromUserInput();\n    this._zoneSubscription.unsubscribe();\n  }\n\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn; }\n\n  registerOnTouched(fn: () => any): void { this._onTouched = fn; }\n\n  writeValue(value) {\n    this._writeInputValue(this._formatItemForInput(value));\n    if (this.showHint) {\n      this._inputValueBackup = value;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  /**\n   * Dismisses typeahead popup window\n   */\n  dismissPopup() {\n    if (this.isPopupOpen()) {\n      this._resubscribeTypeahead.next(null);\n      this._closePopup();\n      if (this.showHint && this._inputValueBackup !== null) {\n        this._writeInputValue(this._inputValueBackup);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Returns true if the typeahead popup window is displayed\n   */\n  isPopupOpen() { return this._windowRef != null; }\n\n  handleBlur() {\n    this._resubscribeTypeahead.next(null);\n    this._onTouched();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (!this.isPopupOpen()) {\n      return;\n    }\n\n    // tslint:disable-next-line:deprecation\n    switch (event.which) {\n      case Key.ArrowDown:\n        event.preventDefault();\n        this._windowRef.instance.next();\n        this._showHint();\n        break;\n      case Key.ArrowUp:\n        event.preventDefault();\n        this._windowRef.instance.prev();\n        this._showHint();\n        break;\n      case Key.Enter:\n      case Key.Tab:\n        const result = this._windowRef.instance.getActive();\n        if (isDefined(result)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._selectResult(result);\n        }\n        this._closePopup();\n        break;\n    }\n  }\n\n  private _openPopup() {\n    if (!this.isPopupOpen()) {\n      this._inputValueBackup = this._elementRef.nativeElement.value;\n      this._windowRef = this._popupService.open();\n      this._windowRef.instance.id = this.popupId;\n      this._windowRef.instance.selectEvent.subscribe((result: any) => this._selectResultClosePopup(result));\n      this._windowRef.instance.activeChangeEvent.subscribe((activeId: string) => this.activeDescendant = activeId);\n\n      if (this.container === 'body') {\n        window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n      }\n\n      this._changeDetector.markForCheck();\n\n      ngbAutoClose(\n          this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$,\n          [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n    }\n  }\n\n  private _closePopup() {\n    this._closed$.next();\n    this._popupService.close();\n    this._windowRef = null;\n    this.activeDescendant = undefined;\n  }\n\n  private _selectResult(result: any) {\n    let defaultPrevented = false;\n    this.selectItem.emit({item: result, preventDefault: () => { defaultPrevented = true; }});\n    this._resubscribeTypeahead.next(null);\n\n    if (!defaultPrevented) {\n      this.writeValue(result);\n      this._onChange(result);\n    }\n  }\n\n  private _selectResultClosePopup(result: any) {\n    this._selectResult(result);\n    this._closePopup();\n  }\n\n  private _showHint() {\n    if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n      const userInputLowerCase = this._inputValueBackup.toLowerCase();\n      const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n\n      if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n        this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n        this._elementRef.nativeElement['setSelectionRange'].apply(\n            this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n      } else {\n        this._writeInputValue(formattedVal);\n      }\n    }\n  }\n\n  private _formatItemForInput(item: any): string {\n    return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n  }\n\n  private _writeInputValue(value: string): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n  }\n\n  private _subscribeToUserInput(userInput$: Observable<readonly any[]>): Subscription {\n    return userInput$.subscribe((results) => {\n      if (!results || results.length === 0) {\n        this._closePopup();\n      } else {\n        this._openPopup();\n        this._windowRef.instance.focusFirst = this.focusFirst;\n        this._windowRef.instance.results = results;\n        this._windowRef.instance.term = this._elementRef.nativeElement.value;\n        if (this.resultFormatter) {\n          this._windowRef.instance.formatter = this.resultFormatter;\n        }\n        if (this.resultTemplate) {\n          this._windowRef.instance.resultTemplate = this.resultTemplate;\n        }\n        this._windowRef.instance.resetActive();\n\n        // The observable stream we are subscribing to might have async steps\n        // and if a component containing typeahead is using the OnPush strategy\n        // the change detection turn wouldn't be invoked automatically.\n        this._windowRef.changeDetectorRef.detectChanges();\n\n        this._showHint();\n      }\n\n      // live announcer\n      const count = results ? results.length : 0;\n      this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n    });\n  }\n\n  private _unsubscribeFromUserInput() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n    this._subscription = null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {NgbHighlight} from './highlight';\nimport {NgbTypeaheadWindow} from './typeahead-window';\nimport {NgbTypeahead} from './typeahead';\n\nexport {NgbHighlight} from './highlight';\nexport {NgbTypeaheadWindow} from './typeahead-window';\nexport {NgbTypeaheadConfig} from './typeahead-config';\nexport {NgbTypeahead, NgbTypeaheadSelectItemEvent} from './typeahead';\n\n@NgModule({\n  declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n  exports: [NgbTypeahead, NgbHighlight],\n  imports: [CommonModule],\n  entryComponents: [NgbTypeaheadWindow]\n})\nexport class NgbTypeaheadModule {\n}\n","import {NgModule} from '@angular/core';\n\nimport {NgbAccordionModule} from './accordion/accordion.module';\nimport {NgbAlertModule} from './alert/alert.module';\nimport {NgbButtonsModule} from './buttons/buttons.module';\nimport {NgbCarouselModule} from './carousel/carousel.module';\nimport {NgbCollapseModule} from './collapse/collapse.module';\nimport {NgbDatepickerModule} from './datepicker/datepicker.module';\nimport {NgbDropdownModule} from './dropdown/dropdown.module';\nimport {NgbModalModule} from './modal/modal.module';\nimport {NgbNavModule} from './nav/nav.module';\nimport {NgbPaginationModule} from './pagination/pagination.module';\nimport {NgbPopoverModule} from './popover/popover.module';\nimport {NgbProgressbarModule} from './progressbar/progressbar.module';\nimport {NgbRatingModule} from './rating/rating.module';\nimport {NgbTabsetModule} from './tabset/tabset.module';\nimport {NgbTimepickerModule} from './timepicker/timepicker.module';\nimport {NgbToastModule} from './toast/toast.module';\nimport {NgbTooltipModule} from './tooltip/tooltip.module';\nimport {NgbTypeaheadModule} from './typeahead/typeahead.module';\n\n\n\nexport {\n  NgbAccordion,\n  NgbAccordionConfig,\n  NgbAccordionModule,\n  NgbPanel,\n  NgbPanelChangeEvent,\n  NgbPanelContent,\n  NgbPanelHeader,\n  NgbPanelHeaderContext,\n  NgbPanelTitle,\n  NgbPanelToggle\n} from './accordion/accordion.module';\nexport {NgbAlert, NgbAlertConfig, NgbAlertModule} from './alert/alert.module';\nexport {NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup} from './buttons/buttons.module';\nexport {\n  NgbCarousel,\n  NgbCarouselConfig,\n  NgbCarouselModule,\n  NgbSlide,\n  NgbSlideEvent,\n  NgbSlideEventDirection,\n  NgbSlideEventSource\n} from './carousel/carousel.module';\nexport {NgbCollapse, NgbCollapseModule} from './collapse/collapse.module';\nexport {\n  NgbCalendar,\n  NgbCalendarGregorian,\n  NgbCalendarHebrew,\n  NgbCalendarIslamicCivil,\n  NgbCalendarIslamicUmalqura,\n  NgbCalendarPersian,\n  NgbDate,\n  NgbDateAdapter,\n  NgbDateNativeAdapter,\n  NgbDateNativeUTCAdapter,\n  NgbDateParserFormatter,\n  NgbDatepicker,\n  NgbDatepickerConfig,\n  NgbInputDatepickerConfig,\n  NgbDatepickerContent,\n  NgbDatepickerI18n,\n  NgbDatepickerI18nHebrew,\n  NgbDatepickerKeyboardService,\n  NgbDatepickerModule,\n  NgbDatepickerMonth,\n  NgbDatepickerNavigateEvent,\n  NgbDatepickerState,\n  NgbDateStruct,\n  NgbInputDatepicker,\n  NgbPeriod\n} from './datepicker/datepicker.module';\nexport {\n  NgbDropdown,\n  NgbDropdownAnchor,\n  NgbDropdownConfig,\n  NgbDropdownItem,\n  NgbDropdownMenu,\n  NgbDropdownModule,\n  NgbDropdownToggle,\n  NgbNavbar\n} from './dropdown/dropdown.module';\nexport {\n  ModalDismissReasons,\n  NgbActiveModal,\n  NgbModal,\n  NgbModalConfig,\n  NgbModalModule,\n  NgbModalOptions,\n  NgbModalRef\n} from './modal/modal.module';\nexport {\n  NgbNavChangeEvent,\n  NgbNavConfig,\n  NgbNav,\n  NgbNavContent,\n  NgbNavContentContext,\n  NgbNavItem,\n  NgbNavLink,\n  NgbNavModule,\n  NgbNavOutlet\n} from './nav/nav.module';\nexport {\n  NgbPagination,\n  NgbPaginationConfig,\n  NgbPaginationEllipsis,\n  NgbPaginationFirst,\n  NgbPaginationLast,\n  NgbPaginationModule,\n  NgbPaginationNext,\n  NgbPaginationNumber,\n  NgbPaginationPrevious\n} from './pagination/pagination.module';\nexport {NgbPopover, NgbPopoverConfig, NgbPopoverModule} from './popover/popover.module';\nexport {NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule} from './progressbar/progressbar.module';\nexport {NgbRating, NgbRatingConfig, NgbRatingModule} from './rating/rating.module';\nexport {\n  NgbTab,\n  NgbTabChangeEvent,\n  NgbTabContent,\n  NgbTabset,\n  NgbTabsetConfig,\n  NgbTabsetModule,\n  NgbTabTitle\n} from './tabset/tabset.module';\nexport {\n  NgbTimeAdapter,\n  NgbTimepickerI18n,\n  NgbTimepicker,\n  NgbTimepickerConfig,\n  NgbTimepickerModule,\n  NgbTimeStruct\n} from './timepicker/timepicker.module';\nexport {NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule} from './toast/toast.module';\nexport {NgbTooltip, NgbTooltipConfig, NgbTooltipModule} from './tooltip/tooltip.module';\nexport {\n  NgbHighlight,\n  NgbTypeahead,\n  NgbTypeaheadConfig,\n  NgbTypeaheadModule,\n  NgbTypeaheadSelectItemEvent\n} from './typeahead/typeahead.module';\nexport {Placement} from './util/positioning';\n\n\nconst NGB_MODULES = [\n  NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n  NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,\n  NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,\n  // tslint:disable-next-line:deprecation\n  NgbTabsetModule\n];\n\n@NgModule({imports: NGB_MODULES, exports: NGB_MODULES})\nexport class NgbModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NGB_CAROUSEL_DIRECTIVES as ɵa} from './carousel/carousel';\nexport {NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi,NgbDateStructAdapter as ɵj} from './datepicker/adapters/ngb-date-adapter';\nexport {NGB_DATEPICKER_VALUE_ACCESSOR as ɵb} from './datepicker/datepicker';\nexport {NgbDatepickerDayView as ɵd} from './datepicker/datepicker-day-view';\nexport {NGB_DATEPICKER_18N_FACTORY as ɵg,NgbDatepickerI18nDefault as ɵh} from './datepicker/datepicker-i18n';\nexport {NgbDatepickerNavigation as ɵe} from './datepicker/datepicker-navigation';\nexport {NgbDatepickerNavigationSelect as ɵf} from './datepicker/datepicker-navigation-select';\nexport {NgbDatepickerService as ɵt} from './datepicker/datepicker-service';\nexport {NgbCalendarHijri as ɵbb} from './datepicker/hijri/ngb-calendar-hijri';\nexport {NGB_DATEPICKER_CALENDAR_FACTORY as ɵc} from './datepicker/ngb-calendar';\nexport {NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk,NgbDateISOParserFormatter as ɵl} from './datepicker/ngb-date-parser-formatter';\nexport {NgbModalBackdrop as ɵu} from './modal/modal-backdrop';\nexport {NgbModalStack as ɵw} from './modal/modal-stack';\nexport {NgbModalWindow as ɵv} from './modal/modal-window';\nexport {NgbPopoverWindow as ɵm} from './popover/popover';\nexport {NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵn,NgbTimeStructAdapter as ɵo} from './timepicker/ngb-time-adapter';\nexport {NGB_TIMEPICKER_I18N_FACTORY as ɵp,NgbTimepickerI18nDefault as ɵq} from './timepicker/timepicker-i18n';\nexport {NgbTooltipWindow as ɵr} from './tooltip/tooltip';\nexport {NgbTypeaheadWindow as ɵs} from './typeahead/typeahead-window';\nexport {ARIA_LIVE_DELAY as ɵy,ARIA_LIVE_DELAY_FACTORY as ɵz,Live as ɵba} from './util/accessibility/live';\nexport {ContentRef as ɵbc} from './util/popup';\nexport {ScrollBar as ɵx} from './util/scrollbar';"]},"metadata":{},"sourceType":"module"}