{"version":3,"file":"datepicker-service.d.ts","sources":["datepicker-service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgbCalendar } from './ngb-calendar';\nimport { NgbDate } from './ngb-date';\nimport { NgbDateStruct } from './ngb-date-struct';\nimport { DatepickerViewModel } from './datepicker-view-model';\nimport { Observable } from 'rxjs';\nimport { NgbDatepickerI18n } from './datepicker-i18n';\nexport interface DatepickerServiceInputs extends Partial<Pick<DatepickerViewModel, 'dayTemplateData' | 'displayMonths' | 'disabled' | 'firstDayOfWeek' | 'focusVisible' | 'markDisabled' | 'maxDate' | 'minDate' | 'navigation' | 'outsideDays'>> {\n}\nexport declare class NgbDatepickerService {\n    private _calendar;\n    private _i18n;\n    private _VALIDATORS;\n    private _model$;\n    private _dateSelect$;\n    private _state;\n    get model$(): Observable<DatepickerViewModel>;\n    get dateSelect$(): Observable<NgbDate>;\n    set(options: DatepickerServiceInputs): void;\n    constructor(_calendar: NgbCalendar, _i18n: NgbDatepickerI18n);\n    focus(date: NgbDate): void;\n    focusSelect(): void;\n    open(date: NgbDate): void;\n    select(date: NgbDate, options?: {\n        emitEvent?: boolean;\n    }): void;\n    toValidDate(date: NgbDateStruct, defaultValue?: NgbDate): NgbDate;\n    getMonth(struct: NgbDateStruct): import(\"./datepicker-view-model\").MonthViewModel;\n    private _nextState;\n    private _patchContexts;\n    private _updateState;\n}\n"]}